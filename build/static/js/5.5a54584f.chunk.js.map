{"version":3,"sources":["apis/auth.js","apis/customer_api.js","apis/sales_api.js","redux/actions/actions.js","utils/_consts.js","apis/_stub.js","apis/depot_api.js","apis/product_api.js"],"names":["get_token","username","password","a","fetch","URL","method","headers","body","JSON","stringify","raw_data","json","data","console","log","top_customer","year","month","api_stub_get","customer_list","customer_detail","customer_id","customer_create","code","name","api_stub_post","truck_create","customer","plate_no","first_name","last_name","add_customer","depot","sales_list","start_date","end_date","Date","getFullYear","getMonth","getDate","sales_create","product","lpo_no","truck","entry_no","order_no","date","vol_obs","vol_20","selling_price","paid","is_paid","upload_excel","file","depot_id","formData","FormData","append","rData","GET_TOKEN_ACTION","dispatch","then","undefined","token","type","GET_TOKEN","payload","errors","non_field_errors","GET_TOKEN_ERROR","e","catch","error","GET_TOKEN_ERROR_REMOVE_ACTION","GET_TOKEN_ERROR_REMOVE","USER_LOGGED_OUT_ACTION","USER_LOGGED_OUT","GET_TOP_CUSTOMER_ACTION","GET_TOP_CUSTOMER","UPDATE_TOP_CUSTOMER_ACTION","UPDATE_TOP_CUSTOMER","GET_CUSTOMER_LIST_ACTION","GET_CUSTOMER_LIST","GET_CUSTOMER_DETAIL_ACTION","GET_CUSTOMER_DETAIL","CUSTOMER_CREATE_ACTION","TRUCK_CREATE_ACTION","ADD_CUSTOMER_ACTION","ADD_CUSTOMER","ADD_CUSTOMER_REMOVE_ACTION","GET_DEPOT_LIST_ACTION","depot_list","GET_DEPOT_LIST","GET_DEPOT_MONTH_ACTION","depot_month","GET_DEPOT_MONTH","UPDATE_DEPOT_MONTH_ACTION","UPDATE_DEPOT_MONTH","GET_DEPOT_PRODUCT_MONTH_ACTION","depot_product_month","GET_DEPOT_PRODUCT_MONTH","UPDATE_DEPOT_PRODUCT_MONTH_ACTION","UPDATE_DEPOT_PRODUCT_MONTH","GET_DEPOT_SERIES_ACTION","id","depot_series","GET_DEPOT_SERIES","UPDATE_DEPOT_SERIES_ACTION","UPDATE_DEPOT_SERIES","GET_DEPOT_PRODUCT_SERIES_ACTION","depot_product_series","GET_DEPOT_PRODUCT_SERIES","GET_DEPOT_CUSTOMER_ACTION","depot_customer","GET_DEPOT_CUSTOMER","UPDATE_DEPOT_CUSTOMER_ACTION","UPDATE_DEPOT_CUSTOMER","GET_PRODUCT_SERIES_ACTION","product_series","GET_PRODUCT_SERIES","UPDATE_PRODUCT_SERIES_ACTION","UPDATE_PRODUCT_SERIES","GET_PRODUCT_MONTH_ACTION","product_month","GET_PRODUCT_MONTH","UPDATE_PRODUCT_MONTH_ACTION","UPDATE_PRODUCT_MONTH","GET_PRODUCT_TOP_CUSTOMER_ACTION","product_top_customer","GET_PRODUCT_TOP_CUSTOMER","GET_PRODUCT_LIST_ACTION","product_list","GET_PRODUCT_LIST","GET_SALES_LIST_ACTION","GET_SALES_LIST","UPDATE_GET_SALES_LIST_ACTION","UPDATE_GET_SALES_LIST","SALES_CREATE_ACTION","UPLOAD_EXCEL_ACTION","status","UPLOAD_EXCEL","UPLOAD_EXCEL_ERROR","UPDATE_DASHBOARD_METRIC_ACTION","metric","UPDATE_DASHBOARD_METRIC","UPDATE_SELECTION_DATES_ACTION","selection_dates","UPDATE_SELECTION_DATES","UPDATE_CURRENCY_TYPE_ACTION","currency_type","UPDATE_CURRENCY_TYPE","UPDATE_PRODUCT_MONTH_YEAR_ACTION","UPDATE_PRODUCT_MONTH_YEAR","UPDATE_DEPOT_MONTH_MONTH_ACTION","UPDATE_DEPOT_MONTH_MONTH","UPDATE_DEPOT_MONTH_YEAR_ACTION","UPDATE_DEPOT_MONTH_YEAR","UPDATE_DEPOT_PRODUCT_MONTH_YEAR_ACTION","UPDATE_DEPOT_PRODUCT_MONTH_YEAR","UPDATE_DEPOT_PRODUCT_MONTH_MONTH_ACTION","UPDATE_DEPOT_PRODUCT_MONTH_MONTH","UPDATE_DEPOT_ACTION","UPDATE_DEPOT","UPDATE_TOP_CUSTOMER_MONTH_ACTION","UPDATE_TOP_CUSTOMER_MONTH","UPDATE_TOP_CUSTOMER_YEAR_ACTION","UPDATE_TOP_CUSTOMER_YEAR","UPDATE_TOP_CUSTOMER_PRODUCT_ACTION","UPDATE_TOP_CUSTOMER_PRODUCT","UPDATE_DEPOT_CUSTOMER_MONTH_ACTION","UPDATE_DEPOT_CUSTOMER_MONTH","UPDATE_DEPOT_CUSTOMER_YEAR_ACTION","UPDATE_DEPOT_CUSTOMER_YEAR","UPDATE_SALES_DATE_ACTION","dates","UPDATE_SALES_DATE","UPDATE_CUSTOMER_YEAR_ACTION","UPDATE_CUSTOMER_YEAR","MONTHS","extension","store","getState","auth_reducer","is_staff","filter","obj","api_body","d"],"mappings":"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","file":"static/js/5.5a54584f.chunk.js","sourcesContent":["import { URL } from \"../utils/_consts\";\r\n\r\nexport async function get_token(username, password) {\r\n\r\n    try {\r\n        let raw_data = await fetch(`${URL}/accounts/get-token/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                username: username,\r\n                password: password,\r\n            })\r\n\r\n        });\r\n        let data = await raw_data.json();\r\n        raw_data = null;\r\n        return data\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n        throw error;\r\n\r\n    }\r\n}\r\n","import { api_stub_get, api_stub_post } from \"./_stub\";\r\n\r\nexport async function top_customer(year, month) {\r\n\r\n    return api_stub_get(`/customer/top/month/1/?year=${year}&month=${month}`)\r\n}\r\n\r\nexport async function customer_list() {\r\n\r\n    return api_stub_get(\"/customer/\", true)\r\n}\r\n\r\nexport async function customer_detail(customer_id) {\r\n    return api_stub_get(`/customer/${customer_id}/`)\r\n}\r\n\r\nexport async function customer_create(code, name) {\r\n    const body = {\r\n        code: code,\r\n        name: name,\r\n    }\r\n    return api_stub_post(`/customer/`, body)\r\n}\r\n\r\nexport async function truck_create(customer, plate_no, first_name, last_name) {\r\n    const body = {\r\n        customer: customer,\r\n        plate_no: plate_no,\r\n        first_name: first_name,\r\n        last_name: last_name,\r\n    }\r\n    return api_stub_post(`/customer/trucks/`, body)\r\n}\r\n\r\nexport async function add_customer(depot, customer) {\r\n    const body = {\r\n        depot: depot,\r\n        customer: customer,\r\n    }\r\n    return api_stub_post(`/customer/add/`, body)\r\n}","import { api_stub_get, api_stub_post } from \"./_stub\";\r\nimport { URL } from \"../utils/_consts\";\r\n\r\nexport async function sales_list(start_date, end_date) {\r\n    start_date = new Date(start_date)\r\n    start_date = `${start_date.getFullYear()}-${start_date.getMonth() + 1}-${start_date.getDate()}`\r\n    end_date = new Date(end_date)\r\n    end_date = `${end_date.getFullYear()}-${end_date.getMonth() + 1}-${end_date.getDate()}`\r\n    return api_stub_get(`/sales/?start_date=${start_date}&end_date=${end_date}`)\r\n}\r\n\r\nexport async function sales_create(start_date, end_date, product, lpo_no, customer, truck, depot, entry_no, order_no, date, vol_obs, vol_20, selling_price, paid) {\r\n\r\n    start_date = new Date(start_date)\r\n    start_date = `${start_date.getFullYear()}-${start_date.getMonth() + 1}-${start_date.getDate()}`\r\n    end_date = new Date(end_date)\r\n    end_date = `${end_date.getFullYear()}-${end_date.getMonth() + 1}-${end_date.getDate()}`\r\n    const body = {\r\n        product: product,\r\n        lpo_no: lpo_no,\r\n        customer: customer,\r\n        truck: truck,\r\n        depot: depot,\r\n        entry_no: entry_no,\r\n        order_no: order_no,\r\n        date: date,\r\n        vol_obs: vol_obs,\r\n        vol_20: vol_20,\r\n        selling_price: selling_price,\r\n        is_paid: paid\r\n    }\r\n\r\n    return api_stub_post(`/sales/?start_date=${start_date}&end_date=${end_date}`, body)\r\n}\r\n\r\nexport async function upload_excel(file, depot_id) {\r\n\r\n    try {\r\n        let formData = new FormData()\r\n        formData.append(\"file\", file)\r\n        let rData = await fetch(`${URL}/sales/${depot_id}/upload/`, {\r\n            method: 'POST',\r\n            headers: {},\r\n            body: formData\r\n        });\r\n        let data = await rData.json();\r\n        rData = null;\r\n        return data\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n        throw error;\r\n\r\n    }\r\n}","import { get_token } from \"../../apis/auth\";\r\nimport { depot_customer, depot_list, depot_month, depot_product_month, depot_product_series, depot_series } from \"../../apis/depot_api\";\r\nimport { product_list, product_month, product_series, product_top_customer } from \"../../apis/product_api\";\r\nimport { top_customer, customer_list, customer_detail, customer_create, truck_create, add_customer } from \"../../apis/customer_api\";\r\n\r\nimport {\r\n    GET_TOKEN, GET_TOKEN_ERROR, GET_TOKEN_ERROR_REMOVE, USER_LOGGED_OUT,\r\n\r\n    GET_TOP_CUSTOMER, GET_CUSTOMER_LIST, GET_CUSTOMER_DETAIL, CUSTOMER_CREATE_ERROR, ADD_CUSTOMER, UPDATE_TOP_CUSTOMER,\r\n\r\n    GET_DEPOT_MONTH, GET_DEPOT_PRODUCT_MONTH, GET_DEPOT_LIST, GET_DEPOT_SERIES, GET_DEPOT_PRODUCT_SERIES, GET_DEPOT_CUSTOMER,\r\n    UPDATE_DEPOT_MONTH, UPDATE_DEPOT_PRODUCT_MONTH, UPDATE_DEPOT_SERIES, UPDATE_DEPOT_CUSTOMER,\r\n\r\n    GET_PRODUCT_SERIES, GET_PRODUCT_MONTH, GET_PRODUCT_TOP_CUSTOMER, GET_PRODUCT_LIST, UPDATE_PRODUCT_SERIES, UPDATE_PRODUCT_MONTH,\r\n\r\n    GET_SALES_LIST, UPLOAD_EXCEL, UPLOAD_EXCEL_ERROR, UPDATE_GET_SALES_LIST,\r\n\r\n    UPDATE_DASHBOARD_METRIC, UPDATE_SELECTION_DATES, UPDATE_CURRENCY_TYPE, UPDATE_PRODUCT_MONTH_YEAR,\r\n    UPDATE_DEPOT_MONTH_MONTH, UPDATE_DEPOT_MONTH_YEAR, UPDATE_DEPOT_PRODUCT_MONTH_MONTH, UPDATE_DEPOT_PRODUCT_MONTH_YEAR,\r\n    UPDATE_DEPOT, UPDATE_DEPOT_CUSTOMER_MONTH, UPDATE_DEPOT_CUSTOMER_YEAR,\r\n    UPDATE_TOP_CUSTOMER_YEAR, UPDATE_TOP_CUSTOMER_MONTH, UPDATE_TOP_CUSTOMER_PRODUCT, UPDATE_SALES_DATE,\r\n\r\n    UPDATE_CUSTOMER_YEAR,\r\n} from \"./types\";\r\nimport { sales_list, sales_create, upload_excel } from \"../../apis/sales_api\";\r\n\r\n// AUTHENTICATION\r\nexport const GET_TOKEN_ACTION = (username, password) => async dispatch => {\r\n    await get_token(username, password).then(data => {\r\n        if (data.token !== undefined) {\r\n            dispatch({ type: GET_TOKEN, payload: data })\r\n        }\r\n        else {\r\n            try {\r\n                let errors = data.non_field_errors\r\n                dispatch({ type: GET_TOKEN_ERROR, payload: { \"\": errors } })\r\n            } catch (e) {\r\n                dispatch({ type: GET_TOKEN_ERROR, payload: data })\r\n            }\r\n        }\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const GET_TOKEN_ERROR_REMOVE_ACTION = () => dispatch => {\r\n    dispatch({ type: GET_TOKEN_ERROR_REMOVE, payload: null })\r\n}\r\n\r\nexport const USER_LOGGED_OUT_ACTION = () => dispatch => {\r\n    dispatch({ type: USER_LOGGED_OUT, payload: null })\r\n}\r\n\r\n// CUSTOMER\r\nexport const GET_TOP_CUSTOMER_ACTION = (year, month) => async dispatch => {\r\n    await top_customer(year, month).then(data => {\r\n        dispatch({ type: GET_TOP_CUSTOMER, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_TOP_CUSTOMER_ACTION = () => async dispatch => {\r\n    dispatch({ type: UPDATE_TOP_CUSTOMER, payload: true })\r\n}\r\nexport const GET_CUSTOMER_LIST_ACTION = () => async dispatch => {\r\n    await customer_list().then(data => {\r\n        dispatch({ type: GET_CUSTOMER_LIST, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const GET_CUSTOMER_DETAIL_ACTION = (customer_id) => async dispatch => {\r\n    await customer_detail(customer_id).then(data => {\r\n        dispatch({ type: GET_CUSTOMER_DETAIL, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const CUSTOMER_CREATE_ACTION = (code, name) => async dispatch => {\r\n    await customer_create(code, name).then(data => {\r\n        dispatch({ type: GET_CUSTOMER_LIST, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const TRUCK_CREATE_ACTION = (customer, plate_no, first_name, last_name) => async dispatch => {\r\n    await truck_create(customer, plate_no, first_name, last_name).then(data => {\r\n        dispatch({ type: GET_CUSTOMER_LIST, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const ADD_CUSTOMER_ACTION = (depot, customer) => async dispatch => {\r\n    await add_customer(depot, customer).then(data => {\r\n        dispatch({ type: ADD_CUSTOMER, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const ADD_CUSTOMER_REMOVE_ACTION = () => async dispatch => {\r\n    dispatch({ type: ADD_CUSTOMER, payload: undefined })\r\n}\r\n// DEPOT\r\nexport const GET_DEPOT_LIST_ACTION = () => async dispatch => {\r\n    await depot_list().then(data => {\r\n        dispatch({ type: GET_DEPOT_LIST, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const GET_DEPOT_MONTH_ACTION = (year) => async dispatch => {\r\n    await depot_month(year).then(data => {\r\n        dispatch({ type: GET_DEPOT_MONTH, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_DEPOT_MONTH_ACTION = () => async dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_MONTH, payload: true })\r\n}\r\n\r\nexport const GET_DEPOT_PRODUCT_MONTH_ACTION = (year) => async dispatch => {\r\n    await depot_product_month(year).then(data => {\r\n        dispatch({ type: GET_DEPOT_PRODUCT_MONTH, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_DEPOT_PRODUCT_MONTH_ACTION = () => async dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_PRODUCT_MONTH, payload: true })\r\n}\r\n\r\nexport const GET_DEPOT_SERIES_ACTION = (id, start_date, end_date) => async dispatch => {\r\n\r\n    await depot_series(id, start_date, end_date).then(data => {\r\n        dispatch({ type: GET_DEPOT_SERIES, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_DEPOT_SERIES_ACTION = () => async dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_SERIES, payload: true })\r\n}\r\n\r\nexport const GET_DEPOT_PRODUCT_SERIES_ACTION = (id, start_date, end_date) => async dispatch => {\r\n\r\n    await depot_product_series(id, start_date, end_date).then(data => {\r\n        dispatch({ type: GET_DEPOT_PRODUCT_SERIES, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const GET_DEPOT_CUSTOMER_ACTION = (id, year, month) => async dispatch => {\r\n    await depot_customer(id, year, month).then(data => {\r\n        dispatch({ type: GET_DEPOT_CUSTOMER, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_DEPOT_CUSTOMER_ACTION = () => async dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_CUSTOMER, payload: true })\r\n}\r\n// PRODUCT\r\nexport const GET_PRODUCT_SERIES_ACTION = (start_date, end_date) => async dispatch => {\r\n    await product_series(start_date, end_date).then(data => {\r\n        dispatch({ type: GET_PRODUCT_SERIES, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_PRODUCT_SERIES_ACTION = () => dispatch => {\r\n    dispatch({ type: UPDATE_PRODUCT_SERIES, payload: true })\r\n}\r\n\r\nexport const GET_PRODUCT_MONTH_ACTION = (year) => async dispatch => {\r\n    await product_month(year).then(data => {\r\n        dispatch({ type: GET_PRODUCT_MONTH, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_PRODUCT_MONTH_ACTION = () => dispatch => {\r\n\r\n    dispatch({ type: UPDATE_PRODUCT_MONTH, payload: true })\r\n}\r\nexport const GET_PRODUCT_TOP_CUSTOMER_ACTION = (year, month) => async dispatch => {\r\n    await product_top_customer(year, month).then(data => {\r\n        dispatch({ type: GET_PRODUCT_TOP_CUSTOMER, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const GET_PRODUCT_LIST_ACTION = () => async dispatch => {\r\n    await product_list().then(data => {\r\n        dispatch({ type: GET_PRODUCT_LIST, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\n\r\n// SALES\r\nexport const GET_SALES_LIST_ACTION = (start_date, end_date) => async dispatch => {\r\n    await sales_list(start_date, end_date).then(data => {\r\n        dispatch({ type: GET_SALES_LIST, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_GET_SALES_LIST_ACTION = () => async dispatch => {\r\n    dispatch({ type: UPDATE_GET_SALES_LIST, payload: true })\r\n}\r\nexport const SALES_CREATE_ACTION = (start_date, end_date, product, lpo_no, customer, truck, depot, entry_no, order_no, date, vol_obs, vol_20, selling_price, paid) => async dispatch => {\r\n    await sales_create(start_date, end_date, product, lpo_no, customer, truck, depot, entry_no, order_no, date, vol_obs, vol_20, selling_price, paid).then(data => {\r\n        dispatch({ type: GET_SALES_LIST, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPLOAD_EXCEL_ACTION = (file, depot_id) => async dispatch => {\r\n\r\n    await upload_excel(file, depot_id).then(data => {\r\n        if (data.status === \"success\") {\r\n            dispatch({ type: UPLOAD_EXCEL, payload: data })\r\n        } else {\r\n            dispatch({ type: UPLOAD_EXCEL_ERROR, payload: data })\r\n        }\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n// UPDATES\r\nexport const UPDATE_DASHBOARD_METRIC_ACTION = (metric) => dispatch => {\r\n    dispatch({ type: UPDATE_DASHBOARD_METRIC, payload: metric })\r\n}\r\n\r\nexport const UPDATE_SELECTION_DATES_ACTION = (selection_dates) => dispatch => {\r\n    dispatch({ type: UPDATE_SELECTION_DATES, payload: selection_dates })\r\n}\r\n\r\nexport const UPDATE_CURRENCY_TYPE_ACTION = (currency_type) => dispatch => {\r\n    dispatch({ type: UPDATE_CURRENCY_TYPE, payload: currency_type })\r\n}\r\n\r\nexport const UPDATE_PRODUCT_MONTH_YEAR_ACTION = (year) => dispatch => {\r\n    dispatch({ type: UPDATE_PRODUCT_MONTH_YEAR, payload: year })\r\n}\r\n\r\nexport const UPDATE_DEPOT_MONTH_MONTH_ACTION = (month) => dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_MONTH_MONTH, payload: month })\r\n}\r\n\r\nexport const UPDATE_DEPOT_MONTH_YEAR_ACTION = (year) => dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_MONTH_YEAR, payload: year })\r\n}\r\n\r\nexport const UPDATE_DEPOT_PRODUCT_MONTH_YEAR_ACTION = (year) => dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_PRODUCT_MONTH_YEAR, payload: year })\r\n}\r\n\r\nexport const UPDATE_DEPOT_PRODUCT_MONTH_MONTH_ACTION = (month) => dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_PRODUCT_MONTH_MONTH, payload: month })\r\n}\r\n\r\nexport const UPDATE_DEPOT_ACTION = (month) => dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT, payload: month })\r\n}\r\n\r\nexport const UPDATE_TOP_CUSTOMER_MONTH_ACTION = (month) => dispatch => {\r\n    dispatch({ type: UPDATE_TOP_CUSTOMER_MONTH, payload: month })\r\n}\r\n\r\nexport const UPDATE_TOP_CUSTOMER_YEAR_ACTION = (year) => dispatch => {\r\n    dispatch({ type: UPDATE_TOP_CUSTOMER_YEAR, payload: year })\r\n}\r\n\r\nexport const UPDATE_TOP_CUSTOMER_PRODUCT_ACTION = (product) => dispatch => {\r\n    dispatch({ type: UPDATE_TOP_CUSTOMER_PRODUCT, payload: product })\r\n}\r\n\r\nexport const UPDATE_DEPOT_CUSTOMER_MONTH_ACTION = (month) => dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_CUSTOMER_MONTH, payload: month })\r\n}\r\n\r\nexport const UPDATE_DEPOT_CUSTOMER_YEAR_ACTION = (year) => dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_CUSTOMER_YEAR, payload: year })\r\n}\r\n\r\nexport const UPDATE_SALES_DATE_ACTION = (dates) => dispatch => {\r\n    dispatch({ type: UPDATE_SALES_DATE, payload: dates })\r\n}\r\n\r\nexport const UPDATE_CUSTOMER_YEAR_ACTION = (year) => dispatch => {\r\n    dispatch({ type: UPDATE_CUSTOMER_YEAR, payload: year })\r\n}","// export const URL = location.protocol + '//' + location.host\r\nexport const URL = \"http://127.0.0.1:8000\"\r\nexport const MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]","import { URL } from \"../utils/_consts\";\r\nimport { store } from \"../redux/store\"\r\nimport { UPDATE_CURRENCY_TYPE_ACTION } from \"../redux/actions/actions\";\r\n\r\nexport const api_stub_get = async (extension, depot = false) => {\r\n    var token = store.getState().auth_reducer.token\r\n    try {\r\n        let raw_data = await fetch(`${URL}${extension}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": `Token ${token.token}`\r\n            },\r\n\r\n        });\r\n        let data = await raw_data.json();\r\n        if (token.is_staff === false && depot === false) {\r\n            data = data.filter(obj => {\r\n                return obj.name === token.depot\r\n            })\r\n        }\r\n        raw_data = null;\r\n\r\n        return data\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n        throw error;\r\n\r\n    }\r\n}\r\n\r\nexport const api_stub_post = async (extension, api_body) => {\r\n    var token = store.getState().auth_reducer.token\r\n    try {\r\n        let raw_data = await fetch(`${URL}${extension}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": `Token ${token.token}`\r\n            },\r\n            body: JSON.stringify(api_body)\r\n        });\r\n        let data = await raw_data.json();\r\n        raw_data = null;\r\n        return data\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n        throw error;\r\n\r\n    }\r\n}","import { api_stub_get } from \"./_stub\";\r\n\r\nexport async function depot_list() {\r\n    return api_stub_get(\"/depot/\")\r\n}\r\n\r\nexport async function depot_month(year) {\r\n    return api_stub_get(`/depot/month/?year=${year}`)\r\n}\r\nexport async function depot_product_month(year) {\r\n\r\n    return api_stub_get(`/product/depot/month/?year=${year}`)\r\n}\r\n\r\nexport async function depot_series(id, start_date, end_date) {\r\n    if (typeof (start_date) !== \"object\" && typeof (end_date) !== \"object\") {\r\n        start_date = new Date(start_date)\r\n        end_date = new Date(end_date)\r\n    }\r\n\r\n\r\n    start_date = `${start_date.getFullYear()}-${start_date.getMonth() + 1}-${start_date.getDate()}`\r\n\r\n    end_date = `${end_date.getFullYear()}-${end_date.getMonth() + 1}-${end_date.getDate()}`\r\n    const d = api_stub_get(`/depot/series/${id}/?start_date=${start_date}&end_date=${end_date}`, true)\r\n    return d\r\n}\r\n\r\nexport async function depot_product_series(id, start_date, end_date) {\r\n\r\n    if (typeof (start_date) !== \"object\" && typeof (end_date) !== \"object\") {\r\n        start_date = new Date(start_date)\r\n        end_date = new Date(end_date)\r\n    }\r\n\r\n    start_date = `${start_date.getFullYear()}-${start_date.getMonth() + 1}-${start_date.getDate()}`\r\n\r\n    end_date = `${end_date.getFullYear()}-${end_date.getMonth() + 1}-${end_date.getDate()}`\r\n    return api_stub_get(`/depot/product/series/${id}/?start_date=${start_date}&end_date=${end_date}`, true)\r\n}\r\n\r\nexport async function depot_customer(id, year, month) {\r\n    return api_stub_get(`/depot/customer/${id}/?year=${year}&month=${month}`, true)\r\n}","import { api_stub_get } from \"./_stub\";\r\n\r\n\r\nexport async function product_series(start_date, end_date) {\r\n    if (typeof (start_date) !== \"object\" && typeof (end_date) !== \"object\") {\r\n        start_date = new Date(start_date)\r\n        end_date = new Date(end_date)\r\n    }\r\n\r\n    start_date = `${start_date.getFullYear()}-${start_date.getMonth() + 1}-${start_date.getDate()}`\r\n\r\n    end_date = `${end_date.getFullYear()}-${end_date.getMonth() + 1}-${end_date.getDate()}`\r\n    return api_stub_get(`/product/series/?start_date=${start_date}&end_date=${end_date}`)\r\n}\r\n\r\nexport async function product_month(year) {\r\n    return api_stub_get(`/product/month/?year=${year}`)\r\n}\r\n\r\nexport async function product_top_customer(year, month) {\r\n    return api_stub_get(`/product/customer/top/?year=${year}&month=${month}`)\r\n}\r\n\r\nexport async function product_list() {\r\n    return api_stub_get(\"/product/\", true)\r\n}"],"sourceRoot":""}