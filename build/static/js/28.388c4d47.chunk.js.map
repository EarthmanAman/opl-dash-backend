{"version":3,"sources":["components/sales/index.js","components/utils/header.js","components/utils/layout.js"],"names":["SalesTable","lazy","SalesDateSelector","SalesPage","state","spinner","redirect","sales_date","props","componentDidMount","a","sales_list","token","undefined","setState","UPDATE_GET_SALES_LIST_ACTION","GET_SALES_LIST_ACTION","depot","start_date","end_date","this","to","header_title","fallback","from_customer","React","Component","getDerivedStateFromProps","update_get_sales_list","mapDispatchToProps","connect","auth_reducer","list_reducer","update_reducer","HeaderComponent","currency_type","handleCurrencyTypeChange","UPDATE_CURRENCY_TYPE_ACTION","className","Button","variant","size","style","marginRight","onClick","window","location","reload","color","Form","Group","controlId","Select","onChange","e","target","value","map","idx","first_name","last_name","Layout","handleLogOut","USER_LOGGED_OUT_ACTION","Container","fluid","src","URL","alt","is_staff","data","children"],"mappings":"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","file":"static/js/28.388c4d47.chunk.js","sourcesContent":["import React, { lazy, Suspense } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom';\r\nimport Layout from '../utils/layout'\r\nimport SpinnerComponent from \"../utils/spinner\"\r\n\r\nimport { GET_SALES_LIST_ACTION, UPDATE_GET_SALES_LIST_ACTION } from \"../../redux/actions/actions\"\r\n// import SalesTable from './sales_table';\r\n// import SalesDateSelector from './sales_date_selector';\r\n\r\nconst SalesTable = lazy(() => import('./sales_table'));\r\nconst SalesDateSelector = lazy(() => import('./sales_date_selector'));\r\n\r\nclass SalesPage extends React.Component {\r\n    state = {\r\n        spinner: false,\r\n        redirect: false,\r\n        sales_date: this.props.sales_date\r\n    }\r\n    static getDerivedStateFromProps = async (props, state) => {\r\n        const { token, sales_list, sales_date, update_get_sales_list } = props\r\n        if (token === undefined || token === null) {\r\n            state.redirect = true\r\n            return state\r\n        }\r\n        if (update_get_sales_list) {\r\n            state.spinner = true\r\n            state.sales_date = sales_date\r\n            // await props.GET_SALES_LIST_ACTION(sales_date.start_date, sales_date.end_date)\r\n            return state\r\n        }\r\n        else {\r\n            state.spinner = false\r\n            state.redirect = false\r\n        }\r\n\r\n        return state\r\n    }\r\n    componentDidMount = async () => {\r\n        const { sales_date, sales_list, token } = this.props\r\n        if (sales_list === undefined || sales_list === null) {\r\n            this.setState({ spinner: true })\r\n            await this.props.UPDATE_GET_SALES_LIST_ACTION()\r\n            await this.props.GET_SALES_LIST_ACTION(token.depot, sales_date.start_date, sales_date.end_date)\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Navigate to={\"/login\"} />\r\n        }\r\n\r\n        return (\r\n            <Layout header_title={\"Sales\"}>\r\n                {this.state.spinner ? <SpinnerComponent spinner={this.state.spinner} /> :\r\n                    <div>\r\n                        <Suspense fallback={<SpinnerComponent spinner={true} />}>\r\n                            <SalesDateSelector />\r\n                        </Suspense>\r\n                        <Suspense fallback={<SpinnerComponent spinner={true} />}>\r\n                            <SalesTable sales_list={this.props.sales_list} from_customer={false} />\r\n                        </Suspense>\r\n                    </div>}\r\n\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth_reducer.token,\r\n        sales_list: state.list_reducer.sales_list,\r\n        update_get_sales_list: state.list_reducer.update_get_sales_list,\r\n        sales_date: state.update_reducer.sales_date,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    GET_SALES_LIST_ACTION,\r\n    UPDATE_GET_SALES_LIST_ACTION,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SalesPage);\r\n","import React from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\"\r\nimport { connect } from \"react-redux\"\r\nimport { HiOutlineRefresh } from \"react-icons/hi\"\r\n\r\nimport { UPDATE_CURRENCY_TYPE_ACTION } from \"../../redux/actions/actions\"\r\n\r\nclass HeaderComponent extends React.Component {\r\n    state = {\r\n        currency_type: this.props.currency_type\r\n    }\r\n\r\n    static getDerivedStateFromProps = async (props, state) => {\r\n        state.currency_type = props.currency_type\r\n        return state\r\n    }\r\n\r\n    handleCurrencyTypeChange = async (currency_type) => {\r\n\r\n        this.props.UPDATE_CURRENCY_TYPE_ACTION(currency_type)\r\n    }\r\n    render() {\r\n        const currency_types = [\"Million\", \"Thousand\"]\r\n\r\n        return (\r\n            <div className=\"header\">\r\n                <h5>{this.props.header_title}</h5>\r\n                <div className=\"header__left\">\r\n                    <div>\r\n                        <Button variant=\"secondary\" size=\"sm\" style={{ marginRight: 10 }} onClick={() => window.location.reload()}>\r\n                            <HiOutlineRefresh color=\"green\" />\r\n                        </Button>\r\n                    </div>\r\n                    <Form.Group className=\"header__currency\" controlId=\"exampleForm.ControlInput1\">\r\n                        {/* <Form.Label>Product</Form.Label> */}\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleCurrencyTypeChange(e.target.value)}>\r\n                            <option>{this.state.currency_type}</option>\r\n                            {currency_types.map((currency_type, idx) =>\r\n                                this.state.currency_type === currency_type ? null : <option key={idx} value={currency_type}>{currency_type}</option>\r\n                            )}\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"secondary\" size=\"sm\">{this.props.first_name[0]}{this.props.last_name[0]}</Button>\r\n                    <p className=\"header__header-name\">{this.props.first_name} {this.props.last_name}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currency_type: state.update_reducer.currency_type,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    UPDATE_CURRENCY_TYPE_ACTION\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps, mapDispatchToProps\r\n)(HeaderComponent);","import React from \"react\";\r\nimport { Container, Button } from 'react-bootstrap'\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { MdLogout, MdDashboard, MdOutlineListAlt, MdPeople, MdAnchor } from \"react-icons/md\";\r\nimport { Link, Navigate, NavLink } from \"react-router-dom\";\r\nimport HeaderComponent from \"./header\";\r\nimport { URL } from \"../../utils/_consts\";\r\nimport { USER_LOGGED_OUT_ACTION } from \"../../redux/actions/actions\"\r\n\r\nclass Layout extends React.Component {\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    handleLogOut = () => {\r\n        this.props.USER_LOGGED_OUT_ACTION()\r\n        this.setState({ redirect: true })\r\n\r\n    }\r\n    render() {\r\n\r\n        if (this.state.redirect) {\r\n            return <Navigate to={\"/login\"} />\r\n        }\r\n        return (\r\n            <Container fluid className=\"layout_main\">\r\n\r\n                <div className=\"layout_main__side\">\r\n                    <Link to=\"/\" className=\"layout_main__logo\">\r\n                        <img src={`${URL}/static/opl_logo.png`} alt=\"logo\" className=\"layout_main__logo--img\" />\r\n                    </Link>\r\n\r\n                    <div className=\"layout_main__links\">\r\n                        {this.props.token.is_staff === true ?\r\n                            <NavLink to=\"/\" className=\"layout_main__button\">\r\n                                <h6><span className=\"layout_main__links--span\"><MdDashboard size={20} color=\"#D04D30\" /></span>Dashboard</h6>\r\n                            </NavLink> : null}\r\n\r\n                        <NavLink to=\"/depots\" className=\"layout_main__button\">\r\n                            <h6><span className=\"layout_main__links--span\"><MdAnchor /></span>Depots</h6>\r\n                        </NavLink>\r\n\r\n\r\n                        <NavLink to=\"/sale\" className=\"layout_main__button\">\r\n                            <h6><span className=\"layout_main__links--span\"><MdOutlineListAlt /></span>Sales</h6>\r\n                        </NavLink>\r\n\r\n                        {this.props.token.is_staff === true ?\r\n                            <NavLink to=\"/customers\" className=\"layout_main__button\">\r\n                                <h6><span className=\"layout_main__links--span\"><MdPeople /></span>Customers</h6>\r\n                            </NavLink> : null}\r\n                        <Button variant=\"transparent\" className=\"layout_main__button layout_main__logout\" onClick={this.handleLogOut}>\r\n                            <h6><span className=\"layout_main__links--span\"><MdLogout /></span>Log Out</h6>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"layout_main__component\">\r\n                    <HeaderComponent header_title={this.props.header_title} first_name={this.props.token.data.first_name} last_name={this.props.token.data.last_name} />\r\n                    {this.props.children}\r\n                </div>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth_reducer.token,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    USER_LOGGED_OUT_ACTION,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Layout);\r\n"],"sourceRoot":""}