{"version":3,"sources":["components/home/index.js","components/utils/_funcs.js","components/utils/header.js","components/utils/layout.js"],"names":["InputComponent","lazy","ChartSection","TopCustomers","HomePage","state","redirect","currency_type","props","spinner","componentDidMount","a","setState","end_date","selection_dates","endDate","start_date","startDate","GET_PRODUCT_SERIES_ACTION","GET_PRODUCT_MONTH_ACTION","product_month_year","GET_DEPOT_MONTH_ACTION","depot_month_year","top_customer_month","GET_TOP_CUSTOMER_ACTION","top_customer_year","this","to","header_title","fallback","product_series","product_month","depot_month","dashboard_metric","depot_month_month","update_product_series","update_product_month","update_depot_month","top_customer","product_top_customer","top_customer_product","update_top_customer","token","depot_product_month","undefined","React","Component","mapDispatchToProps","connect","auth_reducer","list_reducer","update_reducer","addMonths","date","months","setMonth","getMonth","currency_type_display","truncate","num","parseFloat","toString","match","HeaderComponent","handleCurrencyTypeChange","UPDATE_CURRENCY_TYPE_ACTION","className","Button","variant","size","style","marginRight","onClick","window","location","reload","color","Form","Group","controlId","Select","onChange","e","target","value","map","idx","first_name","last_name","getDerivedStateFromProps","Layout","handleLogOut","USER_LOGGED_OUT_ACTION","Container","fluid","src","URL","alt","is_staff","data","children"],"mappings":"yPAqBMA,EAAiBC,gBAAK,kBAAM,6EAC5BC,EAAeD,gBAAK,kBAAM,wDAC1BE,EAAeF,gBAAK,kBAAM,kCAG1BG,E,4MACFC,MAAQ,CACJC,UAAU,EACVC,cAAe,EAAKC,MAAMD,cAC1BE,SAAS,G,EAsBbC,kB,sBAAoB,8BAAAC,EAAA,6DAChB,EAAKC,SAAS,CAAEH,SAAS,IACrBI,EAAW,EAAKL,MAAMM,gBAAgBC,QACtCC,EAAa,EAAKR,MAAMM,gBAAgBG,UAH5B,SAKV,EAAKT,MAAMU,0BAA0BF,EAAYH,GALvC,uBAMV,EAAKL,MAAMW,yBAAyB,EAAKX,MAAMY,oBANrC,uBAOV,EAAKZ,MAAMa,uBAAuB,EAAKb,MAAMc,kBAPnC,UAQsB,KAAlC,EAAKd,MAAMe,mBARC,kCASN,EAAKf,MAAMgB,wBAAwB,EAAKhB,MAAMiB,kBAAmB,SAT3D,iDAWN,EAAKjB,MAAMgB,wBAAwB,EAAKhB,MAAMiB,kBAAmB,QAX3D,4C,4CAiBpB,WAEI,OAAiB,IADIC,KAAKrB,MAAlBC,SAEG,cAAC,IAAD,CAAUqB,GAAG,WAGpB,eAAC,IAAD,CAAQC,aAAc,YAAtB,UACI,cAAC,WAAD,CAAUC,SAAU,cAAC,IAAD,CAAkBpB,SAAS,IAA/C,SACI,cAACT,EAAD,MAGH0B,KAAKrB,MAAMI,QAAU,cAAC,IAAD,CAAkBA,QAASiB,KAAKrB,MAAMI,UACxD,gCACI,cAAC,WAAD,CAAUoB,SAAU,cAAC,IAAD,CAAkBpB,SAAS,IAA/C,SACI,cAACP,EAAD,CACI4B,eAAgBJ,KAAKlB,MAAMsB,eAC3BC,cAAeL,KAAKlB,MAAMuB,cAC1BC,YAAaN,KAAKlB,MAAMwB,YAExBlB,gBAAiBY,KAAKlB,MAAMM,gBAC5BmB,iBAAkBP,KAAKlB,MAAMyB,iBAC7B1B,cAAemB,KAAKlB,MAAMD,cAC1Ba,mBAAoBM,KAAKlB,MAAMY,mBAC/Bc,kBAAmBR,KAAKlB,MAAM0B,kBAC9BZ,iBAAkBI,KAAKlB,MAAMc,iBAC7Ba,sBAAuBT,KAAKlB,MAAM2B,sBAClCC,qBAAsBV,KAAKlB,MAAM4B,qBACjCC,mBAAoBX,KAAKlB,MAAM6B,uBAIvC,cAAC,WAAD,CAAUR,SAAU,cAAC,IAAD,CAAkBpB,SAAS,IAA/C,SACI,cAACN,EAAD,CACI8B,iBAAkBP,KAAKlB,MAAMyB,iBAC7BK,aAAcZ,KAAKlB,MAAM8B,aACzBf,mBAAoBG,KAAKlB,MAAMe,mBAC/BE,kBAAmBC,KAAKlB,MAAMiB,kBAC9Bc,qBAAsBb,KAAKlB,MAAM+B,qBACjCC,qBAAsBd,KAAKlB,MAAMgC,qBACjCC,oBAAqBf,KAAKlB,MAAMiC,iC,uCA3E5D,SAAgCjC,EAAOH,GACnC,IAAQqC,EAAyFlC,EAAzFkC,MAAOJ,EAAkF9B,EAAlF8B,aAAcN,EAAoExB,EAApEwB,YAAkCF,GAAkCtB,EAAvDmC,oBAAuDnC,EAAlCsB,gBAAgBC,EAAkBvB,EAAlBuB,cAE/E,YAAca,IAAVF,GAAiC,OAAVA,GACvBrC,EAAMC,UAAW,EACVD,QAEUuC,IAAjBN,QAA8CM,IAAhBZ,QAA+CY,IAAlBb,QAAkDa,IAAnBd,GAC1FzB,EAAMI,SAAU,EACTJ,IAGPA,EAAMI,SAAU,EACTJ,O,GApBIwC,IAAMC,WAwHvBC,EAAqB,CACvBvB,4BAEAH,2BAEAH,8BAA2BC,8BAGhB6B,uBArCS,SAAA3C,GACpB,MAAO,CACHqC,MAAOrC,EAAM4C,aAAaP,MAE1BJ,aAAcjC,EAAM6C,aAAaZ,aACjCG,oBAAqBpC,EAAM6C,aAAaT,oBAExCT,YAAa3B,EAAM6C,aAAalB,YAChCK,mBAAoBhC,EAAM6C,aAAab,mBACvCM,oBAAqBtC,EAAM6C,aAAaP,oBAExCb,eAAgBzB,EAAM6C,aAAapB,eACnCK,sBAAuB9B,EAAM6C,aAAaf,sBAC1CJ,cAAe1B,EAAM6C,aAAanB,cAClCK,qBAAsB/B,EAAM6C,aAAad,qBACzCG,qBAAsBlC,EAAM6C,aAAaX,qBAEzCN,iBAAkB5B,EAAM8C,eAAelB,iBACvCnB,gBAAiBT,EAAM8C,eAAerC,gBACtCP,cAAeF,EAAM8C,eAAe5C,cACpCa,mBAAoBf,EAAM8C,eAAe/B,mBACzCc,kBAAmB7B,EAAM8C,eAAejB,kBACxCZ,iBAAkBjB,EAAM8C,eAAe7B,iBACvCC,mBAAoBlB,EAAM8C,eAAe5B,mBACzCE,kBAAmBpB,EAAM8C,eAAe1B,kBACxCe,qBAAsBnC,EAAM8C,eAAeX,wBAa9BO,EADNC,CAEb5C,I,gCC5JF,sGAAO,IAAMgD,EAAY,SAACC,EAAMC,GAE5B,OADAD,EAAKE,SAASF,EAAKG,WAAaF,GACzBD,GAGEI,EAAwB,SAAClD,GAClC,MAAsB,YAAlBA,EACO,IAGA,KAIFmD,EAAW,SAACC,GACrB,OAAOC,WAAWD,EAAIE,WAAWC,MAAM,wBAAwB,M,+LCR7DC,E,4MACF1D,MAAQ,CACJE,cAAe,EAAKC,MAAMD,e,EAQ9ByD,yB,uCAA2B,WAAOzD,GAAP,SAAAI,EAAA,sDAEvB,EAAKH,MAAMyD,4BAA4B1D,GAFhB,2C,kGAI3B,WAAU,IAAD,OAGL,OACI,sBAAK2D,UAAU,SAAf,UACI,6BAAKxC,KAAKlB,MAAMoB,eAChB,sBAAKsC,UAAU,eAAf,UACI,8BACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,KAAK,KAAKC,MAAO,CAAEC,YAAa,IAAMC,QAAS,kBAAMC,OAAOC,SAASC,UAAjG,SACI,cAAC,IAAD,CAAkBC,MAAM,cAGhC,cAACC,EAAA,EAAKC,MAAN,CAAYZ,UAAU,mBAAmBa,UAAU,4BAAnD,SAEI,eAACF,EAAA,EAAKG,OAAN,CAAa,aAAW,yBAAyBX,KAAK,KAAKY,SAAU,SAACC,GAAD,OAAO,EAAKlB,yBAAyBkB,EAAEC,OAAOC,QAAnH,UACI,iCAAS1D,KAAKrB,MAAME,gBAdjB,CAAC,UAAW,YAeC8E,KAAI,SAAC9E,EAAe+E,GAAhB,OAChB,EAAKjF,MAAME,gBAAkBA,EAAgB,KAAO,wBAAkB6E,MAAO7E,EAAzB,SAAyCA,GAA5B+E,WAK7E,eAACnB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,KAAK,KAAjC,UAAuC3C,KAAKlB,MAAM+E,WAAW,GAAI7D,KAAKlB,MAAMgF,UAAU,MACtF,oBAAGtB,UAAU,sBAAb,UAAoCxC,KAAKlB,MAAM+E,WAA/C,IAA4D7D,KAAKlB,MAAMgF,uB,GArC7D3C,IAAMC,WAA9BiB,EAKK0B,yB,uCAA2B,WAAOjF,EAAOH,GAAd,SAAAM,EAAA,6DAC9BN,EAAME,cAAgBC,EAAMD,cADE,kBAEvBF,GAFuB,2C,wDAuCtC,IAMM0C,EAAqB,CACvBkB,iCAGWjB,eAVS,SAAA3C,GACpB,MAAO,CACHE,cAAeF,EAAM8C,eAAe5C,iBASvBwC,EADNC,CAEbe,G,QCrDI2B,E,4MACFrF,MAAQ,CACJC,UAAU,G,EAGdqF,aAAe,WACX,EAAKnF,MAAMoF,yBACX,EAAKhF,SAAS,CAAEN,UAAU,K,4CAG9B,WAEI,OAAIoB,KAAKrB,MAAMC,SACJ,cAAC,IAAD,CAAUqB,GAAI,WAGrB,eAACkE,EAAA,EAAD,CAAWC,OAAK,EAAC5B,UAAU,cAA3B,UAEI,sBAAKA,UAAU,oBAAf,UACI,cAAC,IAAD,CAAMvC,GAAG,IAAIuC,UAAU,oBAAvB,SACI,qBAAK6B,IAAG,UAAKC,IAAL,wBAAgCC,IAAI,OAAO/B,UAAU,6BAGjE,sBAAKA,UAAU,qBAAf,WACmC,IAA9BxC,KAAKlB,MAAMkC,MAAMwD,SACd,cAAC,IAAD,CAASvE,GAAG,IAAIuC,UAAU,sBAA1B,SACI,+BAAI,sBAAMA,UAAU,2BAAhB,SAA2C,cAAC,IAAD,CAAaG,KAAM,GAAIO,MAAM,cAA5E,iBACS,KAEjB,cAAC,IAAD,CAASjD,GAAG,UAAUuC,UAAU,sBAAhC,SACI,+BAAI,sBAAMA,UAAU,2BAAhB,SAA2C,cAAC,IAAD,MAA/C,cAIJ,cAAC,IAAD,CAASvC,GAAG,QAAQuC,UAAU,sBAA9B,SACI,+BAAI,sBAAMA,UAAU,2BAAhB,SAA2C,cAAC,IAAD,MAA/C,cAG2B,IAA9BxC,KAAKlB,MAAMkC,MAAMwD,SACd,cAAC,IAAD,CAASvE,GAAG,aAAauC,UAAU,sBAAnC,SACI,+BAAI,sBAAMA,UAAU,2BAAhB,SAA2C,cAAC,IAAD,MAA/C,iBACS,KACjB,cAACC,EAAA,EAAD,CAAQC,QAAQ,cAAcF,UAAU,0CAA0CM,QAAS9C,KAAKiE,aAAhG,SACI,+BAAI,sBAAMzB,UAAU,2BAAhB,SAA2C,cAAC,IAAD,MAA/C,qBAIZ,sBAAKA,UAAU,yBAAf,UACI,cAAC,EAAD,CAAiBtC,aAAcF,KAAKlB,MAAMoB,aAAc2D,WAAY7D,KAAKlB,MAAMkC,MAAMyD,KAAKZ,WAAYC,UAAW9D,KAAKlB,MAAMkC,MAAMyD,KAAKX,YACtI9D,KAAKlB,MAAM4F,mB,GAjDXvD,IAAMC,WA8DrBC,EAAqB,CACvB6C,4BAGW5C,iBAVS,SAAA3C,GACpB,MAAO,CACHqC,MAAOrC,EAAM4C,aAAaP,SAU9BK,EAFWC,CAGb0C","file":"static/js/19.1e9e7a1f.chunk.js","sourcesContent":["import React, { lazy, Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\n// import InputComponent from \"./input_section\"\r\nimport Layout from \"../utils/layout\";\r\n// import ChartSection from \"./chart_section\";\r\n// import TopCustomers from \"./customer\";\r\n\r\nimport {\r\n\r\n    GET_TOP_CUSTOMER_ACTION,\r\n\r\n    GET_DEPOT_MONTH_ACTION,\r\n\r\n    GET_PRODUCT_SERIES_ACTION, GET_PRODUCT_MONTH_ACTION,\r\n\r\n} from \"../../redux/actions/actions\";\r\nimport { addMonths } from \"../utils/_funcs\";\r\nimport SpinnerComponent from \"../utils/spinner\";\r\n\r\nconst InputComponent = lazy(() => import('./input_section'));\r\nconst ChartSection = lazy(() => import('./chart_section'));\r\nconst TopCustomers = lazy(() => import('./customer'));\r\n\r\n\r\nclass HomePage extends React.Component {\r\n    state = {\r\n        redirect: false,\r\n        currency_type: this.props.currency_type,\r\n        spinner: false,\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { token, top_customer, depot_month, depot_product_month, product_series, product_month } = props\r\n\r\n        if (token === undefined || token === null) {\r\n            state.redirect = true\r\n            return state\r\n        }\r\n        if (top_customer !== undefined && depot_month !== undefined && product_month !== undefined && product_series !== undefined) {\r\n            state.spinner = false\r\n            return state\r\n        }\r\n        else {\r\n            state.spinner = true\r\n            return state\r\n        }\r\n\r\n        return null\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        this.setState({ spinner: true })\r\n        let end_date = this.props.selection_dates.endDate\r\n        let start_date = this.props.selection_dates.startDate\r\n\r\n        await this.props.GET_PRODUCT_SERIES_ACTION(start_date, end_date)\r\n        await this.props.GET_PRODUCT_MONTH_ACTION(this.props.product_month_year)\r\n        await this.props.GET_DEPOT_MONTH_ACTION(this.props.depot_month_year)\r\n        if (this.props.top_customer_month === 13) {\r\n            await this.props.GET_TOP_CUSTOMER_ACTION(this.props.top_customer_year, \"False\")\r\n        } else {\r\n            await this.props.GET_TOP_CUSTOMER_ACTION(this.props.top_customer_year, \"True\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { redirect } = this.state\r\n        if (redirect === true) {\r\n            return <Navigate to=\"/login\" />\r\n        }\r\n        return (\r\n            <Layout header_title={\"Dashboard\"} >\r\n                <Suspense fallback={<SpinnerComponent spinner={true} />}>\r\n                    <InputComponent />\r\n                </Suspense>\r\n\r\n                {this.state.spinner ? <SpinnerComponent spinner={this.state.spinner} /> :\r\n                    <div>\r\n                        <Suspense fallback={<SpinnerComponent spinner={true} />}>\r\n                            <ChartSection\r\n                                product_series={this.props.product_series}\r\n                                product_month={this.props.product_month}\r\n                                depot_month={this.props.depot_month}\r\n\r\n                                selection_dates={this.props.selection_dates}\r\n                                dashboard_metric={this.props.dashboard_metric}\r\n                                currency_type={this.props.currency_type}\r\n                                product_month_year={this.props.product_month_year}\r\n                                depot_month_month={this.props.depot_month_month}\r\n                                depot_month_year={this.props.depot_month_year}\r\n                                update_product_series={this.props.update_product_series}\r\n                                update_product_month={this.props.update_product_month}\r\n                                update_depot_month={this.props.update_depot_month}\r\n\r\n                            />\r\n                        </Suspense>\r\n                        <Suspense fallback={<SpinnerComponent spinner={true} />}>\r\n                            <TopCustomers\r\n                                dashboard_metric={this.props.dashboard_metric}\r\n                                top_customer={this.props.top_customer}\r\n                                top_customer_month={this.props.top_customer_month}\r\n                                top_customer_year={this.props.top_customer_year}\r\n                                product_top_customer={this.props.product_top_customer}\r\n                                top_customer_product={this.props.top_customer_product}\r\n                                update_top_customer={this.props.update_top_customer}\r\n                            />\r\n                        </Suspense>\r\n                    </div>}\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth_reducer.token,\r\n\r\n        top_customer: state.list_reducer.top_customer,\r\n        update_top_customer: state.list_reducer.update_top_customer,\r\n\r\n        depot_month: state.list_reducer.depot_month,\r\n        update_depot_month: state.list_reducer.update_depot_month,\r\n        depot_product_month: state.list_reducer.depot_product_month,\r\n\r\n        product_series: state.list_reducer.product_series,\r\n        update_product_series: state.list_reducer.update_product_series,\r\n        product_month: state.list_reducer.product_month,\r\n        update_product_month: state.list_reducer.update_product_month,\r\n        product_top_customer: state.list_reducer.product_top_customer,\r\n\r\n        dashboard_metric: state.update_reducer.dashboard_metric,\r\n        selection_dates: state.update_reducer.selection_dates,\r\n        currency_type: state.update_reducer.currency_type,\r\n        product_month_year: state.update_reducer.product_month_year,\r\n        depot_month_month: state.update_reducer.depot_month_month,\r\n        depot_month_year: state.update_reducer.depot_month_year,\r\n        top_customer_month: state.update_reducer.top_customer_month,\r\n        top_customer_year: state.update_reducer.top_customer_year,\r\n        top_customer_product: state.update_reducer.top_customer_product,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    GET_TOP_CUSTOMER_ACTION,\r\n\r\n    GET_DEPOT_MONTH_ACTION,\r\n\r\n    GET_PRODUCT_SERIES_ACTION, GET_PRODUCT_MONTH_ACTION,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps, mapDispatchToProps\r\n)(HomePage);","export const addMonths = (date, months) => {\r\n    date.setMonth(date.getMonth() + months);\r\n    return date;\r\n}\r\n\r\nexport const currency_type_display = (currency_type) => {\r\n    if (currency_type === \"Million\") {\r\n        return \"m\"\r\n    }\r\n    else {\r\n        return \"k\"\r\n    }\r\n}\r\n\r\nexport const truncate = (num) => {\r\n    return parseFloat(num.toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0])\r\n}","import React from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\"\r\nimport { connect } from \"react-redux\"\r\nimport { HiOutlineRefresh } from \"react-icons/hi\"\r\n\r\nimport { UPDATE_CURRENCY_TYPE_ACTION } from \"../../redux/actions/actions\"\r\n\r\nclass HeaderComponent extends React.Component {\r\n    state = {\r\n        currency_type: this.props.currency_type\r\n    }\r\n\r\n    static getDerivedStateFromProps = async (props, state) => {\r\n        state.currency_type = props.currency_type\r\n        return state\r\n    }\r\n\r\n    handleCurrencyTypeChange = async (currency_type) => {\r\n\r\n        this.props.UPDATE_CURRENCY_TYPE_ACTION(currency_type)\r\n    }\r\n    render() {\r\n        const currency_types = [\"Million\", \"Thousand\"]\r\n\r\n        return (\r\n            <div className=\"header\">\r\n                <h5>{this.props.header_title}</h5>\r\n                <div className=\"header__left\">\r\n                    <div>\r\n                        <Button variant=\"secondary\" size=\"sm\" style={{ marginRight: 10 }} onClick={() => window.location.reload()}>\r\n                            <HiOutlineRefresh color=\"green\" />\r\n                        </Button>\r\n                    </div>\r\n                    <Form.Group className=\"header__currency\" controlId=\"exampleForm.ControlInput1\">\r\n                        {/* <Form.Label>Product</Form.Label> */}\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleCurrencyTypeChange(e.target.value)}>\r\n                            <option>{this.state.currency_type}</option>\r\n                            {currency_types.map((currency_type, idx) =>\r\n                                this.state.currency_type === currency_type ? null : <option key={idx} value={currency_type}>{currency_type}</option>\r\n                            )}\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"secondary\" size=\"sm\">{this.props.first_name[0]}{this.props.last_name[0]}</Button>\r\n                    <p className=\"header__header-name\">{this.props.first_name} {this.props.last_name}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currency_type: state.update_reducer.currency_type,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    UPDATE_CURRENCY_TYPE_ACTION\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps, mapDispatchToProps\r\n)(HeaderComponent);","import React from \"react\";\r\nimport { Container, Button } from 'react-bootstrap'\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { MdLogout, MdDashboard, MdOutlineListAlt, MdPeople, MdAnchor } from \"react-icons/md\";\r\nimport { Link, Navigate, NavLink } from \"react-router-dom\";\r\nimport HeaderComponent from \"./header\";\r\nimport { URL } from \"../../utils/_consts\";\r\nimport { USER_LOGGED_OUT_ACTION } from \"../../redux/actions/actions\"\r\n\r\nclass Layout extends React.Component {\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    handleLogOut = () => {\r\n        this.props.USER_LOGGED_OUT_ACTION()\r\n        this.setState({ redirect: true })\r\n\r\n    }\r\n    render() {\r\n\r\n        if (this.state.redirect) {\r\n            return <Navigate to={\"/login\"} />\r\n        }\r\n        return (\r\n            <Container fluid className=\"layout_main\">\r\n\r\n                <div className=\"layout_main__side\">\r\n                    <Link to=\"/\" className=\"layout_main__logo\">\r\n                        <img src={`${URL}/static/opl_logo.png`} alt=\"logo\" className=\"layout_main__logo--img\" />\r\n                    </Link>\r\n\r\n                    <div className=\"layout_main__links\">\r\n                        {this.props.token.is_staff === true ?\r\n                            <NavLink to=\"/\" className=\"layout_main__button\">\r\n                                <h6><span className=\"layout_main__links--span\"><MdDashboard size={20} color=\"#D04D30\" /></span>Dashboard</h6>\r\n                            </NavLink> : null}\r\n\r\n                        <NavLink to=\"/depots\" className=\"layout_main__button\">\r\n                            <h6><span className=\"layout_main__links--span\"><MdAnchor /></span>Depots</h6>\r\n                        </NavLink>\r\n\r\n\r\n                        <NavLink to=\"/sale\" className=\"layout_main__button\">\r\n                            <h6><span className=\"layout_main__links--span\"><MdOutlineListAlt /></span>Sales</h6>\r\n                        </NavLink>\r\n\r\n                        {this.props.token.is_staff === true ?\r\n                            <NavLink to=\"/customers\" className=\"layout_main__button\">\r\n                                <h6><span className=\"layout_main__links--span\"><MdPeople /></span>Customers</h6>\r\n                            </NavLink> : null}\r\n                        <Button variant=\"transparent\" className=\"layout_main__button layout_main__logout\" onClick={this.handleLogOut}>\r\n                            <h6><span className=\"layout_main__links--span\"><MdLogout /></span>Log Out</h6>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"layout_main__component\">\r\n                    <HeaderComponent header_title={this.props.header_title} first_name={this.props.token.data.first_name} last_name={this.props.token.data.last_name} />\r\n                    {this.props.children}\r\n                </div>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth_reducer.token,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    USER_LOGGED_OUT_ACTION,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Layout);\r\n"],"sourceRoot":""}