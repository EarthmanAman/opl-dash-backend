{"version":3,"sources":["components/customer/index.js","components/utils/header.js","components/utils/layout.js","../node_modules/react-bootstrap/esm/Row.js"],"names":["CustomerMonth","lazy","CustomerSelect","SalesDateSelector","SalesTable","CustomerTop","getCustomers","sales","customer","filter","or","name","CustomerPage","state","redirect","spinner","customer_spinner","didnt_load","customer_list","props","customer_name","customer_id","dashboard_metric","currency_type","customer_year","onSearchChange","e","undefined","setState","onSearch","preventDefault","toLowerCase","includes","onClick","index","a","id","parseInt","length","GET_CUSTOMER_DETAIL_ACTION","componentDidMount","UPDATE_CUSTOMER_YEAR_ACTION","Date","getFullYear","this","customer_data","revenue","to","header_title","customer_detail","fallback","xs","className","onSubmit","type","placeholder","size","onChange","target","value","variant","map","idx","style","position","sales_list","from_customer","React","Component","getDerivedStateFromProps","token","mapDispatchToProps","GET_CUSTOMER_LIST_ACTION","connect","auth_reducer","list_reducer","update_reducer","HeaderComponent","handleCurrencyTypeChange","UPDATE_CURRENCY_TYPE_ACTION","Button","marginRight","window","location","reload","color","Form","Group","controlId","Select","first_name","last_name","Layout","handleLogOut","USER_LOGGED_OUT_ACTION","Container","fluid","src","URL","alt","is_staff","data","children","Row","ref","bsPrefix","as","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","classNames","displayName"],"mappings":"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","file":"static/js/17.1a9f35ef.chunk.js","sourcesContent":["import React, { lazy, Suspense } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, Form, FormControl, Button } from 'react-bootstrap';\r\nimport { Navigate } from 'react-router-dom';\r\nimport Layout from '../utils/layout';\r\nimport {\r\n    GET_CUSTOMER_LIST_ACTION,\r\n    GET_CUSTOMER_DETAIL_ACTION,\r\n    UPDATE_CUSTOMER_YEAR_ACTION,\r\n} from \"../../redux/actions/actions\"\r\n// import CustomerTop from \"./top\"\r\n\r\nimport SpinnerComponent from '../utils/spinner';\r\n// import CustomerMonth from './charts/customer_month';\r\n// import CustomerSelect from '../utils/select/customer_select';\r\n// import SalesDateSelector from '../sales/sales_date_selector';\r\n// import SalesTable from '../sales/sales_table';\r\n\r\nconst CustomerMonth = lazy(() => import('./charts/customer_month'));\r\nconst CustomerSelect = lazy(() => import('../utils/select/customer_select'));\r\nconst SalesDateSelector = lazy(() => import('../sales/sales_date_selector'));\r\nconst SalesTable = lazy(() => import('../sales/sales_table'));\r\nconst CustomerTop = lazy(() => import('./top'))\r\n\r\nconst getCustomers = (sales, customer) => {\r\n    sales = sales.filter(function (or) {\r\n        return or.customer === customer.name\r\n    });\r\n\r\n    return sales\r\n}\r\nclass CustomerPage extends React.Component {\r\n    state = {\r\n        redirect: false,\r\n        spinner: false,\r\n        customer_spinner: false,\r\n        didnt_load: false,\r\n        customer_list: this.props.customer_list ? this.props.customer_list : [],\r\n        customer: this.props.customer_list ? this.props.customer_list[0] : null,\r\n        customer_name: null,\r\n        customer_id: null,\r\n        dashboard_metric: this.props.dashboard_metric,\r\n        currency_type: this.props.currency_type,\r\n        customer_year: this.props.customer_year,\r\n\r\n        sales: [],\r\n    }\r\n\r\n    static getDerivedStateFromProps = async (props, state) => {\r\n        const { token, customer_list, customer_detail } = props\r\n        if (token === undefined || token === \"\") {\r\n            state.redirect = true\r\n            return state\r\n        }\r\n        else {\r\n\r\n            if (state.customer_id === null || customer_detail === undefined) {\r\n\r\n                state.customer_id = customer_list[0].id\r\n                state.spinner = false\r\n                state.customer_spinner = true\r\n                await props.GET_CUSTOMER_DETAIL_ACTION(customer_list[0].id)\r\n            }\r\n            else if (customer_detail !== undefined && state.customer_id == customer_detail.id) {\r\n\r\n                state.customer = customer_detail\r\n                state.sales = props.sales ? getCustomers(props.sales, customer_detail) : []\r\n                state.customer_spinner = false\r\n                state.spinner = false\r\n            }\r\n            else if (customer_detail !== undefined && state.customer_id !== customer_detail.id) {\r\n                state.customer_spinner = true\r\n            }\r\n            else {\r\n                state.spinner = false\r\n                state.customer_spinner = false\r\n                state.customer_id = props.customer_detail.id\r\n            }\r\n        }\r\n\r\n        state.customer_list = customer_list\r\n        state.dashboard_metric = props.dashboard_metric\r\n        state.currency_type = props.currency_type\r\n        state.customer_year = props.customer_year\r\n\r\n        return state\r\n    }\r\n    onSearchChange = (e) => {\r\n\r\n        if (e === \"\" || e === undefined || e === null) {\r\n            this.setState({ customer_list: this.props.customer_list })\r\n        } else {\r\n            this.setState({ customer_name: e })\r\n        }\r\n    }\r\n\r\n    onSearch = (e) => {\r\n        e.preventDefault()\r\n        const { customer_name } = this.state\r\n        let customer_list = this.props.customer_list\r\n        customer_list = customer_list.filter(function (or) {\r\n            return or.name.toLowerCase().includes(customer_name.toLowerCase())\r\n        });\r\n\r\n\r\n        this.setState({ customer_list: customer_list })\r\n    }\r\n\r\n    onClick = async (index) => {\r\n        let customer_list = this.state.customer_list\r\n        customer_list = customer_list.filter(function (or) {\r\n            return or.id === parseInt(index)\r\n        });\r\n\r\n        if (customer_list.length > 0) {\r\n            await this.setState({ customer_id: customer_list[0].id, customer_spinner: true })\r\n            await this.props.GET_CUSTOMER_DETAIL_ACTION(customer_list[0].id)\r\n        }\r\n\r\n    }\r\n    componentDidMount = async () => {\r\n        this.setState({ spinner: true })\r\n        await this.props.UPDATE_CUSTOMER_YEAR_ACTION(new Date().getFullYear())\r\n    }\r\n\r\n\r\n    render() {\r\n        const { spinner, customer_year } = this.state\r\n        let customer_data = null\r\n\r\n        try {\r\n            customer_data = this.state.customer.revenue\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n        if (this.state.redirect) {\r\n            return <Navigate to={\"/login\"} />\r\n        }\r\n\r\n        return (\r\n            <Layout header_title={\"CUSTOMERS\"}>\r\n                {(spinner || this.props.customer_list === undefined || this.props.customer_detail === undefined) ? <SpinnerComponent spinner={spinner} /> : null}\r\n                {this.props.customer_list !== undefined ?\r\n                    <div>\r\n                        <div>\r\n                            <Suspense fallback={<SpinnerComponent spinner={true} />}>\r\n                                <CustomerSelect />\r\n                            </Suspense>\r\n                        </div>\r\n                        <Row>\r\n                            <Col xs={3}>\r\n                                <div className=\"customer-side chart-area\">\r\n                                    <h6>Pick a customer</h6>\r\n\r\n                                    <Form className=\"d-flex\" onSubmit={this.onSearch}>\r\n                                        <FormControl\r\n                                            type=\"search\"\r\n                                            placeholder=\"Search\"\r\n                                            className=\"me-2\"\r\n                                            aria-label=\"Search\"\r\n                                            size='sm'\r\n                                            onChange={(e) => this.onSearchChange(e.target.value)}\r\n                                        />\r\n                                        <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\">Search</Button>\r\n                                    </Form>\r\n\r\n                                    <div>\r\n                                        {this.state.customer_list.map((customer, idx) =>\r\n                                            <div key={idx} className={\"customer-side__scroll\"}>\r\n                                                {this.state.customer_id === customer.id ?\r\n\r\n                                                    <Button className='customer-side__customer customer-side__active' variant=\"transparent\" onClick={() => this.onClick(customer.id)}>\r\n\r\n                                                        <div className='customer-side__info'>\r\n                                                            <div className='customer-side__profile'>\r\n\r\n                                                            </div>\r\n                                                            <div>\r\n                                                                <h6 className='customer-side__name'>{customer.name}</h6>\r\n                                                                {/* <p className='customer-location'>{customer.location}</p> */}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Button> :\r\n                                                    <Button className='customer-side__customer' variant=\"transparent\" onClick={() => this.onClick(customer.id)}>\r\n\r\n                                                        <div className='customer-side__info'>\r\n                                                            <div className='customer-side__profile'>\r\n\r\n                                                            </div>\r\n                                                            <div>\r\n                                                                <h6 className='customer-side__name'>{customer.name}</h6>\r\n                                                                {/* <p className='customer-location'>{customer.location}</p> */}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Button>}\r\n                                            </div>\r\n                                        )}\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </Col>\r\n                            <Col xs={9} style={{ position: \"relative\" }}>\r\n                                {this.state.customer_spinner || customer_data === undefined ? <SpinnerComponent spinner={this.state.customer_spinner} /> :\r\n                                    <div>\r\n                                        <Suspense fallback={<SpinnerComponent spinner={true} />}>\r\n                                            <CustomerTop\r\n                                                customer={customer_data}\r\n                                                name={this.state.customer ? this.state.customer.name : null}\r\n                                                customer_year={customer_year}\r\n                                            />\r\n                                        </Suspense>\r\n                                        <Suspense fallback={<SpinnerComponent spinner={true} />}>\r\n                                            <CustomerMonth\r\n                                                customer={customer_data}\r\n                                                customer_year={customer_year}\r\n                                                dashboard_metric={this.state.dashboard_metric}\r\n                                                currency_type={this.state.currency_type}\r\n                                            />\r\n                                        </Suspense>\r\n\r\n                                        <div>\r\n                                            <Suspense fallback={<SpinnerComponent spinner={true} />}>\r\n                                                <SalesDateSelector />\r\n                                            </Suspense>\r\n                                            <Suspense fallback={<SpinnerComponent spinner={true} />}>\r\n                                                <SalesTable sales_list={this.state.sales} from_customer={true} />\r\n                                            </Suspense>\r\n                                        </div>\r\n\r\n                                    </div>}\r\n\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </div> : null\r\n                }\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth_reducer.token,\r\n        customer_list: state.list_reducer.customer_list,\r\n        customer_detail: state.list_reducer.customer_detail,\r\n        dashboard_metric: state.update_reducer.dashboard_metric,\r\n        currency_type: state.update_reducer.currency_type,\r\n        customer_year: state.update_reducer.customer_year,\r\n\r\n        sales: state.list_reducer.sales_list,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    GET_CUSTOMER_LIST_ACTION,\r\n    GET_CUSTOMER_DETAIL_ACTION,\r\n    UPDATE_CUSTOMER_YEAR_ACTION,\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CustomerPage);\r\n","import React from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\"\r\nimport { connect } from \"react-redux\"\r\nimport { HiOutlineRefresh } from \"react-icons/hi\"\r\n\r\nimport { UPDATE_CURRENCY_TYPE_ACTION } from \"../../redux/actions/actions\"\r\n\r\nclass HeaderComponent extends React.Component {\r\n    state = {\r\n        currency_type: this.props.currency_type\r\n    }\r\n\r\n    static getDerivedStateFromProps = async (props, state) => {\r\n        state.currency_type = props.currency_type\r\n        return state\r\n    }\r\n\r\n    handleCurrencyTypeChange = async (currency_type) => {\r\n\r\n        this.props.UPDATE_CURRENCY_TYPE_ACTION(currency_type)\r\n    }\r\n    render() {\r\n        const currency_types = [\"Million\", \"Thousand\"]\r\n\r\n        return (\r\n            <div className=\"header\">\r\n                <h5>{this.props.header_title}</h5>\r\n                <div className=\"header__left\">\r\n                    <div>\r\n                        <Button variant=\"secondary\" size=\"sm\" style={{ marginRight: 10 }} onClick={() => window.location.reload()}>\r\n                            <HiOutlineRefresh color=\"green\" />\r\n                        </Button>\r\n                    </div>\r\n                    <Form.Group className=\"header__currency\" controlId=\"exampleForm.ControlInput1\">\r\n                        {/* <Form.Label>Product</Form.Label> */}\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleCurrencyTypeChange(e.target.value)}>\r\n                            <option>{this.state.currency_type}</option>\r\n                            {currency_types.map((currency_type, idx) =>\r\n                                this.state.currency_type === currency_type ? null : <option key={idx} value={currency_type}>{currency_type}</option>\r\n                            )}\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"secondary\" size=\"sm\">{this.props.first_name[0]}{this.props.last_name[0]}</Button>\r\n                    <p className=\"header__header-name\">{this.props.first_name} {this.props.last_name}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currency_type: state.update_reducer.currency_type,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    UPDATE_CURRENCY_TYPE_ACTION\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps, mapDispatchToProps\r\n)(HeaderComponent);","import React from \"react\";\r\nimport { Container, Button } from 'react-bootstrap'\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { MdLogout, MdDashboard, MdOutlineListAlt, MdPeople, MdAnchor } from \"react-icons/md\";\r\nimport { Link, Navigate, NavLink } from \"react-router-dom\";\r\nimport HeaderComponent from \"./header\";\r\nimport { URL } from \"../../utils/_consts\";\r\nimport { USER_LOGGED_OUT_ACTION } from \"../../redux/actions/actions\"\r\n\r\nclass Layout extends React.Component {\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    handleLogOut = () => {\r\n        this.props.USER_LOGGED_OUT_ACTION()\r\n        this.setState({ redirect: true })\r\n\r\n    }\r\n    render() {\r\n\r\n        if (this.state.redirect) {\r\n            return <Navigate to={\"/login\"} />\r\n        }\r\n        return (\r\n            <Container fluid className=\"layout_main\">\r\n\r\n                <div className=\"layout_main__side\">\r\n                    <Link to=\"/\" className=\"layout_main__logo\">\r\n                        <img src={`${URL}/static/opl_logo.png`} alt=\"logo\" className=\"layout_main__logo--img\" />\r\n                    </Link>\r\n\r\n                    <div className=\"layout_main__links\">\r\n                        {this.props.token.is_staff === true ?\r\n                            <NavLink to=\"/\" className=\"layout_main__button\">\r\n                                <h6><span className=\"layout_main__links--span\"><MdDashboard size={20} color=\"#D04D30\" /></span>Dashboard</h6>\r\n                            </NavLink> : null}\r\n\r\n                        <NavLink to=\"/depots\" className=\"layout_main__button\">\r\n                            <h6><span className=\"layout_main__links--span\"><MdAnchor /></span>Depots</h6>\r\n                        </NavLink>\r\n\r\n\r\n                        <NavLink to=\"/sale\" className=\"layout_main__button\">\r\n                            <h6><span className=\"layout_main__links--span\"><MdOutlineListAlt /></span>Sales</h6>\r\n                        </NavLink>\r\n\r\n                        {this.props.token.is_staff === true ?\r\n                            <NavLink to=\"/customers\" className=\"layout_main__button\">\r\n                                <h6><span className=\"layout_main__links--span\"><MdPeople /></span>Customers</h6>\r\n                            </NavLink> : null}\r\n                        <Button variant=\"transparent\" className=\"layout_main__button layout_main__logout\" onClick={this.handleLogOut}>\r\n                            <h6><span className=\"layout_main__links--span\"><MdLogout /></span>Log Out</h6>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"layout_main__component\">\r\n                    <HeaderComponent header_title={this.props.header_title} first_name={this.props.token.data.first_name} last_name={this.props.token.data.last_name} />\r\n                    {this.props.children}\r\n                </div>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth_reducer.token,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    USER_LOGGED_OUT_ACTION,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Layout);\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"sourceRoot":""}