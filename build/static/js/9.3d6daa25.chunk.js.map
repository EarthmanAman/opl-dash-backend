{"version":3,"sources":["components/sales/sales_date_selector.js","components/sales/download.js","components/sales/sales_table.js","components/customer/top.js","components/customer/charts/customer_month.js","components/utils/select/customer_select.js","components/customer/index.js","apis/auth.js","apis/customer_api.js","apis/sales_api.js","redux/actions/actions.js","utils/_consts.js","apis/_stub.js","components/utils/_funcs.js","apis/depot_api.js","apis/product_api.js","components/utils/header.js","components/utils/layout.js"],"names":["SalesDateSelector","state","startDate","Date","props","sales_date","start_date","endDate","end_date","key","date","cost","handleSelect","ranges","a","setState","selection","dates","UPDATE_GET_SALES_LIST_ACTION","UPDATE_SALES_DATE_ACTION","GET_SALES_LIST_ACTION","this","className","trigger","size","color","toDateString","position","onChange","showSelectionPreview","moveRangeOnFirstSelection","months","direction","preventSnapRefocus","calendarFocus","React","Component","getDerivedStateFromProps","mapDispatchToProps","connect","update_reducer","depots","list_reducer","depot_list","ExcelFile","ReactExport","ExcelSheet","App","element","Button","variant","style","fontSize","dataSet","dataset","name","SalesTable","sales_list","undefined","depot","product","order_no","active","spinner","success","delete_order","onSearchChange","e","start_index","end_index","slice","onSearch","preventDefault","sales","filter","or","includes","handleCalc","total_vol","total_amount","i","length","sale","vol_obs","selling_price","handleProductChange","parseInt","handleDepotChange","idx","console","log","formatData","data","ndata","push","value","fill","patternType","fgColor","rgb","border","bottom","top","right","left","customer","truck","plate_no","driver","entry_no","lpo_no","vol_20","parseFloat","alignment","horizontal","is_paid","columns","title","width","wpx","height","hpx","font","bold","x","toString","replace","items","number","Pagination","Item","onClick","Math","ceil","products","totals","format","Form","alignItems","onSubmit","Group","controlId","marginBottom","Label","Select","target","map","FormControl","type","placeholder","Table","striped","bordered","hover","from_customer","numberWithCommas","update_get_sales_list","product_list","CustomerTop","info","total","count","reduce","accumulator","object","sum","result","obj","year","customer_year","CustomerMonth","series","options","chart","text","plotOptions","bar","columnWidth","endingShape","dataLabels","enabled","stroke","show","colors","xaxis","categories","yaxis","dashboard_metric","opacity","tooltip","y","formatter","val","id","currency_type","Array","month","month_value","date__month","truncate","mapData","CustomerSelect","handleYearChange","UPDATE_CUSTOMER_YEAR_ACTION","getCustomers","CustomerPage","redirect","customer_spinner","didnt_load","customer_list","customer_name","customer_id","toLowerCase","index","GET_CUSTOMER_DETAIL_ACTION","componentDidMount","getFullYear","customer_data","revenue","quantity","to","header_title","customer_detail","Row","Col","xs","token","GET_CUSTOMER_LIST_ACTION","auth_reducer","get_token","username","password","fetch","URL","method","headers","body","JSON","stringify","raw_data","json","top_customer","api_stub_get","customer_create","code","api_stub_post","truck_create","first_name","last_name","add_customer","getMonth","getDate","sales_create","paid","upload_excel","file","depot_id","formData","FormData","append","rData","GET_TOKEN_ACTION","dispatch","then","GET_TOKEN","payload","errors","non_field_errors","GET_TOKEN_ERROR","catch","error","GET_TOKEN_ERROR_REMOVE_ACTION","GET_TOKEN_ERROR_REMOVE","USER_LOGGED_OUT_ACTION","USER_LOGGED_OUT","GET_TOP_CUSTOMER_ACTION","GET_TOP_CUSTOMER","UPDATE_TOP_CUSTOMER_ACTION","UPDATE_TOP_CUSTOMER","GET_CUSTOMER_LIST","GET_CUSTOMER_DETAIL","CUSTOMER_CREATE_ACTION","TRUCK_CREATE_ACTION","ADD_CUSTOMER_ACTION","ADD_CUSTOMER","ADD_CUSTOMER_REMOVE_ACTION","GET_DEPOT_LIST_ACTION","GET_DEPOT_LIST","GET_DEPOT_MONTH_ACTION","depot_month","GET_DEPOT_MONTH","UPDATE_DEPOT_MONTH_ACTION","UPDATE_DEPOT_MONTH","GET_DEPOT_PRODUCT_MONTH_ACTION","depot_product_month","GET_DEPOT_PRODUCT_MONTH","UPDATE_DEPOT_PRODUCT_MONTH_ACTION","UPDATE_DEPOT_PRODUCT_MONTH","GET_DEPOT_SERIES_ACTION","depot_series","GET_DEPOT_SERIES","UPDATE_DEPOT_SERIES_ACTION","UPDATE_DEPOT_SERIES","GET_DEPOT_PRODUCT_SERIES_ACTION","depot_product_series","GET_DEPOT_PRODUCT_SERIES","GET_DEPOT_CUSTOMER_ACTION","depot_customer","GET_DEPOT_CUSTOMER","UPDATE_DEPOT_CUSTOMER_ACTION","UPDATE_DEPOT_CUSTOMER","GET_PRODUCT_SERIES_ACTION","product_series","GET_PRODUCT_SERIES","UPDATE_PRODUCT_SERIES_ACTION","UPDATE_PRODUCT_SERIES","GET_PRODUCT_MONTH_ACTION","product_month","GET_PRODUCT_MONTH","UPDATE_PRODUCT_MONTH_ACTION","UPDATE_PRODUCT_MONTH","GET_PRODUCT_TOP_CUSTOMER_ACTION","product_top_customer","GET_PRODUCT_TOP_CUSTOMER","GET_PRODUCT_LIST_ACTION","GET_PRODUCT_LIST","GET_SALES_LIST","UPDATE_GET_SALES_LIST","SALES_CREATE_ACTION","UPLOAD_EXCEL_ACTION","status","UPLOAD_EXCEL","UPLOAD_EXCEL_ERROR","UPDATE_DASHBOARD_METRIC_ACTION","metric","UPDATE_DASHBOARD_METRIC","UPDATE_SELECTION_DATES_ACTION","selection_dates","UPDATE_SELECTION_DATES","UPDATE_CURRENCY_TYPE_ACTION","UPDATE_CURRENCY_TYPE","UPDATE_PRODUCT_MONTH_YEAR_ACTION","UPDATE_PRODUCT_MONTH_YEAR","UPDATE_DEPOT_MONTH_MONTH_ACTION","UPDATE_DEPOT_MONTH_MONTH","UPDATE_DEPOT_MONTH_YEAR_ACTION","UPDATE_DEPOT_MONTH_YEAR","UPDATE_DEPOT_PRODUCT_MONTH_YEAR_ACTION","UPDATE_DEPOT_PRODUCT_MONTH_YEAR","UPDATE_DEPOT_PRODUCT_MONTH_MONTH_ACTION","UPDATE_DEPOT_PRODUCT_MONTH_MONTH","UPDATE_DEPOT_ACTION","UPDATE_DEPOT","UPDATE_TOP_CUSTOMER_MONTH_ACTION","UPDATE_TOP_CUSTOMER_MONTH","UPDATE_TOP_CUSTOMER_YEAR_ACTION","UPDATE_TOP_CUSTOMER_YEAR","UPDATE_TOP_CUSTOMER_PRODUCT_ACTION","UPDATE_TOP_CUSTOMER_PRODUCT","UPDATE_DEPOT_CUSTOMER_MONTH_ACTION","UPDATE_DEPOT_CUSTOMER_MONTH","UPDATE_DEPOT_CUSTOMER_YEAR_ACTION","UPDATE_DEPOT_CUSTOMER_YEAR","UPDATE_SALES_DATE","UPDATE_CUSTOMER_YEAR","location","protocol","host","MONTHS","extension","store","getState","is_staff","api_body","addMonths","setMonth","currency_type_display","num","match","d","HeaderComponent","handleCurrencyTypeChange","marginRight","window","reload","Layout","handleLogOut","Container","fluid","src","alt","children"],"mappings":"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","file":"static/js/9.3d6daa25.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\"\r\nimport { connect } from \"react-redux\"\r\nimport { UPDATE_SALES_DATE_ACTION, UPDATE_GET_SALES_LIST_ACTION, GET_SALES_LIST_ACTION } from \"../../redux/actions/actions\";\r\nimport { MdCalendarToday, MdKeyboardArrowDown } from \"react-icons/md\";\r\nimport { DateRangePicker } from 'react-date-range';\r\nimport Popup from 'reactjs-popup';\r\n\r\n\r\n\r\nclass SalesDateSelector extends React.Component {\r\n    state = {\r\n        startDate: new Date(this.props.sales_date.start_date),\r\n        endDate: new Date(this.props.sales_date.end_date),\r\n        key: 'selection',\r\n        date: true,\r\n        cost: false,\r\n    }\r\n\r\n    static getDerivedStateFromProps = (props, state) => {\r\n\r\n        state.startDate = new Date(props.sales_date.start_date)\r\n        state.endDate = new Date(props.sales_date.end_date)\r\n        return state\r\n    }\r\n    handleSelect = async (ranges) => {\r\n\r\n        this.setState({\r\n            startDate: ranges.selection.startDate,\r\n            endDate: ranges.selection.endDate\r\n        })\r\n\r\n        const dates = {\r\n            start_date: ranges.selection.startDate,\r\n            end_date: ranges.selection.endDate\r\n        }\r\n        await this.props.UPDATE_GET_SALES_LIST_ACTION()\r\n        await this.props.UPDATE_SALES_DATE_ACTION(dates)\r\n        await this.props.GET_SALES_LIST_ACTION(dates.start_date, dates.end_date)\r\n    }\r\n\r\n    render() {\r\n\r\n        const start_date = this.state.startDate\r\n        const end_date = this.state.endDate\r\n        return (\r\n            <div>\r\n                <div className=\"sales-top\">\r\n\r\n                    <Popup trigger={\r\n                        <Button className='input-dates' size='sm'>\r\n                            <div className='input-display'>\r\n                                <span><MdCalendarToday color='#D04D30' size={18} /></span>\r\n                                {start_date.toDateString()} - {end_date.toDateString()}\r\n                                <span><MdKeyboardArrowDown size={18} /></span>\r\n                            </div>\r\n\r\n                        </Button>\r\n                    }\r\n                        position=\"bottom\"\r\n                    >\r\n                        <DateRangePicker\r\n                            onChange={this.handleSelect}\r\n                            showSelectionPreview={true}\r\n                            moveRangeOnFirstSelection={false}\r\n                            months={2}\r\n                            ranges={[this.state]}\r\n                            direction=\"horizontal\"\r\n                            preventSnapRefocus={true}\r\n                            calendarFocus=\"backwards\"\r\n                            className='date-range'\r\n                        />\r\n                    </Popup>\r\n\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const dates = {\r\n        start_date: new Date(2022, 3, 20),\r\n        end_date: new Date(2022, 3, 30)\r\n    }\r\n    return {\r\n        sales_date: (state.update_reducer.sales_date ? state.update_reducer.sales_date : dates),\r\n        depots: state.list_reducer.depot_list,\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    UPDATE_SALES_DATE_ACTION,\r\n    UPDATE_GET_SALES_LIST_ACTION,\r\n    GET_SALES_LIST_ACTION,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SalesDateSelector);\r\n","import React, { Component } from 'react';\r\nimport ReactExport from 'react-data-export';\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nimport { SiMicrosoftexcel } from \"react-icons/si\"\r\n\r\nclass App extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <ExcelFile element={<Button variant=\"secondary\" size=\"sm\" style={{ fontSize: 10 }}><SiMicrosoftexcel color='green' size={25} /> Export</Button>}>\r\n                    <ExcelSheet dataSet={this.props.dataset} name=\"Organization\" />\r\n                </ExcelFile>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react';\r\n\r\nimport { Button, Table, Form, FormControl, Pagination, Alert } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport { GET_SALES_LIST_ACTION } from \"../../redux/actions/actions\"\r\nimport SpinnerComponent from \"../utils/spinner\"\r\nimport Download from './download';\r\n\r\nclass SalesTable extends React.Component {\r\n    state = {\r\n        sales_list: this.props.sales_list !== undefined ? this.props.sales_list : [],\r\n        sales_date: this.props.sales_date,\r\n        depot: \"All\",\r\n        product: \"All\",\r\n        order_no: null,\r\n        active: 1,\r\n        spinner: false,\r\n        success: true,\r\n        delete_order: null,\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        let NUM_ORDERS = 50\r\n\r\n        let active = this.state.active\r\n        const start_index = (active - 1) * NUM_ORDERS\r\n        const end_index = (active * NUM_ORDERS)\r\n        if (e === \"\" || e === undefined || e === null) {\r\n            this.setState({ sales_list: this.props.sales_list.slice(start_index, end_index) })\r\n        } else {\r\n\r\n            this.setState({ order_no: e })\r\n        }\r\n    }\r\n\r\n    onSearch = (e) => {\r\n        e.preventDefault()\r\n\r\n        const { order_no } = this.state\r\n\r\n        let sales = this.props.sales_list\r\n        sales = sales.filter(function (or) {\r\n            return or.order_no.includes(order_no)\r\n        });\r\n\r\n        this.setState({ sales_list: sales, product: \"All\", depot: \"All\" })\r\n    }\r\n\r\n    static getDerivedStateFromProps = (props, state) => {\r\n        state.success = true\r\n        // state.sales_list = props.sales_list\r\n        // if (props.update_get_sales_list === false) {\r\n        //     state.sales_list = props.sales_list !== undefined ? props.sales_list : []\r\n        // }\r\n\r\n        return state\r\n    }\r\n\r\n    numberWithCommas(x) {\r\n        try {\r\n            return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        } catch (e) {\r\n            return x\r\n        }\r\n\r\n    }\r\n\r\n    handleCalc = () => {\r\n        let sales = this.state.sales_list\r\n        let total_vol = 0\r\n        let total_amount = 0\r\n\r\n        for (let i = 0; i < sales.length; i++) {\r\n            let sale = sales[i]\r\n            total_vol = total_vol + sale.vol_obs\r\n            total_amount = total_amount + (sale.vol_obs * sale.selling_price)\r\n        }\r\n\r\n        return [total_amount, total_vol]\r\n    }\r\n    handleProductChange = async (product) => {\r\n        let sales = this.props.sales_list\r\n        if (product !== \"All\") {\r\n            sales = sales.filter(function (or) {\r\n                return or.product.name === product\r\n            });\r\n        }\r\n\r\n\r\n        if (this.state.depot !== \"All\") {\r\n            const name = this.props.depots[parseInt(this.state.depot)].name\r\n            sales = sales.filter(function (or) {\r\n                return or.depot.name === name\r\n            });\r\n        }\r\n\r\n        this.setState({ sales_list: sales, product: product })\r\n\r\n    }\r\n\r\n    handleDepotChange = (idx) => {\r\n        let sales = this.props.sales_list\r\n\r\n        if (idx !== \"All\") {\r\n            const depot = this.props.depots[parseInt(idx)].name\r\n            sales = sales.filter(function (or) {\r\n                return or.depot.name === depot\r\n            });\r\n        }\r\n\r\n        const product = this.state.product\r\n        console.log(product)\r\n        if (product !== \"All\") {\r\n            sales = sales.filter(function (or) {\r\n                return or.product.name === product\r\n            });\r\n        }\r\n        this.setState({ sales_list: sales, depot: idx })\r\n\r\n    }\r\n\r\n    formatData = () => {\r\n        let data = this.state.sales_list\r\n        let ndata = []\r\n\r\n        const columns = [\r\n            {\r\n                title: \"DATE\",\r\n                width: { wpx: 80 },\r\n                height: { hpx: 50 },\r\n                style: {\r\n                    font: { bold: true }, fill: { patternType: \"solid\", fgColor: { rgb: \"548235\" } }, border: {\r\n                        bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                        top: { style: 'thin', color: { rgb: '000000' } },\r\n                        right: { style: 'thin', color: { rgb: '000000' } },\r\n                        left: { style: 'thin', color: { rgb: '000000' } },\r\n                    }\r\n                },\r\n            },\r\n            {\r\n                title: \"DEPOT\",\r\n                width: { wpx: 100 },\r\n                height: { hpx: 50 },\r\n                style: {\r\n                    font: { bold: true }, fill: { patternType: \"solid\", fgColor: { rgb: \"548235\" } }, border: {\r\n                        bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                        top: { style: 'thin', color: { rgb: '000000' } },\r\n                        right: { style: 'thin', color: { rgb: '000000' } },\r\n                        left: { style: 'thin', color: { rgb: '000000' } },\r\n                    }\r\n                },\r\n            },\r\n            {\r\n                title: \"PRODUCT\",\r\n                width: { wpx: 80 },\r\n                height: { hpx: 50 },\r\n                style: {\r\n                    font: { bold: true }, fill: { patternType: \"solid\", fgColor: { rgb: \"548235\" } }, border: {\r\n                        bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                        top: { style: 'thin', color: { rgb: '000000' } },\r\n                        right: { style: 'thin', color: { rgb: '000000' } },\r\n                        left: { style: 'thin', color: { rgb: '000000' } },\r\n                    }\r\n                },\r\n            },\r\n            {\r\n                title: \"CUSTOMER\",\r\n                width: { wpx: 180 },\r\n                height: { hpx: 50 },\r\n                style: {\r\n                    font: { bold: true }, fill: { patternType: \"solid\", fgColor: { rgb: \"548235\" } }, border: {\r\n                        bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                        top: { style: 'thin', color: { rgb: '000000' } },\r\n                        right: { style: 'thin', color: { rgb: '000000' } },\r\n                        left: { style: 'thin', color: { rgb: '000000' } },\r\n                    }\r\n                },\r\n            },\r\n            {\r\n                title: \"TRUCK\",\r\n                width: { wpx: 100 },\r\n                height: { hpx: 50 },\r\n                style: {\r\n                    font: { bold: true }, fill: { patternType: \"solid\", fgColor: { rgb: \"548235\" } }, border: {\r\n                        bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                        top: { style: 'thin', color: { rgb: '000000' } },\r\n                        right: { style: 'thin', color: { rgb: '000000' } },\r\n                        left: { style: 'thin', color: { rgb: '000000' } },\r\n                    }\r\n                },\r\n            },\r\n\r\n            {\r\n                title: \"DRIVER\",\r\n                width: { wpx: 150 },\r\n                height: { hpx: 50 },\r\n                style: {\r\n                    font: { bold: true }, fill: { patternType: \"solid\", fgColor: { rgb: \"548235\" } }, border: {\r\n                        bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                        top: { style: 'thin', color: { rgb: '000000' } },\r\n                        right: { style: 'thin', color: { rgb: '000000' } },\r\n                        left: { style: 'thin', color: { rgb: '000000' } },\r\n                    }\r\n                },\r\n            },\r\n            {\r\n                title: \"ORDER NO\",\r\n                width: { wpx: 100 },\r\n                height: { hpx: 50 },\r\n                style: {\r\n                    font: { bold: true }, fill: { patternType: \"solid\", fgColor: { rgb: \"548235\" } }, border: {\r\n                        bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                        top: { style: 'thin', color: { rgb: '000000' } },\r\n                        right: { style: 'thin', color: { rgb: '000000' } },\r\n                        left: { style: 'thin', color: { rgb: '000000' } },\r\n                    }\r\n                },\r\n            },\r\n            {\r\n                title: \"ENTRY NO\",\r\n                width: { wpx: 150 },\r\n                height: { hpx: 50 },\r\n                style: {\r\n                    font: { bold: true }, fill: { patternType: \"solid\", fgColor: { rgb: \"548235\" } }, border: {\r\n                        bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                        top: { style: 'thin', color: { rgb: '000000' } },\r\n                        right: { style: 'thin', color: { rgb: '000000' } },\r\n                        left: { style: 'thin', color: { rgb: '000000' } },\r\n                    }\r\n                },\r\n            },\r\n            {\r\n                title: \"LPO NO\",\r\n                width: { wpx: 120 },\r\n                height: { hpx: 50 },\r\n                style: {\r\n                    font: { bold: true }, fill: { patternType: \"solid\", fgColor: { rgb: \"548235\" } }, border: {\r\n                        bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                        top: { style: 'thin', color: { rgb: '000000' } },\r\n                        right: { style: 'thin', color: { rgb: '000000' } },\r\n                        left: { style: 'thin', color: { rgb: '000000' } },\r\n                    }\r\n                },\r\n            },\r\n            {\r\n                title: \"VOL OBS\",\r\n                width: { wpx: 80 },\r\n                height: { hpx: 50 },\r\n                style: {\r\n                    font: { bold: true }, fill: { patternType: \"solid\", fgColor: { rgb: \"548235\" } }, border: {\r\n                        bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                        top: { style: 'thin', color: { rgb: '000000' } },\r\n                        right: { style: 'thin', color: { rgb: '000000' } },\r\n                        left: { style: 'thin', color: { rgb: '000000' } },\r\n                    }\r\n                },\r\n            },\r\n            {\r\n                title: \"VOL 20\",\r\n                width: { wpx: 80 },\r\n                height: { hpx: 50 },\r\n                style: {\r\n                    font: { bold: true }, fill: { patternType: \"solid\", fgColor: { rgb: \"548235\" } }, border: {\r\n                        bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                        top: { style: 'thin', color: { rgb: '000000' } },\r\n                        right: { style: 'thin', color: { rgb: '000000' } },\r\n                        left: { style: 'thin', color: { rgb: '000000' } },\r\n                    }\r\n                },\r\n            },\r\n            {\r\n                title: \"SELLING PRICE\",\r\n                width: { wpx: 100 },\r\n                height: { wpx: 50 },\r\n                style: {\r\n                    font: { bold: true }, fill: { patternType: \"solid\", fgColor: { rgb: \"548235\" } }, border: {\r\n                        bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                        top: { style: 'thin', color: { rgb: '000000' } },\r\n                        right: { style: 'thin', color: { rgb: '000000' } },\r\n                        left: { style: 'thin', color: { rgb: '000000' } },\r\n                    }\r\n                },\r\n            },\r\n\r\n            {\r\n                title: \"AMOUNT\",\r\n                width: { wpx: 100 },\r\n                height: { hpx: 50 },\r\n                style: {\r\n                    font: { bold: true }, fill: { patternType: \"solid\", fgColor: { rgb: \"548235\" } }, border: {\r\n                        bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                        top: { style: 'thin', color: { rgb: '000000' } },\r\n                        right: { style: 'thin', color: { rgb: '000000' } },\r\n                        left: { style: 'thin', color: { rgb: '000000' } },\r\n                    }\r\n                },\r\n            },\r\n\r\n            {\r\n                title: \"PAID\",\r\n                width: { wpx: 50 },\r\n                height: { hpx: 50 },\r\n                style: {\r\n                    font: { bold: true }, fill: { patternType: \"solid\", fgColor: { rgb: \"548235\" } }, border: {\r\n                        bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                        top: { style: 'thin', color: { rgb: '000000' } },\r\n                        right: { style: 'thin', color: { rgb: '000000' } },\r\n                        left: { style: 'thin', color: { rgb: '000000' } },\r\n                    }\r\n                },\r\n            },\r\n\r\n        ]\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n            const sale = data[i]\r\n            ndata.push([\r\n                {\r\n                    value: sale.date,\r\n                    style: {\r\n                        fill: { patternType: \"solid\", fgColor: { rgb: \"B4C6E7\" } },\r\n                        border: {\r\n                            bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                            top: { style: 'thin', color: { rgb: '000000' } },\r\n                            right: { style: 'thin', color: { rgb: '000000' } },\r\n                            left: { style: 'thin', color: { rgb: '000000' } },\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    value: sale.depot.name,\r\n                    style: {\r\n                        fill: { patternType: \"solid\", fgColor: { rgb: \"B4C6E7\" } },\r\n                        border: {\r\n                            bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                            top: { style: 'thin', color: { rgb: '000000' } },\r\n                            right: { style: 'thin', color: { rgb: '000000' } },\r\n                            left: { style: 'thin', color: { rgb: '000000' } },\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    value: sale.product.name,\r\n                    style: {\r\n                        fill: { patternType: \"solid\", fgColor: { rgb: \"B4C6E7\" } },\r\n                        border: {\r\n                            bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                            top: { style: 'thin', color: { rgb: '000000' } },\r\n                            right: { style: 'thin', color: { rgb: '000000' } },\r\n                            left: { style: 'thin', color: { rgb: '000000' } },\r\n                        }\r\n                    },\r\n                },\r\n\r\n\r\n                {\r\n                    value: sale.customer.name,\r\n                    style: {\r\n                        fill: { patternType: \"solid\", fgColor: { rgb: \"7B7B7B\" } },\r\n                        border: {\r\n                            bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                            top: { style: 'thin', color: { rgb: '000000' } },\r\n                            right: { style: 'thin', color: { rgb: '000000' } },\r\n                            left: { style: 'thin', color: { rgb: '000000' } },\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    value: sale.truck.plate_no === null ? \"\" : sale.truck.plate_no,\r\n                    style: {\r\n                        fill: { patternType: \"solid\", fgColor: { rgb: \"7B7B7B\" } },\r\n                        border: {\r\n                            bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                            top: { style: 'thin', color: { rgb: '000000' } },\r\n                            right: { style: 'thin', color: { rgb: '000000' } },\r\n                            left: { style: 'thin', color: { rgb: '000000' } },\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    value: sale.truck.driver === null ? \"\" : sale.truck.driver,\r\n                    style: {\r\n                        fill: { patternType: \"solid\", fgColor: { rgb: \"7B7B7B\" } },\r\n                        border: {\r\n                            bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                            top: { style: 'thin', color: { rgb: '000000' } },\r\n                            right: { style: 'thin', color: { rgb: '000000' } },\r\n                            left: { style: 'thin', color: { rgb: '000000' } },\r\n                        }\r\n                    },\r\n                },\r\n\r\n                {\r\n                    value: sale.order_no === null ? \"\" : sale.order_no,\r\n                    style: {\r\n                        fill: { patternType: \"solid\", fgColor: { rgb: \"A9D08E\" } },\r\n                        border: {\r\n                            bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                            top: { style: 'thin', color: { rgb: '000000' } },\r\n                            right: { style: 'thin', color: { rgb: '000000' } },\r\n                            left: { style: 'thin', color: { rgb: '000000' } },\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    value: sale.entry_no === null ? \"\" : sale.entry_no,\r\n                    style: {\r\n                        fill: { patternType: \"solid\", fgColor: { rgb: \"A9D08E\" } },\r\n                        border: {\r\n                            bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                            top: { style: 'thin', color: { rgb: '000000' } },\r\n                            right: { style: 'thin', color: { rgb: '000000' } },\r\n                            left: { style: 'thin', color: { rgb: '000000' } },\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    value: sale.lpo_no === null ? \"\" : sale.lpo_no,\r\n                    style: {\r\n                        fill: { patternType: \"solid\", fgColor: { rgb: \"A9D08E\" } },\r\n                        border: {\r\n                            bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                            top: { style: 'thin', color: { rgb: '000000' } },\r\n                            right: { style: 'thin', color: { rgb: '000000' } },\r\n                            left: { style: 'thin', color: { rgb: '000000' } },\r\n                        }\r\n                    },\r\n                },\r\n\r\n                {\r\n                    value: sale.vol_obs,\r\n                    style: {\r\n                        fill: { patternType: \"solid\", fgColor: { rgb: \"F8CBAD\" } },\r\n                        border: {\r\n                            bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                            top: { style: 'thin', color: { rgb: '000000' } },\r\n                            right: { style: 'thin', color: { rgb: '000000' } },\r\n                            left: { style: 'thin', color: { rgb: '000000' } },\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    value: sale.vol_20 === null ? 0 : sale.vol_20,\r\n                    style: {\r\n                        fill: { patternType: \"solid\", fgColor: { rgb: \"F8CBAD\" } },\r\n                        border: {\r\n                            bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                            top: { style: 'thin', color: { rgb: '000000' } },\r\n                            right: { style: 'thin', color: { rgb: '000000' } },\r\n                            left: { style: 'thin', color: { rgb: '000000' } },\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    value: parseFloat(sale.selling_price),\r\n                    style: {\r\n                        fill: { patternType: \"solid\", fgColor: { rgb: \"F8CBAD\" } },\r\n                        border: {\r\n                            bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                            top: { style: 'thin', color: { rgb: '000000' } },\r\n                            right: { style: 'thin', color: { rgb: '000000' } },\r\n                            left: { style: 'thin', color: { rgb: '000000' } },\r\n                        },\r\n                        alignment: { horizontal: \"right\" },\r\n                    }\r\n                },\r\n                {\r\n                    value: parseFloat(sale.vol_obs * sale.selling_price),\r\n                    style: {\r\n                        fill: { patternType: \"solid\", fgColor: { rgb: \"00B050\" } },\r\n                        border: {\r\n                            bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                            top: { style: 'thin', color: { rgb: '000000' } },\r\n                            right: { style: 'thin', color: { rgb: '000000' } },\r\n                            left: { style: 'thin', color: { rgb: '000000' } },\r\n                        },\r\n                        alignment: { horizontal: \"right\" },\r\n                    }\r\n                },\r\n                {\r\n                    value: sale.is_paid,\r\n                    style: {\r\n                        fill: { patternType: \"solid\", fgColor: { rgb: \"A9D08E\" } },\r\n                        border: {\r\n                            bottom: { style: 'thin', color: { rgb: '000000' } },\r\n                            top: { style: 'thin', color: { rgb: '000000' } },\r\n                            right: { style: 'thin', color: { rgb: '000000' } },\r\n                            left: { style: 'thin', color: { rgb: '000000' } },\r\n                        }\r\n                    },\r\n                },\r\n            ])\r\n\r\n        }\r\n        return [{ columns: columns, data: ndata }]\r\n    }\r\n\r\n    render() {\r\n        let items = [];\r\n        const NUM_ORDERS = 50\r\n        let active = this.state.active;\r\n        const start_index = (active - 1) * NUM_ORDERS\r\n        const end_index = active * NUM_ORDERS\r\n\r\n        for (let number = 1; number <= Math.ceil(this.state.sales_list.length / NUM_ORDERS); number++) {\r\n            items.push(\r\n                <Pagination.Item key={number} active={number === active} onClick={() => this.setState({ active: number })}>\r\n                    {number}\r\n                </Pagination.Item>,\r\n            );\r\n        }\r\n\r\n        const { depots, products } = this.props\r\n        const totals = this.handleCalc()\r\n        const format = this.formatData()\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.spinner ? <SpinnerComponent spinner={this.state.spinner} /> :\r\n                        <div className='sale-table'>\r\n\r\n                            <div className='sale-table__header'>\r\n\r\n                                <Form className=\"d-flex\" style={{ alignItems: \"flex-end\" }} onSubmit={this.onSearch}>\r\n                                    <Download dataset={format} />\r\n                                    <Form.Group className=\"mb-4 pie-select__child sale-table__select\" controlId=\"exampleForm.ControlInput1\" style={{ marginBottom: 0 }}>\r\n                                        <Form.Label>Depot</Form.Label>\r\n                                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleDepotChange(e.target.value)}>\r\n                                            {this.state.depot === \"All\" ? null : <option value={this.state.depot}>{depots[parseInt(this.state.depot)].name}</option>}\r\n                                            <option value={\"All\"}>All</option>\r\n\r\n                                            {depots.map((depot, idx) =>\r\n                                                this.state.depot === idx ? null : <option key={idx} value={idx}>{depot.name}</option>\r\n                                            )}\r\n\r\n                                        </Form.Select>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group className=\"mb-4 pie-select__child sale-table__select\" controlId=\"exampleForm.ControlInput1\" style={{ marginBottom: 0 }}>\r\n                                        <Form.Label>Product</Form.Label>\r\n                                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleProductChange(e.target.value)}>\r\n                                            {this.state.product === \"All\" ? null : <option value={this.state.product}>{this.state.product}</option>}\r\n                                            <option value={\"All\"}>All</option>\r\n\r\n                                            {products.map((product, idx) =>\r\n                                                this.state.product === product.name ? null : <option key={idx} value={product.name}>{product.name}</option>\r\n                                            )}\r\n\r\n                                        </Form.Select>\r\n                                    </Form.Group>\r\n\r\n\r\n                                    <FormControl\r\n                                        type=\"search\"\r\n                                        placeholder=\"Search by order no.\"\r\n                                        className=\"me-2 sales-table__search-input\"\r\n                                        aria-label=\"Search by order no.\"\r\n                                        size='sm'\r\n                                        onChange={(e) => this.onSearchChange(e.target.value)}\r\n                                    />\r\n                                    <Button variant=\"outline-primary\" type='submit' >Search</Button>\r\n                                </Form>\r\n                            </div>\r\n\r\n                            <Table striped bordered hover size=\"sm\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th>Date</th>\r\n                                        {this.props.from_customer ? null :\r\n                                            <th>Depot</th>\r\n                                        }\r\n                                        <th>Product</th>\r\n                                        {this.props.from_customer ? null :\r\n                                            <th>Customer</th>\r\n                                        }\r\n                                        <th>Truck</th>\r\n                                        <th>Driver</th>\r\n                                        <th>Order No</th>\r\n                                        <th>Lpo No</th>\r\n                                        <th>Entry No</th>\r\n                                        <th>S.Price</th>\r\n                                        <th>OBS Vol</th>\r\n                                        <th>Vol@20</th>\r\n                                        <th>Amount</th>\r\n                                        <th>Paid</th>\r\n                                        {/* <th>Edit</th>\r\n                            <th>Del</th> */}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.sales_list.slice(start_index, end_index).map((sale, idx) =>\r\n                                        <tr key={idx}>\r\n                                            <td>{start_index + idx + 1}</td>\r\n                                            <td>{sale.date}</td>\r\n                                            {this.props.from_customer ? null :\r\n                                                <td>{sale.depot.name}</td>\r\n                                            }\r\n                                            <td>{sale.product.name}</td>\r\n                                            {this.props.from_customer ? null :\r\n                                                <td>{sale.customer.name}</td>\r\n                                            }\r\n                                            <td>{sale.truck.plate_no}</td>\r\n                                            <td>{sale.truck.driver}</td>\r\n                                            <td>{sale.order_no}</td>\r\n                                            <td>{sale.lpo_no}</td>\r\n                                            <td>{sale.entry_no}</td>\r\n                                            <td>{sale.selling_price}</td>\r\n                                            <td>{this.numberWithCommas(sale.vol_obs)}</td>\r\n                                            <td>{this.numberWithCommas(sale.vol_20)}</td>\r\n                                            <td>{this.numberWithCommas(sale.vol_obs * sale.selling_price)}</td>\r\n                                            <td>{sale.is_paid ? \"True\" : \"False\"}</td>\r\n                                            {/* <td>\r\n                                    <Popup\r\n                                        contentStyle={{ width: 500, minHeight: 400 }}\r\n                                        trigger={\r\n                                            <Button variant='transparent' className='sales-table__action-button'>\r\n                                                <MdEditNote color='blue' size={20} />\r\n                                            </Button>\r\n                                        }\r\n                                        position=\"left top\"\r\n                                    >\r\n\r\n\r\n                                    </Popup>\r\n                                </td>\r\n                                <td>\r\n                                    <Popup\r\n                                        contentStyle={{ width: 500, minHeight: 150 }}\r\n                                        onOpen={() => this.setState({ success: false })}\r\n                                        trigger={\r\n                                            <Button variant='transparent' className='action-button' onClick={() => this.setState({ success: false })}>\r\n                                                <MdDelete color='red' size={20} />\r\n                                            </Button>\r\n                                        }\r\n                                        position=\"left top\"\r\n                                    >\r\n\r\n\r\n                                    </Popup>\r\n                                </td> */}\r\n                                        </tr>\r\n                                    )}\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th>Totals</th>\r\n                                        <th></th>\r\n                                        <th></th>\r\n                                        {this.props.from_customer ? null :\r\n                                            <th></th>\r\n                                        }\r\n                                        {this.props.from_customer ? null :\r\n                                            <th></th>\r\n                                        }\r\n                                        <th></th>\r\n                                        <th></th>\r\n                                        <th></th>\r\n                                        <th></th>\r\n                                        <th></th>\r\n                                        <th>Kshs. {this.numberWithCommas(totals[1])}</th>\r\n                                        <th></th>\r\n                                        <th>Kshs. {this.numberWithCommas(totals[0])}</th>\r\n                                        <th></th>\r\n                                        {/* <th>Edit</th>\r\n                            <th>Del</th> */}\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                            <div>\r\n\r\n\r\n                                <Pagination size=\"sm\">{items}</Pagination>\r\n                            </div>\r\n\r\n                        </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const dates = {\r\n        start_date: new Date(2022, 1, 20),\r\n        end_date: new Date(2022, 1, 28)\r\n    }\r\n    return {\r\n        // sales_list: (state.list_reducer.sales_list ? state.list_reducer.sales_list : []),\r\n        sales_date: (state.update_reducer.sales_date ? state.update_reducer.sales_date : dates),\r\n        update_get_sales_list: state.list_reducer.update_get_sales_list,\r\n        depots: state.list_reducer.depot_list,\r\n        products: state.list_reducer.product_list,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    GET_SALES_LIST_ACTION,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SalesTable);\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Table } from \"react-bootstrap\"\r\n\r\nclass CustomerTop extends React.Component {\r\n    state = {\r\n        info: []\r\n    }\r\n    numberWithCommas(x) {\r\n        return (x).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n    static getDerivedStateFromProps = (props, state) => {\r\n        let result = props.customer.filter(obj => {\r\n            return obj.year === parseInt(props.customer_year)\r\n        })\r\n        state.info = result[0]\r\n        return state\r\n    }\r\n\r\n    total = (months, count = false) => {\r\n        let sum = 0\r\n\r\n        if (count === true) {\r\n            sum = months.reduce((accumulator, object) => {\r\n                return accumulator + object.count;\r\n            }, 0);\r\n        }\r\n        else {\r\n            sum = months.reduce((accumulator, object) => {\r\n                return accumulator + object.sum;\r\n            }, 0);\r\n        }\r\n\r\n        return sum\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"customer-content__header\">\r\n                <h5 className=\"customer-content__header__name\">{this.props.name}</h5>\r\n                <div className=\"customer-info\">\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Total Sales</th>\r\n                                <th>Total Amount</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.info === undefined ?\r\n                                <tr>\r\n                                    <td>0</td>\r\n                                    <td>0</td>\r\n                                </tr> :\r\n                                <tr>\r\n                                    <td>{this.total(this.state.info.months, true)}</td>\r\n                                    <td>{this.numberWithCommas(this.total(this.state.info.months))}</td>\r\n                                </tr>}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CustomerTop);\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport ReactApexChart from \"react-apexcharts\"\r\nimport { truncate } from \"../../utils/_funcs\";\r\n\r\nconst mapData = (data, year, currency_type) => {\r\n    if (data === undefined || data === null || data === []) {\r\n        return null\r\n    }\r\n    let result = data.filter(obj => {\r\n        return obj.year === parseInt(year)\r\n    })\r\n\r\n    let months = new Array(12).fill(0)\r\n\r\n    data = result.length > 0 ? result[0].months : []\r\n\r\n    for (const month in data) {\r\n        let month_value = data[month]\r\n        months[month_value.date__month - 1] = currency_type === \"Million\" ? truncate(month_value.sum / 10000000) : truncate(month_value.sum / 1000)\r\n    }\r\n    return months\r\n}\r\n\r\nclass CustomerMonth extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            series: [],\r\n            options: {\r\n                chart: {\r\n                    type: 'bar',\r\n                    height: 350\r\n                },\r\n\r\n                title: {\r\n                    text: 'Monthly Sale Comparison'\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                        horizontal: false,\r\n                        columnWidth: '55%',\r\n                        endingShape: 'rounded'\r\n                    },\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                stroke: {\r\n                    show: true,\r\n                    width: 2,\r\n                    colors: ['transparent']\r\n                },\r\n                xaxis: {\r\n                    title: {\r\n                        text: 'Months'\r\n                    },\r\n                    categories: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\r\n                },\r\n                yaxis: {\r\n                    title: {\r\n                        text: this.props.dashboard_metric ? 'Kshs (Millions)' : \"Litres\"\r\n                    }\r\n                },\r\n                fill: {\r\n                    opacity: 1\r\n                },\r\n                tooltip: {\r\n                    y: {\r\n                        formatter: this.props.dashboard_metric ? function (val) {\r\n                            return \"Kshs \" + val + \" Million\"\r\n                        } : function (val) {\r\n                            return val + \" Litres\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n\r\n        };\r\n    }\r\n\r\n\r\n    static getDerivedStateFromProps = (props, state) => {\r\n\r\n        let data = props.customer !== undefined ? mapData(props.customer, props.customer_year, props.currency_type) : null\r\n        let series = [{\r\n            name: props.dashboard_metric ? \"Revenue\" : \"Quantity\",\r\n            data: data === null ? [] : data\r\n        }]\r\n\r\n        state.series = series\r\n        state.options.yaxis.title.text = props.dashboard_metric ? \"Customer Revenue\" : \"Customer Quantity\"\r\n\r\n        return state\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n\r\n            <div id=\"chart\">\r\n                <ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" height={350} />\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CustomerMonth);\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n    UPDATE_DASHBOARD_CUSTOMER_MONTH_ACTION,\r\n    UPDATE_DASHBOARD_CUSTOMER_YEAR_ACTION,\r\n    UPDATE_DASHBOARD_CUSTOMER_PRODUCT_ACTION,\r\n    UPDATE_CUSTOMER_YEAR_ACTION,\r\n} from \"../../../redux/actions/actions\"\r\n\r\n\r\nclass CustomerSelect extends React.Component {\r\n    state = {\r\n        year: this.props.customer_year,\r\n    }\r\n\r\n    static getDerivedStateFromProps = (props, state) => {\r\n        state.year = parseInt(props.customer_year)\r\n        return state\r\n    }\r\n\r\n    handleYearChange = async (year) => {\r\n        await this.props.UPDATE_CUSTOMER_YEAR_ACTION(year)\r\n    }\r\n\r\n\r\n    render() {\r\n        const years = [2022, 2021]\r\n\r\n        return (\r\n            <div className=\"pie-select\">\r\n\r\n                <Form.Group className=\"mb-4 pie-select__child\" controlId=\"exampleForm.ControlInput1\">\r\n                    <Form.Label>Year</Form.Label>\r\n                    <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleYearChange(e.target.value)}>\r\n                        <option>{this.state.year}</option>\r\n                        {years.map((year, idx) =>\r\n                            parseInt(this.state.year) === year ? null : <option key={idx} value={year}>{year}</option>\r\n                        )}\r\n\r\n                    </Form.Select>\r\n                </Form.Group>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        customer_year: state.update_reducer.customer_year\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    UPDATE_CUSTOMER_YEAR_ACTION,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CustomerSelect);\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, Form, FormControl, Button } from 'react-bootstrap';\r\nimport { Navigate } from 'react-router-dom';\r\nimport Layout from '../utils/layout';\r\nimport {\r\n    GET_CUSTOMER_LIST_ACTION,\r\n    GET_CUSTOMER_DETAIL_ACTION,\r\n    UPDATE_CUSTOMER_YEAR_ACTION,\r\n} from \"../../redux/actions/actions\"\r\nimport CustomerTop from \"./top\"\r\n\r\nimport SpinnerComponent from '../utils/spinner';\r\nimport CustomerMonth from './charts/customer_month';\r\nimport CustomerSelect from '../utils/select/customer_select';\r\nimport SalesDateSelector from '../sales/sales_date_selector';\r\nimport SalesTable from '../sales/sales_table';\r\n\r\nconst getCustomers = (sales, customer) => {\r\n    sales = sales.filter(function (or) {\r\n        return or.customer.name === customer.name\r\n    });\r\n\r\n    return sales\r\n}\r\nclass CustomerPage extends React.Component {\r\n    state = {\r\n        redirect: false,\r\n        spinner: false,\r\n        customer_spinner: false,\r\n        didnt_load: false,\r\n        customer_list: this.props.customer_list ? this.props.customer_list : [],\r\n        customer: this.props.customer_list ? this.props.customer_list[0] : null,\r\n        customer_name: null,\r\n        customer_id: null,\r\n        dashboard_metric: this.props.dashboard_metric,\r\n        currency_type: this.props.currency_type,\r\n        customer_year: this.props.customer_year,\r\n\r\n        sales: [],\r\n    }\r\n\r\n    static getDerivedStateFromProps = async (props, state) => {\r\n        const { token, customer_list, customer_detail } = props\r\n        if (token === undefined || token === \"\") {\r\n            state.redirect = true\r\n            return state\r\n        }\r\n        else {\r\n\r\n            if (state.customer_id === null || customer_detail === undefined) {\r\n\r\n                state.customer_id = customer_list[0].id\r\n                state.spinner = false\r\n                state.customer_spinner = true\r\n                await props.GET_CUSTOMER_DETAIL_ACTION(customer_list[0].id)\r\n            }\r\n            else if (customer_detail !== undefined && state.customer_id == customer_detail.id) {\r\n\r\n                state.customer = customer_detail\r\n                state.sales = getCustomers(props.sales, customer_detail)\r\n                state.customer_spinner = false\r\n                state.spinner = false\r\n            }\r\n            else if (customer_detail !== undefined && state.customer_id !== customer_detail.id) {\r\n                state.customer_spinner = true\r\n            }\r\n            else {\r\n                state.spinner = false\r\n                state.customer_spinner = false\r\n                state.customer_id = props.customer_detail.id\r\n            }\r\n        }\r\n\r\n        state.customer_list = customer_list\r\n        state.dashboard_metric = props.dashboard_metric\r\n        state.currency_type = props.currency_type\r\n        state.customer_year = props.customer_year\r\n\r\n        return state\r\n    }\r\n    onSearchChange = (e) => {\r\n\r\n        if (e === \"\" || e === undefined || e === null) {\r\n            this.setState({ customer_list: this.props.customer_list })\r\n        } else {\r\n            this.setState({ customer_name: e })\r\n        }\r\n    }\r\n\r\n    onSearch = (e) => {\r\n        e.preventDefault()\r\n        const { customer_name } = this.state\r\n        let customer_list = this.props.customer_list\r\n        customer_list = customer_list.filter(function (or) {\r\n            return or.name.toLowerCase().includes(customer_name.toLowerCase())\r\n        });\r\n\r\n\r\n        this.setState({ customer_list: customer_list })\r\n    }\r\n\r\n    onClick = async (index) => {\r\n        let customer_list = this.state.customer_list\r\n        customer_list = customer_list.filter(function (or) {\r\n            return or.id === parseInt(index)\r\n        });\r\n\r\n        if (customer_list.length > 0) {\r\n            await this.setState({ customer_id: customer_list[0].id, customer_spinner: true })\r\n            await this.props.GET_CUSTOMER_DETAIL_ACTION(customer_list[0].id)\r\n        }\r\n\r\n    }\r\n    componentDidMount = async () => {\r\n        this.setState({ spinner: true })\r\n        await this.props.UPDATE_CUSTOMER_YEAR_ACTION(new Date().getFullYear())\r\n    }\r\n\r\n\r\n    render() {\r\n        const { spinner, customer_year } = this.state\r\n        let customer_data = null\r\n\r\n        try {\r\n            customer_data = this.state.dashboard_metric ? this.state.customer.revenue : this.state.customer.quantity\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n        if (this.state.redirect) {\r\n            return <Navigate to={\"/login\"} />\r\n        }\r\n\r\n        return (\r\n            <Layout header_title={\"CUSTOMERS\"}>\r\n                {(spinner || this.props.customer_list === undefined || this.props.customer_detail === undefined) ? <SpinnerComponent spinner={spinner} /> : null}\r\n                {this.props.customer_list !== undefined ?\r\n                    <div>\r\n                        <div>\r\n                            <CustomerSelect />\r\n                        </div>\r\n                        <Row>\r\n                            <Col xs={3}>\r\n                                <div className=\"customer-side chart-area\">\r\n                                    <h6>Pick a customer</h6>\r\n\r\n                                    <Form className=\"d-flex\" onSubmit={this.onSearch}>\r\n                                        <FormControl\r\n                                            type=\"search\"\r\n                                            placeholder=\"Search\"\r\n                                            className=\"me-2\"\r\n                                            aria-label=\"Search\"\r\n                                            size='sm'\r\n                                            onChange={(e) => this.onSearchChange(e.target.value)}\r\n                                        />\r\n                                        <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\">Search</Button>\r\n                                    </Form>\r\n\r\n                                    <div>\r\n                                        {this.state.customer_list.map((customer, idx) =>\r\n                                            <div key={idx} className={\"customer-side__scroll\"}>\r\n                                                {this.state.customer_id === customer.id ?\r\n\r\n                                                    <Button className='customer-side__customer customer-side__active' variant=\"transparent\" onClick={() => this.onClick(customer.id)}>\r\n\r\n                                                        <div className='customer-side__info'>\r\n                                                            <div className='customer-side__profile'>\r\n\r\n                                                            </div>\r\n                                                            <div>\r\n                                                                <h6 className='customer-side__name'>{customer.name}</h6>\r\n                                                                {/* <p className='customer-location'>{customer.location}</p> */}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Button> :\r\n                                                    <Button className='customer-side__customer' variant=\"transparent\" onClick={() => this.onClick(customer.id)}>\r\n\r\n                                                        <div className='customer-side__info'>\r\n                                                            <div className='customer-side__profile'>\r\n\r\n                                                            </div>\r\n                                                            <div>\r\n                                                                <h6 className='customer-side__name'>{customer.name}</h6>\r\n                                                                {/* <p className='customer-location'>{customer.location}</p> */}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Button>}\r\n                                            </div>\r\n                                        )}\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </Col>\r\n                            <Col xs={9} style={{ position: \"relative\" }}>\r\n                                {this.state.customer_spinner || customer_data === undefined ? <SpinnerComponent spinner={this.state.customer_spinner} /> :\r\n                                    <div>\r\n                                        <CustomerTop\r\n                                            customer={customer_data}\r\n                                            name={this.state.customer ? this.state.customer.name : null}\r\n                                            customer_year={customer_year}\r\n                                        />\r\n                                        <CustomerMonth\r\n                                            customer={customer_data}\r\n                                            customer_year={customer_year}\r\n                                            dashboard_metric={this.state.dashboard_metric}\r\n                                            currency_type={this.state.currency_type}\r\n                                        />\r\n\r\n                                        <div>\r\n                                            <SalesDateSelector />\r\n                                            <SalesTable sales_list={this.state.sales} from_customer={true} />\r\n                                        </div>\r\n\r\n                                    </div>}\r\n\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </div> : null\r\n                }\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth_reducer.token,\r\n        customer_list: state.list_reducer.customer_list,\r\n        customer_detail: state.list_reducer.customer_detail,\r\n        dashboard_metric: state.update_reducer.dashboard_metric,\r\n        currency_type: state.update_reducer.currency_type,\r\n        customer_year: state.update_reducer.customer_year,\r\n\r\n        sales: state.list_reducer.sales_list,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    GET_CUSTOMER_LIST_ACTION,\r\n    GET_CUSTOMER_DETAIL_ACTION,\r\n    UPDATE_CUSTOMER_YEAR_ACTION,\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CustomerPage);\r\n","import { URL } from \"../utils/_consts\";\r\n\r\nexport async function get_token(username, password) {\r\n\r\n    try {\r\n        let raw_data = await fetch(`${URL}/accounts/get-token/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                username: username,\r\n                password: password,\r\n            })\r\n\r\n        });\r\n        let data = await raw_data.json();\r\n        raw_data = null;\r\n        return data\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n        throw error;\r\n\r\n    }\r\n}\r\n","import { api_stub_get, api_stub_post } from \"./_stub\";\r\n\r\nexport async function top_customer(year, month) {\r\n\r\n    return api_stub_get(`/customer/top/month/1/?year=${year}&month=${month}`)\r\n}\r\n\r\nexport async function customer_list() {\r\n\r\n    return api_stub_get(\"/customer/\", true)\r\n}\r\n\r\nexport async function customer_detail(customer_id) {\r\n    return api_stub_get(`/customer/${customer_id}/`)\r\n}\r\n\r\nexport async function customer_create(code, name) {\r\n    const body = {\r\n        code: code,\r\n        name: name,\r\n    }\r\n    return api_stub_post(`/customer/`, body)\r\n}\r\n\r\nexport async function truck_create(customer, plate_no, first_name, last_name) {\r\n    const body = {\r\n        customer: customer,\r\n        plate_no: plate_no,\r\n        first_name: first_name,\r\n        last_name: last_name,\r\n    }\r\n    return api_stub_post(`/customer/trucks/`, body)\r\n}\r\n\r\nexport async function add_customer(depot, customer) {\r\n    const body = {\r\n        depot: depot,\r\n        customer: customer,\r\n    }\r\n    return api_stub_post(`/customer/add/`, body)\r\n}","import { api_stub_get, api_stub_post } from \"./_stub\";\r\nimport { URL } from \"../utils/_consts\";\r\n\r\nexport async function sales_list(start_date, end_date) {\r\n    start_date = new Date(start_date)\r\n    start_date = `${start_date.getFullYear()}-${start_date.getMonth() + 1}-${start_date.getDate()}`\r\n    end_date = new Date(end_date)\r\n    end_date = `${end_date.getFullYear()}-${end_date.getMonth() + 1}-${end_date.getDate()}`\r\n    return api_stub_get(`/sales/?start_date=${start_date}&end_date=${end_date}`)\r\n}\r\n\r\nexport async function sales_create(start_date, end_date, product, lpo_no, customer, truck, depot, entry_no, order_no, date, vol_obs, vol_20, selling_price, paid) {\r\n\r\n    start_date = new Date(start_date)\r\n    start_date = `${start_date.getFullYear()}-${start_date.getMonth() + 1}-${start_date.getDate()}`\r\n    end_date = new Date(end_date)\r\n    end_date = `${end_date.getFullYear()}-${end_date.getMonth() + 1}-${end_date.getDate()}`\r\n    const body = {\r\n        product: product,\r\n        lpo_no: lpo_no,\r\n        customer: customer,\r\n        truck: truck,\r\n        depot: depot,\r\n        entry_no: entry_no,\r\n        order_no: order_no,\r\n        date: date,\r\n        vol_obs: vol_obs,\r\n        vol_20: vol_20,\r\n        selling_price: selling_price,\r\n        is_paid: paid\r\n    }\r\n\r\n    return api_stub_post(`/sales/?start_date=${start_date}&end_date=${end_date}`, body)\r\n}\r\n\r\nexport async function upload_excel(file, depot_id) {\r\n\r\n    try {\r\n        let formData = new FormData()\r\n        formData.append(\"file\", file)\r\n        let rData = await fetch(`${URL}/sales/${depot_id}/upload/`, {\r\n            method: 'POST',\r\n            headers: {},\r\n            body: formData\r\n        });\r\n        let data = await rData.json();\r\n        rData = null;\r\n        return data\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n        throw error;\r\n\r\n    }\r\n}","import { get_token } from \"../../apis/auth\";\r\nimport { depot_customer, depot_list, depot_month, depot_product_month, depot_product_series, depot_series } from \"../../apis/depot_api\";\r\nimport { product_list, product_month, product_series, product_top_customer } from \"../../apis/product_api\";\r\nimport { top_customer, customer_list, customer_detail, customer_create, truck_create, add_customer } from \"../../apis/customer_api\";\r\n\r\nimport {\r\n    GET_TOKEN, GET_TOKEN_ERROR, GET_TOKEN_ERROR_REMOVE, USER_LOGGED_OUT,\r\n\r\n    GET_TOP_CUSTOMER, GET_CUSTOMER_LIST, GET_CUSTOMER_DETAIL, CUSTOMER_CREATE_ERROR, ADD_CUSTOMER, UPDATE_TOP_CUSTOMER,\r\n\r\n    GET_DEPOT_MONTH, GET_DEPOT_PRODUCT_MONTH, GET_DEPOT_LIST, GET_DEPOT_SERIES, GET_DEPOT_PRODUCT_SERIES, GET_DEPOT_CUSTOMER,\r\n    UPDATE_DEPOT_MONTH, UPDATE_DEPOT_PRODUCT_MONTH, UPDATE_DEPOT_SERIES, UPDATE_DEPOT_CUSTOMER,\r\n\r\n    GET_PRODUCT_SERIES, GET_PRODUCT_MONTH, GET_PRODUCT_TOP_CUSTOMER, GET_PRODUCT_LIST, UPDATE_PRODUCT_SERIES, UPDATE_PRODUCT_MONTH,\r\n\r\n    GET_SALES_LIST, UPLOAD_EXCEL, UPLOAD_EXCEL_ERROR, UPDATE_GET_SALES_LIST,\r\n\r\n    UPDATE_DASHBOARD_METRIC, UPDATE_SELECTION_DATES, UPDATE_CURRENCY_TYPE, UPDATE_PRODUCT_MONTH_YEAR,\r\n    UPDATE_DEPOT_MONTH_MONTH, UPDATE_DEPOT_MONTH_YEAR, UPDATE_DEPOT_PRODUCT_MONTH_MONTH, UPDATE_DEPOT_PRODUCT_MONTH_YEAR,\r\n    UPDATE_DEPOT, UPDATE_DEPOT_CUSTOMER_MONTH, UPDATE_DEPOT_CUSTOMER_YEAR,\r\n    UPDATE_TOP_CUSTOMER_YEAR, UPDATE_TOP_CUSTOMER_MONTH, UPDATE_TOP_CUSTOMER_PRODUCT, UPDATE_SALES_DATE,\r\n\r\n    UPDATE_CUSTOMER_YEAR,\r\n} from \"./types\";\r\nimport { sales_list, sales_create, upload_excel } from \"../../apis/sales_api\";\r\n\r\n// AUTHENTICATION\r\nexport const GET_TOKEN_ACTION = (username, password) => async dispatch => {\r\n    await get_token(username, password).then(data => {\r\n        if (data.token !== undefined) {\r\n            dispatch({ type: GET_TOKEN, payload: data })\r\n        }\r\n        else {\r\n            try {\r\n                let errors = data.non_field_errors\r\n                dispatch({ type: GET_TOKEN_ERROR, payload: { \"\": errors } })\r\n            } catch (e) {\r\n                dispatch({ type: GET_TOKEN_ERROR, payload: data })\r\n            }\r\n        }\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const GET_TOKEN_ERROR_REMOVE_ACTION = () => dispatch => {\r\n    dispatch({ type: GET_TOKEN_ERROR_REMOVE, payload: null })\r\n}\r\n\r\nexport const USER_LOGGED_OUT_ACTION = () => dispatch => {\r\n    dispatch({ type: USER_LOGGED_OUT, payload: null })\r\n}\r\n\r\n// CUSTOMER\r\nexport const GET_TOP_CUSTOMER_ACTION = (year, month) => async dispatch => {\r\n    await top_customer(year, month).then(data => {\r\n        dispatch({ type: GET_TOP_CUSTOMER, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_TOP_CUSTOMER_ACTION = () => async dispatch => {\r\n    dispatch({ type: UPDATE_TOP_CUSTOMER, payload: true })\r\n}\r\nexport const GET_CUSTOMER_LIST_ACTION = () => async dispatch => {\r\n    await customer_list().then(data => {\r\n        dispatch({ type: GET_CUSTOMER_LIST, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const GET_CUSTOMER_DETAIL_ACTION = (customer_id) => async dispatch => {\r\n    await customer_detail(customer_id).then(data => {\r\n        dispatch({ type: GET_CUSTOMER_DETAIL, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const CUSTOMER_CREATE_ACTION = (code, name) => async dispatch => {\r\n    await customer_create(code, name).then(data => {\r\n        dispatch({ type: GET_CUSTOMER_LIST, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const TRUCK_CREATE_ACTION = (customer, plate_no, first_name, last_name) => async dispatch => {\r\n    await truck_create(customer, plate_no, first_name, last_name).then(data => {\r\n        dispatch({ type: GET_CUSTOMER_LIST, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const ADD_CUSTOMER_ACTION = (depot, customer) => async dispatch => {\r\n    await add_customer(depot, customer).then(data => {\r\n        dispatch({ type: ADD_CUSTOMER, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const ADD_CUSTOMER_REMOVE_ACTION = () => async dispatch => {\r\n    dispatch({ type: ADD_CUSTOMER, payload: undefined })\r\n}\r\n// DEPOT\r\nexport const GET_DEPOT_LIST_ACTION = () => async dispatch => {\r\n    await depot_list().then(data => {\r\n        dispatch({ type: GET_DEPOT_LIST, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const GET_DEPOT_MONTH_ACTION = (year) => async dispatch => {\r\n    await depot_month(year).then(data => {\r\n        dispatch({ type: GET_DEPOT_MONTH, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_DEPOT_MONTH_ACTION = () => async dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_MONTH, payload: true })\r\n}\r\n\r\nexport const GET_DEPOT_PRODUCT_MONTH_ACTION = (year) => async dispatch => {\r\n    await depot_product_month(year).then(data => {\r\n        dispatch({ type: GET_DEPOT_PRODUCT_MONTH, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_DEPOT_PRODUCT_MONTH_ACTION = () => async dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_PRODUCT_MONTH, payload: true })\r\n}\r\n\r\nexport const GET_DEPOT_SERIES_ACTION = (id, start_date, end_date) => async dispatch => {\r\n\r\n    await depot_series(id, start_date, end_date).then(data => {\r\n        dispatch({ type: GET_DEPOT_SERIES, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_DEPOT_SERIES_ACTION = () => async dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_SERIES, payload: true })\r\n}\r\n\r\nexport const GET_DEPOT_PRODUCT_SERIES_ACTION = (id, start_date, end_date) => async dispatch => {\r\n\r\n    await depot_product_series(id, start_date, end_date).then(data => {\r\n        dispatch({ type: GET_DEPOT_PRODUCT_SERIES, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const GET_DEPOT_CUSTOMER_ACTION = (id, year, month) => async dispatch => {\r\n    await depot_customer(id, year, month).then(data => {\r\n        dispatch({ type: GET_DEPOT_CUSTOMER, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_DEPOT_CUSTOMER_ACTION = () => async dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_CUSTOMER, payload: true })\r\n}\r\n// PRODUCT\r\nexport const GET_PRODUCT_SERIES_ACTION = (start_date, end_date) => async dispatch => {\r\n    await product_series(start_date, end_date).then(data => {\r\n        dispatch({ type: GET_PRODUCT_SERIES, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_PRODUCT_SERIES_ACTION = () => dispatch => {\r\n    dispatch({ type: UPDATE_PRODUCT_SERIES, payload: true })\r\n}\r\n\r\nexport const GET_PRODUCT_MONTH_ACTION = (year) => async dispatch => {\r\n    await product_month(year).then(data => {\r\n        dispatch({ type: GET_PRODUCT_MONTH, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_PRODUCT_MONTH_ACTION = () => dispatch => {\r\n\r\n    dispatch({ type: UPDATE_PRODUCT_MONTH, payload: true })\r\n}\r\nexport const GET_PRODUCT_TOP_CUSTOMER_ACTION = (year, month) => async dispatch => {\r\n    await product_top_customer(year, month).then(data => {\r\n        dispatch({ type: GET_PRODUCT_TOP_CUSTOMER, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const GET_PRODUCT_LIST_ACTION = () => async dispatch => {\r\n    await product_list().then(data => {\r\n        dispatch({ type: GET_PRODUCT_LIST, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\n\r\n// SALES\r\nexport const GET_SALES_LIST_ACTION = (start_date, end_date) => async dispatch => {\r\n    await sales_list(start_date, end_date).then(data => {\r\n        dispatch({ type: GET_SALES_LIST, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_GET_SALES_LIST_ACTION = () => async dispatch => {\r\n    dispatch({ type: UPDATE_GET_SALES_LIST, payload: true })\r\n}\r\nexport const SALES_CREATE_ACTION = (start_date, end_date, product, lpo_no, customer, truck, depot, entry_no, order_no, date, vol_obs, vol_20, selling_price, paid) => async dispatch => {\r\n    await sales_create(start_date, end_date, product, lpo_no, customer, truck, depot, entry_no, order_no, date, vol_obs, vol_20, selling_price, paid).then(data => {\r\n        dispatch({ type: GET_SALES_LIST, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPLOAD_EXCEL_ACTION = (file, depot_id) => async dispatch => {\r\n\r\n    await upload_excel(file, depot_id).then(data => {\r\n        if (data.status === \"success\") {\r\n            dispatch({ type: UPLOAD_EXCEL, payload: data })\r\n        } else {\r\n            dispatch({ type: UPLOAD_EXCEL_ERROR, payload: data })\r\n        }\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n// UPDATES\r\nexport const UPDATE_DASHBOARD_METRIC_ACTION = (metric) => dispatch => {\r\n    dispatch({ type: UPDATE_DASHBOARD_METRIC, payload: metric })\r\n}\r\n\r\nexport const UPDATE_SELECTION_DATES_ACTION = (selection_dates) => dispatch => {\r\n    dispatch({ type: UPDATE_SELECTION_DATES, payload: selection_dates })\r\n}\r\n\r\nexport const UPDATE_CURRENCY_TYPE_ACTION = (currency_type) => dispatch => {\r\n    dispatch({ type: UPDATE_CURRENCY_TYPE, payload: currency_type })\r\n}\r\n\r\nexport const UPDATE_PRODUCT_MONTH_YEAR_ACTION = (year) => dispatch => {\r\n    dispatch({ type: UPDATE_PRODUCT_MONTH_YEAR, payload: year })\r\n}\r\n\r\nexport const UPDATE_DEPOT_MONTH_MONTH_ACTION = (month) => dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_MONTH_MONTH, payload: month })\r\n}\r\n\r\nexport const UPDATE_DEPOT_MONTH_YEAR_ACTION = (year) => dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_MONTH_YEAR, payload: year })\r\n}\r\n\r\nexport const UPDATE_DEPOT_PRODUCT_MONTH_YEAR_ACTION = (year) => dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_PRODUCT_MONTH_YEAR, payload: year })\r\n}\r\n\r\nexport const UPDATE_DEPOT_PRODUCT_MONTH_MONTH_ACTION = (month) => dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_PRODUCT_MONTH_MONTH, payload: month })\r\n}\r\n\r\nexport const UPDATE_DEPOT_ACTION = (month) => dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT, payload: month })\r\n}\r\n\r\nexport const UPDATE_TOP_CUSTOMER_MONTH_ACTION = (month) => dispatch => {\r\n    dispatch({ type: UPDATE_TOP_CUSTOMER_MONTH, payload: month })\r\n}\r\n\r\nexport const UPDATE_TOP_CUSTOMER_YEAR_ACTION = (year) => dispatch => {\r\n    dispatch({ type: UPDATE_TOP_CUSTOMER_YEAR, payload: year })\r\n}\r\n\r\nexport const UPDATE_TOP_CUSTOMER_PRODUCT_ACTION = (product) => dispatch => {\r\n    dispatch({ type: UPDATE_TOP_CUSTOMER_PRODUCT, payload: product })\r\n}\r\n\r\nexport const UPDATE_DEPOT_CUSTOMER_MONTH_ACTION = (month) => dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_CUSTOMER_MONTH, payload: month })\r\n}\r\n\r\nexport const UPDATE_DEPOT_CUSTOMER_YEAR_ACTION = (year) => dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_CUSTOMER_YEAR, payload: year })\r\n}\r\n\r\nexport const UPDATE_SALES_DATE_ACTION = (dates) => dispatch => {\r\n    dispatch({ type: UPDATE_SALES_DATE, payload: dates })\r\n}\r\n\r\nexport const UPDATE_CUSTOMER_YEAR_ACTION = (year) => dispatch => {\r\n    dispatch({ type: UPDATE_CUSTOMER_YEAR, payload: year })\r\n}","export const URL = location.protocol + '//' + location.host\r\n// export const URL = \"http://127.0.0.1:8000\"\r\nexport const MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]","import { URL } from \"../utils/_consts\";\r\nimport { store } from \"../redux/store\"\r\nimport { UPDATE_CURRENCY_TYPE_ACTION } from \"../redux/actions/actions\";\r\n\r\nexport const api_stub_get = async (extension, depot = false) => {\r\n    var token = store.getState().auth_reducer.token\r\n    try {\r\n        let raw_data = await fetch(`${URL}${extension}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": `Token ${token.token}`\r\n            },\r\n\r\n        });\r\n        let data = await raw_data.json();\r\n        if (token.is_staff === false && depot === false) {\r\n            data = data.filter(obj => {\r\n                return obj.name === token.depot\r\n            })\r\n        }\r\n        raw_data = null;\r\n\r\n        return data\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n        throw error;\r\n\r\n    }\r\n}\r\n\r\nexport const api_stub_post = async (extension, api_body) => {\r\n    var token = store.getState().auth_reducer.token\r\n    try {\r\n        let raw_data = await fetch(`${URL}${extension}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": `Token ${token.token}`\r\n            },\r\n            body: JSON.stringify(api_body)\r\n        });\r\n        let data = await raw_data.json();\r\n        raw_data = null;\r\n        return data\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n        throw error;\r\n\r\n    }\r\n}","export const addMonths = (date, months) => {\r\n    date.setMonth(date.getMonth() + months);\r\n    return date;\r\n}\r\n\r\nexport const currency_type_display = (currency_type) => {\r\n    if (currency_type === \"Million\") {\r\n        return \"m\"\r\n    }\r\n    else {\r\n        return \"k\"\r\n    }\r\n}\r\n\r\nexport const truncate = (num) => {\r\n    return parseFloat(num.toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0])\r\n}","import { api_stub_get } from \"./_stub\";\r\n\r\nexport async function depot_list() {\r\n    return api_stub_get(\"/depot/\")\r\n}\r\n\r\nexport async function depot_month(year) {\r\n    return api_stub_get(`/depot/month/?year=${year}`)\r\n}\r\nexport async function depot_product_month(year) {\r\n\r\n    return api_stub_get(`/product/depot/month/?year=${year}`)\r\n}\r\n\r\nexport async function depot_series(id, start_date, end_date) {\r\n    if (typeof (start_date) !== \"object\" && typeof (end_date) !== \"object\") {\r\n        start_date = new Date(start_date)\r\n        end_date = new Date(end_date)\r\n    }\r\n\r\n\r\n    start_date = `${start_date.getFullYear()}-${start_date.getMonth() + 1}-${start_date.getDate()}`\r\n\r\n    end_date = `${end_date.getFullYear()}-${end_date.getMonth() + 1}-${end_date.getDate()}`\r\n    const d = api_stub_get(`/depot/series/${id}/?start_date=${start_date}&end_date=${end_date}`, true)\r\n    return d\r\n}\r\n\r\nexport async function depot_product_series(id, start_date, end_date) {\r\n\r\n    if (typeof (start_date) !== \"object\" && typeof (end_date) !== \"object\") {\r\n        start_date = new Date(start_date)\r\n        end_date = new Date(end_date)\r\n    }\r\n\r\n    start_date = `${start_date.getFullYear()}-${start_date.getMonth() + 1}-${start_date.getDate()}`\r\n\r\n    end_date = `${end_date.getFullYear()}-${end_date.getMonth() + 1}-${end_date.getDate()}`\r\n    return api_stub_get(`/depot/product/series/${id}/?start_date=${start_date}&end_date=${end_date}`, true)\r\n}\r\n\r\nexport async function depot_customer(id, year, month) {\r\n    return api_stub_get(`/depot/customer/${id}/?year=${year}&month=${month}`, true)\r\n}","import { api_stub_get } from \"./_stub\";\r\n\r\n\r\nexport async function product_series(start_date, end_date) {\r\n    if (typeof (start_date) !== \"object\" && typeof (end_date) !== \"object\") {\r\n        start_date = new Date(start_date)\r\n        end_date = new Date(end_date)\r\n    }\r\n\r\n    start_date = `${start_date.getFullYear()}-${start_date.getMonth() + 1}-${start_date.getDate()}`\r\n\r\n    end_date = `${end_date.getFullYear()}-${end_date.getMonth() + 1}-${end_date.getDate()}`\r\n    return api_stub_get(`/product/series/?start_date=${start_date}&end_date=${end_date}`)\r\n}\r\n\r\nexport async function product_month(year) {\r\n    return api_stub_get(`/product/month/?year=${year}`)\r\n}\r\n\r\nexport async function product_top_customer(year, month) {\r\n    return api_stub_get(`/product/customer/top/?year=${year}&month=${month}`)\r\n}\r\n\r\nexport async function product_list() {\r\n    return api_stub_get(\"/product/\", true)\r\n}","import React from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\"\r\nimport { connect } from \"react-redux\"\r\nimport { HiOutlineRefresh } from \"react-icons/hi\"\r\n\r\nimport { UPDATE_CURRENCY_TYPE_ACTION } from \"../../redux/actions/actions\"\r\n\r\nclass HeaderComponent extends React.Component {\r\n    state = {\r\n        currency_type: this.props.currency_type\r\n    }\r\n\r\n    static getDerivedStateFromProps = async (props, state) => {\r\n        state.currency_type = props.currency_type\r\n        return state\r\n    }\r\n\r\n    handleCurrencyTypeChange = async (currency_type) => {\r\n\r\n        this.props.UPDATE_CURRENCY_TYPE_ACTION(currency_type)\r\n    }\r\n    render() {\r\n        const currency_types = [\"Million\", \"Thousand\"]\r\n\r\n        return (\r\n            <div className=\"header\">\r\n                <h5>{this.props.header_title}</h5>\r\n                <div className=\"header__left\">\r\n                    <div>\r\n                        <Button variant=\"secondary\" size=\"sm\" style={{ marginRight: 10 }} onClick={() => window.location.reload()}>\r\n                            <HiOutlineRefresh color=\"green\" />\r\n                        </Button>\r\n                    </div>\r\n                    <Form.Group className=\"header__currency\" controlId=\"exampleForm.ControlInput1\">\r\n                        {/* <Form.Label>Product</Form.Label> */}\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleCurrencyTypeChange(e.target.value)}>\r\n                            <option>{this.state.currency_type}</option>\r\n                            {currency_types.map((currency_type, idx) =>\r\n                                this.state.currency_type === currency_type ? null : <option key={idx} value={currency_type}>{currency_type}</option>\r\n                            )}\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"secondary\" size=\"sm\">{this.props.first_name[0]}{this.props.last_name[0]}</Button>\r\n                    <p className=\"header__header-name\">{this.props.first_name} {this.props.last_name}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currency_type: state.update_reducer.currency_type,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    UPDATE_CURRENCY_TYPE_ACTION\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps, mapDispatchToProps\r\n)(HeaderComponent);","import React from \"react\";\r\nimport { Container, Button } from 'react-bootstrap'\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { MdLogout, MdDashboard, MdOutlineListAlt, MdPeople, MdAnchor } from \"react-icons/md\";\r\nimport { Link, Navigate, NavLink } from \"react-router-dom\";\r\nimport HeaderComponent from \"./header\";\r\nimport { URL } from \"../../utils/_consts\";\r\nimport { USER_LOGGED_OUT_ACTION } from \"../../redux/actions/actions\"\r\n\r\nclass Layout extends React.Component {\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    handleLogOut = () => {\r\n        this.props.USER_LOGGED_OUT_ACTION()\r\n        this.setState({ redirect: true })\r\n\r\n    }\r\n    render() {\r\n\r\n        if (this.state.redirect) {\r\n            return <Navigate to={\"/login\"} />\r\n        }\r\n        return (\r\n            <Container fluid className=\"layout_main\">\r\n\r\n                <div className=\"layout_main__side\">\r\n                    <Link to=\"/\" className=\"layout_main__logo\">\r\n                        <img src={`${URL}/static/opl_logo.png`} alt=\"logo\" className=\"layout_main__logo--img\" />\r\n                    </Link>\r\n\r\n                    <div className=\"layout_main__links\">\r\n                        {this.props.token.is_staff === true ?\r\n                            <NavLink to=\"/\" className=\"layout_main__button\">\r\n                                <h6><span className=\"layout_main__links--span\"><MdDashboard size={20} color=\"#D04D30\" /></span>Dashboard</h6>\r\n                            </NavLink> : null}\r\n\r\n                        <NavLink to=\"/depots\" className=\"layout_main__button\">\r\n                            <h6><span className=\"layout_main__links--span\"><MdAnchor /></span>Depots</h6>\r\n                        </NavLink>\r\n\r\n                        {this.props.token.is_staff === true ?\r\n                            <NavLink to=\"/sales\" className=\"layout_main__button\">\r\n                                <h6><span className=\"layout_main__links--span\"><MdOutlineListAlt /></span>Sales</h6>\r\n                            </NavLink> : null}\r\n\r\n                        {this.props.token.is_staff === true ?\r\n                            <NavLink to=\"/customers\" className=\"layout_main__button\">\r\n                                <h6><span className=\"layout_main__links--span\"><MdPeople /></span>Customers</h6>\r\n                            </NavLink> : null}\r\n                        <Button variant=\"transparent\" className=\"layout_main__button layout_main__logout\" onClick={this.handleLogOut}>\r\n                            <h6><span className=\"layout_main__links--span\"><MdLogout /></span>Log Out</h6>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"layout_main__component\">\r\n                    <HeaderComponent header_title={this.props.header_title} first_name={this.props.token.data.first_name} last_name={this.props.token.data.last_name} />\r\n                    {this.props.children}\r\n                </div>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth_reducer.token,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    USER_LOGGED_OUT_ACTION,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Layout);\r\n"],"sourceRoot":""}