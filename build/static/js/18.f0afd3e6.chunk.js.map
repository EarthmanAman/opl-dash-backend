{"version":3,"sources":["components/depot/index.js","components/utils/header.js","components/utils/layout.js","../node_modules/react-bootstrap/esm/Row.js"],"names":["DepotProductMonth","lazy","DepotProductMonthSelect","DepotSelect","DepotSeriesChart","DepotProductSeriesChart","DepotCustomers","DepotCustomerSelect","InputComponent","DepotsPage","state","redirect","spinner","didnt_load","componentDidMount","a","setState","id","undefined","props","depot","depot_list","parseInt","idx","UPDATE_DEPOT_ACTION","GET_DEPOT_PRODUCT_MONTH_ACTION","depot_product_month_year","GET_DEPOT_SERIES_ACTION","selection_dates","startDate","endDate","GET_DEPOT_PRODUCT_SERIES_ACTION","GET_DEPOT_CUSTOMER_ACTION","depot_customer_year","depot_customer_month","this","to","header_title","token","is_staff","className","fallback","depot_product_month","depot_product_month_month","dashboard_metric","currency_type","update_depot_product_month","depot_series","update_depot_series","update_product_series","xs","depot_product_series","depot_customer","update_depot_customer","React","Component","getDerivedStateFromProps","mapDispatchToProps","connect","auth_reducer","list_reducer","update_reducer","HeaderComponent","handleCurrencyTypeChange","UPDATE_CURRENCY_TYPE_ACTION","Button","variant","size","style","marginRight","onClick","window","location","reload","color","Form","Group","controlId","Select","onChange","e","target","value","map","first_name","last_name","Layout","handleLogOut","USER_LOGGED_OUT_ACTION","Container","fluid","src","URL","alt","data","children","Row","ref","bsPrefix","as","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","classNames","displayName"],"mappings":"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","file":"static/js/18.f0afd3e6.chunk.js","sourcesContent":["import React, { lazy, Suspense } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Navigate } from 'react-router-dom';\r\nimport Layout from '../utils/layout';\r\nimport {\r\n    GET_DEPOT_PRODUCT_MONTH_ACTION,\r\n    GET_DEPOT_SERIES_ACTION,\r\n    GET_DEPOT_PRODUCT_SERIES_ACTION,\r\n    GET_DEPOT_CUSTOMER_ACTION,\r\n    UPDATE_DEPOT_ACTION,\r\n} from \"../../redux/actions/actions\"\r\n\r\nimport SpinnerComponent from '../utils/spinner';\r\n// import DepotProductMonth from './charts/depot_product_month';\r\n// import DepotProductMonthSelect from '../utils/select/depot_product_month';\r\n// import DepotSelect from '../utils/select/depot_select';\r\n// import DepotSeriesChart from './charts/depot_series';\r\n// import DepotProductSeriesChart from './charts/depot_product_series';\r\n// import DepotCustomers from './customers';\r\n// import DepotCustomerSelect from '../utils/select/depot_customer_select';\r\n// import InputComponent from \"../home/input_section\"\r\n\r\nconst DepotProductMonth = lazy(() => import('./charts/depot_product_month'));\r\nconst DepotProductMonthSelect = lazy(() => import('../utils/select/depot_product_month'));\r\nconst DepotSelect = lazy(() => import('../utils/select/depot_select'));\r\nconst DepotSeriesChart = lazy(() => import('./charts/depot_series'));\r\nconst DepotProductSeriesChart = lazy(() => import('./charts/depot_product_series'));\r\nconst DepotCustomers = lazy(() => import('./customers'));\r\nconst DepotCustomerSelect = lazy(() => import('../utils/select/depot_customer_select'));\r\nconst InputComponent = lazy(() => import('../home/input_section'));\r\n\r\nclass DepotsPage extends React.Component {\r\n    state = {\r\n        redirect: false,\r\n        spinner: false,\r\n        didnt_load: false,\r\n\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps = async (props, state) => {\r\n        const { token, depot_product_month, depot_series, depot_product_month_year, depot_product_series, depot_customer } = props\r\n\r\n        if (token === undefined || token === \"\") {\r\n            state.redirect = true\r\n            return state\r\n        }\r\n        else if (depot_product_month && depot_series && depot_product_series && depot_customer) {\r\n\r\n            state.spinner = false\r\n        }\r\n        else {\r\n            state.spinner = true\r\n        }\r\n        return state\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        this.setState({ spinner: true })\r\n        let id = this.props.depot !== undefined ? this.props.depot_list[parseInt(this.props.depot)].id : this.props.depot_list[0].id\r\n        let idx = this.props.depot !== undefined ? this.props.depot : 0\r\n\r\n        await this.props.UPDATE_DEPOT_ACTION(idx)\r\n        await this.props.GET_DEPOT_PRODUCT_MONTH_ACTION(this.props.depot_product_month_year)\r\n\r\n        await this.props.GET_DEPOT_SERIES_ACTION(id, this.props.selection_dates.startDate, this.props.selection_dates.endDate)\r\n        await this.props.GET_DEPOT_PRODUCT_SERIES_ACTION(id, this.props.selection_dates.startDate, this.props.selection_dates.endDate)\r\n        await this.props.GET_DEPOT_CUSTOMER_ACTION(id, this.props.depot_customer_year, this.props.depot_customer_month)\r\n\r\n    }\r\n\r\n    render() {\r\n        const { spinner } = this.state\r\n\r\n        if (this.state.redirect) {\r\n            return <Navigate to={\"/login\"} />\r\n        }\r\n        return (\r\n            <Layout header_title={\"DEPOTS\"}>\r\n                {spinner ? <SpinnerComponent spinner={spinner} /> :\r\n                    <div>\r\n                        {this.props.token.is_staff ?\r\n                            <Row>\r\n                                <Col>\r\n\r\n                                    <div className='chart-area'>\r\n                                        <Suspense fallback={<SpinnerComponent spinner={true} />}>\r\n                                            <DepotProductMonthSelect />\r\n                                        </Suspense>\r\n                                        <Suspense fallback={<SpinnerComponent spinner={true} />}>\r\n                                            <DepotProductMonth\r\n                                                depot_product_month={this.props.depot_product_month}\r\n                                                depot_list={this.props.depot_list}\r\n                                                depot_product_month_month={this.props.depot_product_month_month}\r\n                                                depot_product_month_year={this.props.depot_product_month_year}\r\n                                                dashboard_metric={this.props.dashboard_metric}\r\n                                                currency_type={this.props.currency_type}\r\n                                                update_depot_product_month={this.props.update_depot_product_month}\r\n                                            />\r\n                                        </Suspense>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row> : <Suspense fallback={<SpinnerComponent spinner={true} />}><InputComponent /></Suspense>}\r\n                        <Row>\r\n                            <Col>\r\n                                <DepotSelect />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <div className='chart-area'>\r\n                                    <Suspense fallback={<SpinnerComponent spinner={true} />}>\r\n                                        <DepotSeriesChart\r\n                                            depot_series={this.props.depot_series}\r\n                                            depot={this.props.depot}\r\n                                            dashboard_metric={this.props.dashboard_metric}\r\n                                            currency_type={this.props.currency_type}\r\n                                            selection_dates={this.props.selection_dates}\r\n                                            update_depot_series={this.props.update_depot_series}\r\n                                            update_product_series={this.props.update_product_series}\r\n\r\n                                        />\r\n                                    </Suspense>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col xs={7}>\r\n                                <div className='chart-area'>\r\n                                    <Suspense fallback={<SpinnerComponent spinner={true} />}>\r\n                                        <DepotProductSeriesChart\r\n                                            depot_product_series={this.props.depot_product_series}\r\n                                            depot={this.props.depot}\r\n                                            dashboard_metric={this.props.dashboard_metric}\r\n                                            currency_type={this.props.currency_type}\r\n                                            selection_dates={this.props.selection_dates}\r\n                                            update_depot_series={this.props.update_depot_series}\r\n                                            update_product_series={this.props.update_product_series}\r\n                                        />\r\n                                    </Suspense>\r\n                                </div>\r\n                            </Col>\r\n                            <Col xs={5}>\r\n                                <div className='chart-area'>\r\n                                    <Suspense fallback={<SpinnerComponent spinner={true} />}>\r\n                                        <DepotCustomerSelect />\r\n                                    </Suspense>\r\n                                    <Suspense fallback={<SpinnerComponent spinner={true} />}>\r\n                                        <DepotCustomers\r\n                                            depot_customer={this.props.depot_customer}\r\n                                            depot_customer_year={this.props.depot_customer_year}\r\n                                            depot_customer_month={this.props.depot_customer_month}\r\n                                            depot={this.props.depot}\r\n                                            currency_type={this.props.currency_type}\r\n                                            update_depot_series={this.props.update_depot_series}\r\n                                            update_depot_customer={this.props.update_depot_customer}\r\n                                        />\r\n                                    </Suspense>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                }\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth_reducer.token,\r\n        depot_series: state.list_reducer.depot_series,\r\n        depot_product_series: state.list_reducer.depot_product_series,\r\n        depot: state.update_reducer.depot,\r\n        depot_customer: state.list_reducer.depot_customer,\r\n        depot_product_month: state.list_reducer.depot_product_month ? state.list_reducer.depot_product_month : [],\r\n        depot_list: state.list_reducer.depot_list ? state.list_reducer.depot_list : [],\r\n        depot_product_month_month: state.update_reducer.depot_product_month_month,\r\n        depot_product_month_year: state.update_reducer.depot_product_month_year,\r\n        dashboard_metric: state.update_reducer.dashboard_metric,\r\n        currency_type: state.update_reducer.currency_type,\r\n        selection_dates: state.update_reducer.selection_dates,\r\n        depot_customer_year: state.update_reducer.depot_customer_year,\r\n        depot_customer_month: state.update_reducer.depot_customer_month,\r\n        update_depot_product_month: state.list_reducer.update_depot_product_month,\r\n        update_depot_series: state.list_reducer.update_depot_series,\r\n        update_product_series: state.list_reducer.update_product_series,\r\n        update_depot_customer: state.list_reducer.update_depot_customer,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    GET_DEPOT_PRODUCT_MONTH_ACTION,\r\n    GET_DEPOT_SERIES_ACTION,\r\n    GET_DEPOT_PRODUCT_SERIES_ACTION,\r\n    GET_DEPOT_CUSTOMER_ACTION,\r\n    UPDATE_DEPOT_ACTION,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DepotsPage);\r\n","import React from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\"\r\nimport { connect } from \"react-redux\"\r\nimport { HiOutlineRefresh } from \"react-icons/hi\"\r\n\r\nimport { UPDATE_CURRENCY_TYPE_ACTION } from \"../../redux/actions/actions\"\r\n\r\nclass HeaderComponent extends React.Component {\r\n    state = {\r\n        currency_type: this.props.currency_type\r\n    }\r\n\r\n    static getDerivedStateFromProps = async (props, state) => {\r\n        state.currency_type = props.currency_type\r\n        return state\r\n    }\r\n\r\n    handleCurrencyTypeChange = async (currency_type) => {\r\n\r\n        this.props.UPDATE_CURRENCY_TYPE_ACTION(currency_type)\r\n    }\r\n    render() {\r\n        const currency_types = [\"Million\", \"Thousand\"]\r\n\r\n        return (\r\n            <div className=\"header\">\r\n                <h5>{this.props.header_title}</h5>\r\n                <div className=\"header__left\">\r\n                    <div>\r\n                        <Button variant=\"secondary\" size=\"sm\" style={{ marginRight: 10 }} onClick={() => window.location.reload()}>\r\n                            <HiOutlineRefresh color=\"green\" />\r\n                        </Button>\r\n                    </div>\r\n                    <Form.Group className=\"header__currency\" controlId=\"exampleForm.ControlInput1\">\r\n                        {/* <Form.Label>Product</Form.Label> */}\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleCurrencyTypeChange(e.target.value)}>\r\n                            <option>{this.state.currency_type}</option>\r\n                            {currency_types.map((currency_type, idx) =>\r\n                                this.state.currency_type === currency_type ? null : <option key={idx} value={currency_type}>{currency_type}</option>\r\n                            )}\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"secondary\" size=\"sm\">{this.props.first_name[0]}{this.props.last_name[0]}</Button>\r\n                    <p className=\"header__header-name\">{this.props.first_name} {this.props.last_name}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currency_type: state.update_reducer.currency_type,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    UPDATE_CURRENCY_TYPE_ACTION\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps, mapDispatchToProps\r\n)(HeaderComponent);","import React from \"react\";\r\nimport { Container, Button } from 'react-bootstrap'\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { MdLogout, MdDashboard, MdOutlineListAlt, MdPeople, MdAnchor } from \"react-icons/md\";\r\nimport { Link, Navigate, NavLink } from \"react-router-dom\";\r\nimport HeaderComponent from \"./header\";\r\nimport { URL } from \"../../utils/_consts\";\r\nimport { USER_LOGGED_OUT_ACTION } from \"../../redux/actions/actions\"\r\n\r\nclass Layout extends React.Component {\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    handleLogOut = () => {\r\n        this.props.USER_LOGGED_OUT_ACTION()\r\n        this.setState({ redirect: true })\r\n\r\n    }\r\n    render() {\r\n\r\n        if (this.state.redirect) {\r\n            return <Navigate to={\"/login\"} />\r\n        }\r\n        return (\r\n            <Container fluid className=\"layout_main\">\r\n\r\n                <div className=\"layout_main__side\">\r\n                    <Link to=\"/\" className=\"layout_main__logo\">\r\n                        <img src={`${URL}/static/opl_logo.png`} alt=\"logo\" className=\"layout_main__logo--img\" />\r\n                    </Link>\r\n\r\n                    <div className=\"layout_main__links\">\r\n                        {this.props.token.is_staff === true ?\r\n                            <NavLink to=\"/\" className=\"layout_main__button\">\r\n                                <h6><span className=\"layout_main__links--span\"><MdDashboard size={20} color=\"#D04D30\" /></span>Dashboard</h6>\r\n                            </NavLink> : null}\r\n\r\n                        <NavLink to=\"/depots\" className=\"layout_main__button\">\r\n                            <h6><span className=\"layout_main__links--span\"><MdAnchor /></span>Depots</h6>\r\n                        </NavLink>\r\n\r\n\r\n                        <NavLink to=\"/sale\" className=\"layout_main__button\">\r\n                            <h6><span className=\"layout_main__links--span\"><MdOutlineListAlt /></span>Sales</h6>\r\n                        </NavLink>\r\n\r\n                        {this.props.token.is_staff === true ?\r\n                            <NavLink to=\"/customers\" className=\"layout_main__button\">\r\n                                <h6><span className=\"layout_main__links--span\"><MdPeople /></span>Customers</h6>\r\n                            </NavLink> : null}\r\n                        <Button variant=\"transparent\" className=\"layout_main__button layout_main__logout\" onClick={this.handleLogOut}>\r\n                            <h6><span className=\"layout_main__links--span\"><MdLogout /></span>Log Out</h6>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"layout_main__component\">\r\n                    <HeaderComponent header_title={this.props.header_title} first_name={this.props.token.data.first_name} last_name={this.props.token.data.last_name} />\r\n                    {this.props.children}\r\n                </div>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth_reducer.token,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    USER_LOGGED_OUT_ACTION,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Layout);\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"sourceRoot":""}