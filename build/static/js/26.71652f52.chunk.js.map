{"version":3,"sources":["components/utils/select/top_customer_select.js","components/home/customer.js","../node_modules/react-bootstrap/esm/Row.js"],"names":["TopCustomerSelect","state","year","props","top_customer_year","month","parseInt","top_customer_month","product_list","product","top_customer_product","handleChange","a","UPDATE_TOP_CUSTOMER_ACTION","GET_TOP_CUSTOMER_ACTION","GET_PRODUCT_TOP_CUSTOMER_ACTION","UPDATE_TOP_CUSTOMER_YEAR_ACTION","UPDATE_TOP_CUSTOMER_MONTH_ACTION","UPDATE_TOP_CUSTOMER_PRODUCT_ACTION","months","this","className","Form","Group","controlId","Label","Select","size","onChange","e","target","value","map","idx","name","React","Component","getDerivedStateFromProps","mapDispatchToProps","connect","update_reducer","list_reducer","TopCustomers","customers","metric","dashboard_metric","spinner","numberWithCommas","x","toString","replace","style","position","height","marginLeft","Row","slice","customer","Col","xs","sum","quantity","customer__name","location","length","update_top_customer","data_type","product_top_customer","filter","obj","revenue","date__month","top_customer","update","ref","bsPrefix","as","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","classNames","displayName"],"mappings":"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","file":"static/js/26.71652f52.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Form } from \"react-bootstrap\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n    UPDATE_TOP_CUSTOMER_MONTH_ACTION,\r\n    UPDATE_TOP_CUSTOMER_YEAR_ACTION,\r\n    UPDATE_TOP_CUSTOMER_PRODUCT_ACTION,\r\n    GET_TOP_CUSTOMER_ACTION,\r\n    GET_PRODUCT_TOP_CUSTOMER_ACTION,\r\n    UPDATE_TOP_CUSTOMER_ACTION,\r\n} from \"../../../redux/actions/actions\"\r\n\r\n\r\nclass TopCustomerSelect extends React.Component {\r\n    state = {\r\n        year: this.props.top_customer_year,\r\n        month: parseInt(this.props.top_customer_month),\r\n        product_list: this.props.product_list,\r\n        product: this.props.top_customer_product,\r\n    }\r\n\r\n    static getDerivedStateFromProps = (props, state) => {\r\n\r\n        state.year = props.top_customer_year\r\n        state.month = parseInt(props.top_customer_month)\r\n        state.product = props.top_customer_product\r\n        state.product_list = props.product_list\r\n        return state\r\n    }\r\n\r\n    handleChange = async (year, month, product) => {\r\n        await this.props.UPDATE_TOP_CUSTOMER_ACTION()\r\n        if (product === \"All\" && month === 13) {\r\n            await this.props.GET_TOP_CUSTOMER_ACTION(year, \"False\")\r\n        }\r\n        else if (product === \"All\" && month !== 13) {\r\n            await this.props.GET_TOP_CUSTOMER_ACTION(year, \"True\")\r\n        }\r\n        else if (product !== \"All\" && month === 13) {\r\n            await this.props.GET_PRODUCT_TOP_CUSTOMER_ACTION(year, \"False\")\r\n        }\r\n        else if (product !== \"All\" && month !== 13) {\r\n            await this.props.GET_PRODUCT_TOP_CUSTOMER_ACTION(year, \"True\")\r\n        }\r\n\r\n        await this.props.UPDATE_TOP_CUSTOMER_YEAR_ACTION(year)\r\n        await this.props.UPDATE_TOP_CUSTOMER_MONTH_ACTION(month)\r\n        await this.props.UPDATE_TOP_CUSTOMER_PRODUCT_ACTION(product)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const years = [2022, 2021]\r\n        const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n        const product_list = this.state.product_list\r\n        const { year, month, product } = this.state\r\n\r\n        return (\r\n            <div className=\"pie-select\">\r\n                <Form.Group className=\"mb-4 pie-select__child\" controlId=\"exampleForm.ControlInput1\">\r\n                    <Form.Label>Year</Form.Label>\r\n                    <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleChange(e.target.value, month, product)}>\r\n                        <option>{this.state.year}</option>\r\n                        {years.map((year, idx) =>\r\n                            parseInt(this.state.year) === year ? null : <option key={idx} value={year}>{year}</option>\r\n                        )}\r\n\r\n                    </Form.Select>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-4 pie-select__child\" controlId=\"exampleForm.ControlInput1\">\r\n                    <Form.Label>Month</Form.Label>\r\n                    <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleChange(year, e.target.value, product)}>\r\n\r\n                        {this.state.month === 13 ? null : <option value={this.state.month}>{months[parseInt(this.state.month)]}</option>}\r\n                        <option value={13}>All</option>\r\n\r\n                        {months.map((month, idx) =>\r\n                            parseInt(this.state.month) === idx ? null : <option key={idx} value={idx}>{month}</option>\r\n                        )}\r\n\r\n                    </Form.Select>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-4 pie-select__child\" controlId=\"exampleForm.ControlInput1\">\r\n                    <Form.Label>Product</Form.Label>\r\n                    <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleChange(year, month, e.target.value)}>\r\n                        <option>{this.state.product === \"All\" ? \"All\" : this.state.product}</option>\r\n                        {this.state.product === \"All\" ? null : <option value={\"All\"}>All</option>}\r\n                        {product_list.map((product, idx) =>\r\n                            this.state.product === product.name ? null : <option key={idx} value={product.name}>{product.name}</option>\r\n                        )}\r\n\r\n                    </Form.Select>\r\n                </Form.Group>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        top_customer_month: state.update_reducer.top_customer_month,\r\n        top_customer_year: state.update_reducer.top_customer_year,\r\n        top_customer_product: state.update_reducer.top_customer_product,\r\n        product_list: state.list_reducer.product_list ? state.list_reducer.product_list : []\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    UPDATE_TOP_CUSTOMER_MONTH_ACTION,\r\n    UPDATE_TOP_CUSTOMER_YEAR_ACTION,\r\n    UPDATE_TOP_CUSTOMER_PRODUCT_ACTION,\r\n    GET_TOP_CUSTOMER_ACTION,\r\n    GET_PRODUCT_TOP_CUSTOMER_ACTION,\r\n    UPDATE_TOP_CUSTOMER_ACTION,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TopCustomerSelect);\r\n","import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { MdTrendingDown, MdTrendingUp } from \"react-icons/md\"\r\nimport TopCustomerSelect from '../utils/select/top_customer_select'\r\nimport SpinnerComponent from '../utils/spinner'\r\n\r\nconst update = (props) => {\r\n    let data_type = null\r\n    let customers = []\r\n    let month = props.top_customer_month\r\n    if (props.top_customer_product !== \"All\") {\r\n        let customer = props.product_top_customer.filter(obj => {\r\n            return obj.name === props.top_customer_product\r\n        })\r\n        customers = customer[0].revenue\r\n        if (month !== 13) {\r\n            customers = customers.filter(obj => {\r\n                return obj.date__month === month\r\n            })\r\n\r\n            // customers = data_type[parseInt(month)].customers \r\n        }\r\n\r\n    }\r\n    else {\r\n        data_type = props.top_customer.revenue\r\n        if (parseInt(month) === 13) {\r\n            customers = data_type\r\n        }\r\n        else {\r\n\r\n            customers = data_type.filter(obj => {\r\n                return parseInt(obj.date__month) === parseInt(month)\r\n            })\r\n        }\r\n    }\r\n\r\n    return customers\r\n}\r\n\r\nclass TopCustomers extends React.Component {\r\n    state = {\r\n        customers: [],\r\n        metric: this.props.dashboard_metric,\r\n        spinner: false\r\n    }\r\n    numberWithCommas = (x) => {\r\n        try {\r\n            return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        } catch (e) {\r\n            return x\r\n        }\r\n\r\n    }\r\n\r\n\r\n    static getDerivedStateFromProps = (props, state) => {\r\n        if (props.update_top_customer) {\r\n            state.spinner = true\r\n            return state\r\n        } else {\r\n            state.spinner = false\r\n        }\r\n        let customers = update(props)\r\n        state.customers = customers\r\n        state.dashboard_metric = props.dashboard_metric\r\n        return state\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='chart-area top-customers'>\r\n                <TopCustomerSelect />\r\n                {this.state.spinner ? <div style={{ position: \"relative\", height: 350 }}><SpinnerComponent spinner={this.state.spinner} /> </div> :\r\n                    <div>\r\n                        <div className='top-customers__top'>\r\n                            <h6 style={{ marginLeft: 20 }}>Top Customers</h6>\r\n                            <div className='legends'>\r\n                                <div className='legend-item'>\r\n\r\n                                </div>\r\n\r\n                                <div className='legend-item'>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Row className='top_customers__customer-row'>\r\n                            {this.state.customers.slice(0, 8).map((customer, idx) =>\r\n                                <Col key={idx} xs={3}>\r\n\r\n                                    <div className='top-customer' >\r\n                                        <div className='top-customer__total'>\r\n                                            <h5 className='top-customer__amount'>{this.state.dashboard_metric ? \"Kshs.\" : \"Litres.\"} {this.numberWithCommas(this.props.dashboard_metric ? customer.sum : customer.quantity)}</h5>\r\n\r\n                                        </div>\r\n                                        <div className='top-customer__info'>\r\n                                            <div className='top-customer__profile'>\r\n                                                {/* {customer.increase ? <MdTrendingUp size={30} color='green' /> : <MdTrendingDown size={30} color='red' />} */}\r\n                                            </div>\r\n                                            <div>\r\n                                                <h6 className='top-customer__name'>{customer.customer__name}</h6>\r\n                                                <p className='top-customer__location'>{customer.location}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </Col>\r\n                            )}\r\n                            {this.state.customers.length === 0 ? <p className=\"no-data\">No data for this year this month. Select another month or switch years</p> : null}\r\n                        </Row>\r\n                    </div>}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TopCustomers","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"sourceRoot":""}