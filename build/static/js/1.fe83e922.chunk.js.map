{"version":3,"sources":["apis/auth.js","apis/_stub.js","apis/depot_api.js","apis/product_api.js","apis/customer_api.js","apis/sales_api.js","redux/actions/actions.js","utils/_consts.js"],"names":["get_token","username","password","a","fetch","URL","method","headers","body","JSON","stringify","raw_data","json","data","console","log","api_stub_get","extension","depot","token","store","getState","auth_reducer","is_staff","filter","obj","name","api_stub_post","api_body","depot_list","depot_month","year","depot_product_month","depot_series","id","start_date","end_date","Date","getFullYear","getMonth","getDate","d","depot_product_series","depot_customer","month","product_series","product_month","product_top_customer","product_list","top_customer","customer_list","customer_detail","customer_id","customer_create","code","truck_create","customer","plate_no","first_name","last_name","truck_list","add_customer","sales_list","sales_create","product","lpo_no","truck","entry_no","order_no","date","vol_obs","vol_20","selling_price","paid","loading_date","seal_no","amount_paid","remarks","is_paid","upload_excel","file","depot_id","formData","FormData","append","rData","GET_TOKEN_ACTION","dispatch","then","undefined","type","GET_TOKEN","payload","errors","non_field_errors","GET_TOKEN_ERROR","e","catch","error","GET_TOKEN_ERROR_REMOVE_ACTION","GET_TOKEN_ERROR_REMOVE","USER_LOGGED_OUT_ACTION","USER_LOGGED_OUT","GET_TOP_CUSTOMER_ACTION","GET_TOP_CUSTOMER","UPDATE_TOP_CUSTOMER_ACTION","UPDATE_TOP_CUSTOMER","GET_CUSTOMER_LIST_ACTION","GET_CUSTOMER_LIST","UPDATE_GET_CUSTOMER_LIST_ACTION","UPDATE_GET_CUSTOMER_LIST","GET_TRUCK_LIST_ACTION","GET_TRUCK_LIST","GET_CUSTOMER_DETAIL_ACTION","GET_CUSTOMER_DETAIL","CUSTOMER_CREATE_ACTION","TRUCK_CREATE_ACTION","TRUCK_CREATE","UPDATE_TRUCK_LIST_ACTION","UPDATE_GET_TRUCK_LIST_ACTION","UPDATE_GET_TRUCK_LIST","ADD_CUSTOMER_ACTION","ADD_CUSTOMER","ADD_CUSTOMER_REMOVE_ACTION","GET_DEPOT_LIST_ACTION","GET_DEPOT_LIST","GET_DEPOT_MONTH_ACTION","GET_DEPOT_MONTH","UPDATE_DEPOT_MONTH_ACTION","UPDATE_DEPOT_MONTH","GET_DEPOT_PRODUCT_MONTH_ACTION","GET_DEPOT_PRODUCT_MONTH","UPDATE_DEPOT_PRODUCT_MONTH_ACTION","UPDATE_DEPOT_PRODUCT_MONTH","GET_DEPOT_SERIES_ACTION","GET_DEPOT_SERIES","UPDATE_DEPOT_SERIES_ACTION","UPDATE_DEPOT_SERIES","GET_DEPOT_PRODUCT_SERIES_ACTION","GET_DEPOT_PRODUCT_SERIES","GET_DEPOT_CUSTOMER_ACTION","GET_DEPOT_CUSTOMER","UPDATE_DEPOT_CUSTOMER_ACTION","UPDATE_DEPOT_CUSTOMER","GET_PRODUCT_SERIES_ACTION","GET_PRODUCT_SERIES","UPDATE_PRODUCT_SERIES_ACTION","UPDATE_PRODUCT_SERIES","GET_PRODUCT_MONTH_ACTION","GET_PRODUCT_MONTH","UPDATE_PRODUCT_MONTH_ACTION","UPDATE_PRODUCT_MONTH","GET_PRODUCT_TOP_CUSTOMER_ACTION","GET_PRODUCT_TOP_CUSTOMER","GET_PRODUCT_LIST_ACTION","GET_PRODUCT_LIST","GET_SALES_LIST_ACTION","GET_SALES_LIST","UPDATE_GET_SALES_LIST_ACTION","UPDATE_GET_SALES_LIST","SALES_CREATE_ACTION","status","SALES_CREATE_ERROR","message","UPLOAD_EXCEL_ACTION","UPLOAD_EXCEL","UPLOAD_EXCEL_ERROR","UPDATE_DASHBOARD_METRIC_ACTION","metric","UPDATE_DASHBOARD_METRIC","UPDATE_SELECTION_DATES_ACTION","selection_dates","UPDATE_SELECTION_DATES","UPDATE_CURRENCY_TYPE_ACTION","currency_type","UPDATE_CURRENCY_TYPE","UPDATE_PRODUCT_MONTH_YEAR_ACTION","UPDATE_PRODUCT_MONTH_YEAR","UPDATE_DEPOT_MONTH_MONTH_ACTION","UPDATE_DEPOT_MONTH_MONTH","UPDATE_DEPOT_MONTH_YEAR_ACTION","UPDATE_DEPOT_MONTH_YEAR","UPDATE_DEPOT_PRODUCT_MONTH_YEAR_ACTION","UPDATE_DEPOT_PRODUCT_MONTH_YEAR","UPDATE_DEPOT_PRODUCT_MONTH_MONTH_ACTION","UPDATE_DEPOT_PRODUCT_MONTH_MONTH","UPDATE_DEPOT_ACTION","UPDATE_DEPOT","UPDATE_TOP_CUSTOMER_MONTH_ACTION","UPDATE_TOP_CUSTOMER_MONTH","UPDATE_TOP_CUSTOMER_YEAR_ACTION","UPDATE_TOP_CUSTOMER_YEAR","UPDATE_TOP_CUSTOMER_PRODUCT_ACTION","UPDATE_TOP_CUSTOMER_PRODUCT","UPDATE_DEPOT_CUSTOMER_MONTH_ACTION","UPDATE_DEPOT_CUSTOMER_MONTH","UPDATE_DEPOT_CUSTOMER_YEAR_ACTION","UPDATE_DEPOT_CUSTOMER_YEAR","UPDATE_SALES_DATE_ACTION","dates","UPDATE_SALES_DATE","UPDATE_CUSTOMER_YEAR_ACTION","UPDATE_CUSTOMER_YEAR","location","protocol","host","MONTHS"],"mappings":"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","file":"static/js/1.fe83e922.chunk.js","sourcesContent":["import { URL } from \"../utils/_consts\";\r\n\r\nexport async function get_token(username, password) {\r\n\r\n    try {\r\n        let raw_data = await fetch(`${URL}/accounts/get-token/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                username: username,\r\n                password: password,\r\n            })\r\n\r\n        });\r\n        let data = await raw_data.json();\r\n        raw_data = null;\r\n        return data\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n        throw error;\r\n\r\n    }\r\n}\r\n","import { URL } from \"../utils/_consts\";\r\nimport { store } from \"../redux/store\"\r\nimport { UPDATE_CURRENCY_TYPE_ACTION } from \"../redux/actions/actions\";\r\n\r\nexport const api_stub_get = async (extension, depot = false) => {\r\n    var token = store.getState().auth_reducer.token\r\n    try {\r\n        let raw_data = await fetch(`${URL}${extension}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": `Token ${token.token}`\r\n            },\r\n\r\n        });\r\n        let data = await raw_data.json();\r\n        if (token.is_staff === false && depot === false) {\r\n            data = data.filter(obj => {\r\n                return obj.name === token.depot\r\n            })\r\n        }\r\n        raw_data = null;\r\n\r\n        return data\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n        throw error;\r\n\r\n    }\r\n}\r\n\r\nexport const api_stub_post = async (extension, api_body) => {\r\n    var token = store.getState().auth_reducer.token\r\n    try {\r\n        let raw_data = await fetch(`${URL}${extension}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": `Token ${token.token}`\r\n            },\r\n            body: JSON.stringify(api_body)\r\n        });\r\n        let data = await raw_data.json();\r\n        raw_data = null;\r\n        return data\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n        throw error;\r\n\r\n    }\r\n}","import { api_stub_get } from \"./_stub\";\r\n\r\nexport async function depot_list() {\r\n    return api_stub_get(\"/depot/\")\r\n}\r\n\r\nexport async function depot_month(year) {\r\n    return api_stub_get(`/depot/month/?year=${year}`)\r\n}\r\nexport async function depot_product_month(year) {\r\n\r\n    return api_stub_get(`/product/depot/month/?year=${year}`)\r\n}\r\n\r\nexport async function depot_series(id, start_date, end_date) {\r\n    if (typeof (start_date) !== \"object\" && typeof (end_date) !== \"object\") {\r\n        start_date = new Date(start_date)\r\n        end_date = new Date(end_date)\r\n    }\r\n\r\n\r\n    start_date = `${start_date.getFullYear()}-${start_date.getMonth() + 1}-${start_date.getDate()}`\r\n\r\n    end_date = `${end_date.getFullYear()}-${end_date.getMonth() + 1}-${end_date.getDate()}`\r\n    const d = api_stub_get(`/depot/series/${id}/?start_date=${start_date}&end_date=${end_date}`, true)\r\n    return d\r\n}\r\n\r\nexport async function depot_product_series(id, start_date, end_date) {\r\n\r\n    if (typeof (start_date) !== \"object\" && typeof (end_date) !== \"object\") {\r\n        start_date = new Date(start_date)\r\n        end_date = new Date(end_date)\r\n    }\r\n\r\n    start_date = `${start_date.getFullYear()}-${start_date.getMonth() + 1}-${start_date.getDate()}`\r\n\r\n    end_date = `${end_date.getFullYear()}-${end_date.getMonth() + 1}-${end_date.getDate()}`\r\n    return api_stub_get(`/depot/product/series/${id}/?start_date=${start_date}&end_date=${end_date}`, true)\r\n}\r\n\r\nexport async function depot_customer(id, year, month) {\r\n    return api_stub_get(`/depot/customer/${id}/?year=${year}&month=${month}`, true)\r\n}","import { api_stub_get } from \"./_stub\";\r\n\r\n\r\nexport async function product_series(start_date, end_date) {\r\n    if (typeof (start_date) !== \"object\" && typeof (end_date) !== \"object\") {\r\n        start_date = new Date(start_date)\r\n        end_date = new Date(end_date)\r\n    }\r\n\r\n    start_date = `${start_date.getFullYear()}-${start_date.getMonth() + 1}-${start_date.getDate()}`\r\n\r\n    end_date = `${end_date.getFullYear()}-${end_date.getMonth() + 1}-${end_date.getDate()}`\r\n    return api_stub_get(`/product/series/?start_date=${start_date}&end_date=${end_date}`)\r\n}\r\n\r\nexport async function product_month(year) {\r\n    return api_stub_get(`/product/month/?year=${year}`)\r\n}\r\n\r\nexport async function product_top_customer(year, month) {\r\n    return api_stub_get(`/product/customer/top/?year=${year}&month=${month}`)\r\n}\r\n\r\nexport async function product_list() {\r\n    return api_stub_get(\"/product/\", true)\r\n}","import { api_stub_get, api_stub_post } from \"./_stub\";\r\n\r\nexport async function top_customer(year, month) {\r\n\r\n    return api_stub_get(`/customer/top/month/1/?year=${year}&month=${month}`)\r\n}\r\n\r\nexport async function customer_list() {\r\n\r\n    return api_stub_get(\"/customer/\", true)\r\n}\r\n\r\nexport async function customer_detail(customer_id) {\r\n    return api_stub_get(`/customer/${customer_id}/`)\r\n}\r\n\r\nexport async function customer_create(name, code) {\r\n    const body = {\r\n        code: code,\r\n        name: name,\r\n    }\r\n    return api_stub_post(`/customer/`, body)\r\n}\r\n\r\nexport async function truck_create(customer, plate_no, first_name, last_name) {\r\n    const body = {\r\n        customer: customer,\r\n        plate_no: plate_no,\r\n        first_name: first_name,\r\n        last_name: last_name,\r\n    }\r\n    return api_stub_post(`/customer/trucks/`, body)\r\n}\r\n\r\nexport async function truck_list() {\r\n    return api_stub_get(`/customer/trucks/`)\r\n}\r\nexport async function add_customer(depot, customer) {\r\n    const body = {\r\n        depot: depot,\r\n        customer: customer,\r\n    }\r\n    return api_stub_post(`/customer/add/`, body)\r\n}","import { api_stub_get, api_stub_post } from \"./_stub\";\r\nimport { URL } from \"../utils/_consts\";\r\n\r\nexport async function sales_list(depot, start_date, end_date) {\r\n    start_date = new Date(start_date)\r\n    start_date = `${start_date.getFullYear()}-${start_date.getMonth() + 1}-${start_date.getDate()}`\r\n    end_date = new Date(end_date)\r\n    end_date = `${end_date.getFullYear()}-${end_date.getMonth() + 1}-${end_date.getDate()}`\r\n\r\n    return api_stub_get(`/sales/?depot=${depot}&start_date=${start_date}&end_date=${end_date}`, depot = true)\r\n}\r\n\r\nexport async function sales_create(start_date, end_date, product, lpo_no, customer, truck, depot, entry_no, order_no, date, vol_obs, vol_20,\r\n    selling_price, paid, loading_date, seal_no, amount_paid, remarks) {\r\n\r\n    start_date = new Date(start_date)\r\n    start_date = `${start_date.getFullYear()}-${start_date.getMonth() + 1}-${start_date.getDate()}`\r\n    end_date = new Date(end_date)\r\n    end_date = `${end_date.getFullYear()}-${end_date.getMonth() + 1}-${end_date.getDate()}`\r\n    const body = {\r\n        product: product,\r\n        lpo_no: lpo_no,\r\n        customer: customer,\r\n        truck: truck,\r\n        depot: depot,\r\n        entry_no: entry_no,\r\n        order_no: order_no,\r\n        date: date,\r\n        vol_obs: vol_obs,\r\n        vol_20: vol_20,\r\n        selling_price: selling_price,\r\n        is_paid: paid,\r\n        loading_date: loading_date,\r\n        seal_no: seal_no,\r\n        amount_paid: amount_paid,\r\n        remarks: remarks\r\n    }\r\n\r\n    return api_stub_post(`/sales/?start_date=${start_date}&end_date=${end_date}`, body)\r\n}\r\n\r\nexport async function upload_excel(file, depot_id) {\r\n\r\n    try {\r\n        let formData = new FormData()\r\n        formData.append(\"file\", file)\r\n        let rData = await fetch(`${URL}/sales/${depot_id}/upload/`, {\r\n            method: 'POST',\r\n            headers: {},\r\n            body: formData\r\n        });\r\n        let data = await rData.json();\r\n        rData = null;\r\n        return data\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n        throw error;\r\n\r\n    }\r\n}","import { get_token } from \"../../apis/auth\";\r\nimport { depot_customer, depot_list, depot_month, depot_product_month, depot_product_series, depot_series } from \"../../apis/depot_api\";\r\nimport { product_list, product_month, product_series, product_top_customer } from \"../../apis/product_api\";\r\nimport { top_customer, customer_list, customer_detail, customer_create, truck_create, add_customer, truck_list } from \"../../apis/customer_api\";\r\n\r\nimport {\r\n    GET_TOKEN, GET_TOKEN_ERROR, GET_TOKEN_ERROR_REMOVE, USER_LOGGED_OUT,\r\n\r\n    GET_TOP_CUSTOMER, GET_CUSTOMER_LIST, GET_CUSTOMER_DETAIL, CUSTOMER_CREATE_ERROR, ADD_CUSTOMER, UPDATE_TOP_CUSTOMER, GET_TRUCK_LIST,\r\n    UPDATE_GET_TRUCK_LIST, TRUCK_CREATE, UPDATE_GET_CUSTOMER_LIST, UPDATE_TRUCK_LIST,\r\n\r\n    GET_DEPOT_MONTH, GET_DEPOT_PRODUCT_MONTH, GET_DEPOT_LIST, GET_DEPOT_SERIES, GET_DEPOT_PRODUCT_SERIES, GET_DEPOT_CUSTOMER,\r\n    UPDATE_DEPOT_MONTH, UPDATE_DEPOT_PRODUCT_MONTH, UPDATE_DEPOT_SERIES, UPDATE_DEPOT_CUSTOMER,\r\n\r\n    GET_PRODUCT_SERIES, GET_PRODUCT_MONTH, GET_PRODUCT_TOP_CUSTOMER, GET_PRODUCT_LIST, UPDATE_PRODUCT_SERIES, UPDATE_PRODUCT_MONTH,\r\n\r\n    GET_SALES_LIST, UPLOAD_EXCEL, UPLOAD_EXCEL_ERROR, UPDATE_GET_SALES_LIST, SALES_CREATE_ERROR,\r\n\r\n    UPDATE_DASHBOARD_METRIC, UPDATE_SELECTION_DATES, UPDATE_CURRENCY_TYPE, UPDATE_PRODUCT_MONTH_YEAR,\r\n    UPDATE_DEPOT_MONTH_MONTH, UPDATE_DEPOT_MONTH_YEAR, UPDATE_DEPOT_PRODUCT_MONTH_MONTH, UPDATE_DEPOT_PRODUCT_MONTH_YEAR,\r\n    UPDATE_DEPOT, UPDATE_DEPOT_CUSTOMER_MONTH, UPDATE_DEPOT_CUSTOMER_YEAR,\r\n    UPDATE_TOP_CUSTOMER_YEAR, UPDATE_TOP_CUSTOMER_MONTH, UPDATE_TOP_CUSTOMER_PRODUCT, UPDATE_SALES_DATE,\r\n\r\n    UPDATE_CUSTOMER_YEAR,\r\n} from \"./types\";\r\nimport { sales_list, sales_create, upload_excel } from \"../../apis/sales_api\";\r\n\r\n// AUTHENTICATION\r\nexport const GET_TOKEN_ACTION = (username, password) => async dispatch => {\r\n    await get_token(username, password).then(data => {\r\n        if (data.token !== undefined) {\r\n            dispatch({ type: GET_TOKEN, payload: data })\r\n        }\r\n        else {\r\n            try {\r\n                let errors = data.non_field_errors\r\n                dispatch({ type: GET_TOKEN_ERROR, payload: { \"\": errors } })\r\n            } catch (e) {\r\n                dispatch({ type: GET_TOKEN_ERROR, payload: data })\r\n            }\r\n        }\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const GET_TOKEN_ERROR_REMOVE_ACTION = () => dispatch => {\r\n    dispatch({ type: GET_TOKEN_ERROR_REMOVE, payload: null })\r\n}\r\n\r\nexport const USER_LOGGED_OUT_ACTION = () => dispatch => {\r\n    dispatch({ type: USER_LOGGED_OUT, payload: null })\r\n}\r\n\r\n// CUSTOMER\r\nexport const GET_TOP_CUSTOMER_ACTION = (year, month) => async dispatch => {\r\n    await top_customer(year, month).then(data => {\r\n        dispatch({ type: GET_TOP_CUSTOMER, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_TOP_CUSTOMER_ACTION = () => async dispatch => {\r\n    dispatch({ type: UPDATE_TOP_CUSTOMER, payload: true })\r\n}\r\nexport const GET_CUSTOMER_LIST_ACTION = () => async dispatch => {\r\n    await customer_list().then(data => {\r\n        dispatch({ type: GET_CUSTOMER_LIST, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_GET_CUSTOMER_LIST_ACTION = (data) => async dispatch => {\r\n    dispatch({ type: UPDATE_GET_CUSTOMER_LIST, payload: data })\r\n}\r\nexport const GET_TRUCK_LIST_ACTION = () => async dispatch => {\r\n    await truck_list().then(data => {\r\n        dispatch({ type: GET_TRUCK_LIST, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\n\r\nexport const GET_CUSTOMER_DETAIL_ACTION = (customer_id) => async dispatch => {\r\n    await customer_detail(customer_id).then(data => {\r\n        dispatch({ type: GET_CUSTOMER_DETAIL, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const CUSTOMER_CREATE_ACTION = (name, code) => async dispatch => {\r\n    await customer_create(name, code).then(data => {\r\n        dispatch({ type: GET_CUSTOMER_LIST, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const TRUCK_CREATE_ACTION = (customer, plate_no, first_name, last_name) => async dispatch => {\r\n    await truck_create(customer, plate_no, first_name, last_name).then(data => {\r\n\r\n        dispatch({ type: TRUCK_CREATE, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_TRUCK_LIST_ACTION = (data) => async dispatch => {\r\n    dispatch({ type: UPDATE_TRUCK_LIST_ACTION, payload: data })\r\n}\r\n\r\nexport const UPDATE_GET_TRUCK_LIST_ACTION = () => async dispatch => {\r\n    dispatch({ type: UPDATE_GET_TRUCK_LIST, payload: true })\r\n}\r\nexport const ADD_CUSTOMER_ACTION = (depot, customer) => async dispatch => {\r\n    await add_customer(depot, customer).then(data => {\r\n        dispatch({ type: ADD_CUSTOMER, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const ADD_CUSTOMER_REMOVE_ACTION = () => async dispatch => {\r\n    dispatch({ type: ADD_CUSTOMER, payload: undefined })\r\n}\r\n// DEPOT\r\nexport const GET_DEPOT_LIST_ACTION = () => async dispatch => {\r\n    await depot_list().then(data => {\r\n        dispatch({ type: GET_DEPOT_LIST, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const GET_DEPOT_MONTH_ACTION = (year) => async dispatch => {\r\n    await depot_month(year).then(data => {\r\n        dispatch({ type: GET_DEPOT_MONTH, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_DEPOT_MONTH_ACTION = () => async dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_MONTH, payload: true })\r\n}\r\n\r\nexport const GET_DEPOT_PRODUCT_MONTH_ACTION = (year) => async dispatch => {\r\n    await depot_product_month(year).then(data => {\r\n        dispatch({ type: GET_DEPOT_PRODUCT_MONTH, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_DEPOT_PRODUCT_MONTH_ACTION = () => async dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_PRODUCT_MONTH, payload: true })\r\n}\r\n\r\nexport const GET_DEPOT_SERIES_ACTION = (id, start_date, end_date) => async dispatch => {\r\n\r\n    await depot_series(id, start_date, end_date).then(data => {\r\n        dispatch({ type: GET_DEPOT_SERIES, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_DEPOT_SERIES_ACTION = () => async dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_SERIES, payload: true })\r\n}\r\n\r\nexport const GET_DEPOT_PRODUCT_SERIES_ACTION = (id, start_date, end_date) => async dispatch => {\r\n\r\n    await depot_product_series(id, start_date, end_date).then(data => {\r\n        dispatch({ type: GET_DEPOT_PRODUCT_SERIES, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const GET_DEPOT_CUSTOMER_ACTION = (id, year, month) => async dispatch => {\r\n    await depot_customer(id, year, month).then(data => {\r\n        dispatch({ type: GET_DEPOT_CUSTOMER, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_DEPOT_CUSTOMER_ACTION = () => async dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_CUSTOMER, payload: true })\r\n}\r\n// PRODUCT\r\nexport const GET_PRODUCT_SERIES_ACTION = (start_date, end_date) => async dispatch => {\r\n    await product_series(start_date, end_date).then(data => {\r\n        dispatch({ type: GET_PRODUCT_SERIES, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_PRODUCT_SERIES_ACTION = () => dispatch => {\r\n    dispatch({ type: UPDATE_PRODUCT_SERIES, payload: true })\r\n}\r\n\r\nexport const GET_PRODUCT_MONTH_ACTION = (year) => async dispatch => {\r\n    await product_month(year).then(data => {\r\n        dispatch({ type: GET_PRODUCT_MONTH, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_PRODUCT_MONTH_ACTION = () => dispatch => {\r\n\r\n    dispatch({ type: UPDATE_PRODUCT_MONTH, payload: true })\r\n}\r\nexport const GET_PRODUCT_TOP_CUSTOMER_ACTION = (year, month) => async dispatch => {\r\n    await product_top_customer(year, month).then(data => {\r\n        dispatch({ type: GET_PRODUCT_TOP_CUSTOMER, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const GET_PRODUCT_LIST_ACTION = () => async dispatch => {\r\n    await product_list().then(data => {\r\n        dispatch({ type: GET_PRODUCT_LIST, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\n\r\n// SALES\r\nexport const GET_SALES_LIST_ACTION = (depot, start_date, end_date) => async dispatch => {\r\n    await sales_list(depot, start_date, end_date).then(data => {\r\n        dispatch({ type: GET_SALES_LIST, payload: data })\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UPDATE_GET_SALES_LIST_ACTION = () => async dispatch => {\r\n    dispatch({ type: UPDATE_GET_SALES_LIST, payload: true })\r\n}\r\nexport const SALES_CREATE_ACTION = (start_date, end_date, product, lpo_no, customer, truck, depot, entry_no, order_no, date, vol_obs, vol_20, selling_price, paid,\r\n    loading_date, seal_no, amount_paid, remarks) => async dispatch => {\r\n        await sales_create(start_date, end_date, product, lpo_no, customer, truck, depot, entry_no, order_no, date, vol_obs, vol_20, selling_price, paid,\r\n            loading_date, seal_no, amount_paid, remarks).then(data => {\r\n\r\n\r\n                if (data.status === \"fail\") {\r\n                    dispatch({ type: SALES_CREATE_ERROR, payload: data.message })\r\n                } else {\r\n                    dispatch({ type: GET_SALES_LIST, payload: data })\r\n                }\r\n\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\nexport const UPLOAD_EXCEL_ACTION = (file, depot_id) => async dispatch => {\r\n\r\n    await upload_excel(file, depot_id).then(data => {\r\n        if (data.status === \"success\") {\r\n            dispatch({ type: UPLOAD_EXCEL, payload: data })\r\n        } else {\r\n            dispatch({ type: UPLOAD_EXCEL_ERROR, payload: data })\r\n        }\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n// UPDATES\r\nexport const UPDATE_DASHBOARD_METRIC_ACTION = (metric) => dispatch => {\r\n    dispatch({ type: UPDATE_DASHBOARD_METRIC, payload: metric })\r\n}\r\n\r\nexport const UPDATE_SELECTION_DATES_ACTION = (selection_dates) => dispatch => {\r\n    dispatch({ type: UPDATE_SELECTION_DATES, payload: selection_dates })\r\n}\r\n\r\nexport const UPDATE_CURRENCY_TYPE_ACTION = (currency_type) => dispatch => {\r\n    dispatch({ type: UPDATE_CURRENCY_TYPE, payload: currency_type })\r\n}\r\n\r\nexport const UPDATE_PRODUCT_MONTH_YEAR_ACTION = (year) => dispatch => {\r\n    dispatch({ type: UPDATE_PRODUCT_MONTH_YEAR, payload: year })\r\n}\r\n\r\nexport const UPDATE_DEPOT_MONTH_MONTH_ACTION = (month) => dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_MONTH_MONTH, payload: month })\r\n}\r\n\r\nexport const UPDATE_DEPOT_MONTH_YEAR_ACTION = (year) => dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_MONTH_YEAR, payload: year })\r\n}\r\n\r\nexport const UPDATE_DEPOT_PRODUCT_MONTH_YEAR_ACTION = (year) => dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_PRODUCT_MONTH_YEAR, payload: year })\r\n}\r\n\r\nexport const UPDATE_DEPOT_PRODUCT_MONTH_MONTH_ACTION = (month) => dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_PRODUCT_MONTH_MONTH, payload: month })\r\n}\r\n\r\nexport const UPDATE_DEPOT_ACTION = (month) => dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT, payload: month })\r\n}\r\n\r\nexport const UPDATE_TOP_CUSTOMER_MONTH_ACTION = (month) => dispatch => {\r\n    dispatch({ type: UPDATE_TOP_CUSTOMER_MONTH, payload: month })\r\n}\r\n\r\nexport const UPDATE_TOP_CUSTOMER_YEAR_ACTION = (year) => dispatch => {\r\n    dispatch({ type: UPDATE_TOP_CUSTOMER_YEAR, payload: year })\r\n}\r\n\r\nexport const UPDATE_TOP_CUSTOMER_PRODUCT_ACTION = (product) => dispatch => {\r\n    dispatch({ type: UPDATE_TOP_CUSTOMER_PRODUCT, payload: product })\r\n}\r\n\r\nexport const UPDATE_DEPOT_CUSTOMER_MONTH_ACTION = (month) => dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_CUSTOMER_MONTH, payload: month })\r\n}\r\n\r\nexport const UPDATE_DEPOT_CUSTOMER_YEAR_ACTION = (year) => dispatch => {\r\n    dispatch({ type: UPDATE_DEPOT_CUSTOMER_YEAR, payload: year })\r\n}\r\n\r\nexport const UPDATE_SALES_DATE_ACTION = (dates) => dispatch => {\r\n    dispatch({ type: UPDATE_SALES_DATE, payload: dates })\r\n}\r\n\r\nexport const UPDATE_CUSTOMER_YEAR_ACTION = (year) => dispatch => {\r\n    dispatch({ type: UPDATE_CUSTOMER_YEAR, payload: year })\r\n}","export const URL = location.protocol + '//' + location.host\r\n// export const URL = \"http://127.0.0.1:8000\"\r\n// export const URL = \"https://opl.azurewebsites.net\"\r\nexport const MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]"],"sourceRoot":""}