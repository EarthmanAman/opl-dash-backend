{"version":3,"file":"static/js/463.0a2f5da5.chunk.js","mappings":"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","sources":["components/sales/sales_date_selector.js","components/sales/sales_table.js","components/utils/header.js","components/utils/layout.js","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\"\r\nimport { connect } from \"react-redux\"\r\nimport { UPDATE_SALES_DATE_ACTION } from \"../../redux/actions/actions\";\r\nimport { MdCalendarToday, MdKeyboardArrowDown } from \"react-icons/md\";\r\nimport { DateRangePicker } from 'react-date-range';\r\nimport Popup from 'reactjs-popup';\r\n\r\n\r\n\r\nclass SalesDateSelector extends React.Component {\r\n    state = {\r\n        startDate: new Date(this.props.sales_date.start_date),\r\n        endDate: new Date(this.props.sales_date.end_date),\r\n        key: 'selection',\r\n        date: true,\r\n        cost: false,\r\n    }\r\n\r\n    static getDerivedStateFromProps = (props, state) => {\r\n\r\n        state.startDate = new Date(props.sales_date.start_date)\r\n        state.endDate = new Date(props.sales_date.end_date)\r\n        return state\r\n    }\r\n    handleSelect = async (ranges) => {\r\n\r\n        this.setState({\r\n            startDate: ranges.selection.startDate,\r\n            endDate: ranges.selection.endDate\r\n        })\r\n\r\n        const dates = {\r\n            start_date: ranges.selection.startDate,\r\n            end_date: ranges.selection.endDate\r\n        }\r\n        await this.props.UPDATE_SALES_DATE_ACTION(dates)\r\n    }\r\n\r\n    render() {\r\n\r\n        const start_date = this.state.startDate\r\n        const end_date = this.state.endDate\r\n        return (\r\n            <div>\r\n                <div className=\"sales-top\">\r\n\r\n                    <Popup trigger={\r\n                        <Button className='input-dates' size='sm'>\r\n                            <div className='input-display'>\r\n                                <span><MdCalendarToday color='#D04D30' size={18} /></span>\r\n                                {start_date.toDateString()} - {end_date.toDateString()}\r\n                                <span><MdKeyboardArrowDown size={18} /></span>\r\n                            </div>\r\n\r\n                        </Button>\r\n                    }\r\n                        position=\"bottom\"\r\n                    >\r\n                        <DateRangePicker\r\n                            onChange={this.handleSelect}\r\n                            showSelectionPreview={true}\r\n                            moveRangeOnFirstSelection={false}\r\n                            months={2}\r\n                            ranges={[this.state]}\r\n                            direction=\"horizontal\"\r\n                            preventSnapRefocus={true}\r\n                            calendarFocus=\"backwards\"\r\n                            className='date-range'\r\n                        />\r\n                    </Popup>\r\n\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const dates = {\r\n        start_date: new Date(2022, 3, 20),\r\n        end_date: new Date(2022, 3, 30)\r\n    }\r\n    return {\r\n        sales_date: (state.update_reducer.sales_date ? state.update_reducer.sales_date : dates),\r\n        depots: state.list_reducer.depot_list,\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    UPDATE_SALES_DATE_ACTION\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SalesDateSelector);\r\n","import React from 'react';\r\nimport Popup from 'reactjs-popup';\r\n\r\nimport { Button, Table, Form, FormControl, Pagination, Alert } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { MdEditNote, MdDelete } from \"react-icons/md\";\r\n\r\nimport { GET_SALES_LIST_ACTION } from \"../../redux/actions/actions\"\r\nimport SpinnerComponent from \"../utils/spinner\"\r\n\r\nclass SalesTable extends React.Component {\r\n    state = {\r\n        sales_list: this.props.sales_list !== undefined ? this.props.sales_list : [],\r\n        sales_date: this.props.sales_date,\r\n        depot: \"All\",\r\n        product: \"All\",\r\n        order_no: null,\r\n        active: 1,\r\n        spinner: false,\r\n        success: true,\r\n        delete_order: null,\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        let NUM_ORDERS = 50\r\n\r\n        let active = this.state.active\r\n        const start_index = (active - 1) * NUM_ORDERS\r\n        const end_index = (active * NUM_ORDERS)\r\n        if (e === \"\" || e === undefined || e === null) {\r\n            this.setState({ sales_list: this.props.sales_list.slice(start_index, end_index) })\r\n        } else {\r\n\r\n            this.setState({ order_no: e })\r\n        }\r\n    }\r\n\r\n    onSearch = (e) => {\r\n        e.preventDefault()\r\n\r\n        const { order_no } = this.state\r\n\r\n        let sales = this.props.sales_list\r\n        sales = sales.filter(function (or) {\r\n            return or.order_no.includes(order_no)\r\n        });\r\n\r\n        this.setState({ sales_list: sales, product: \"All\", depot: \"All\" })\r\n    }\r\n\r\n    static getDerivedStateFromProps = (props, state) => {\r\n        state.success = true\r\n        // state.sales_list = props.sales_list\r\n\r\n        return state\r\n    }\r\n\r\n    numberWithCommas(x) {\r\n        try {\r\n            return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        } catch (e) {\r\n            return x\r\n        }\r\n\r\n    }\r\n\r\n    handleCalc = () => {\r\n        let sales = this.state.sales_list\r\n        let total_vol = 0\r\n        let total_amount = 0\r\n\r\n        for (let i = 0; i < sales.length; i++) {\r\n            let sale = sales[i]\r\n            total_vol = total_vol + sale.vol_obs\r\n            total_amount = total_amount + (sale.vol_obs * sale.selling_price)\r\n        }\r\n\r\n        return [total_amount, total_vol]\r\n    }\r\n    handleProductChange = async (product) => {\r\n        let sales = this.props.sales_list\r\n        if (product !== \"All\") {\r\n            sales = sales.filter(function (or) {\r\n                return or.product.name === product\r\n            });\r\n        }\r\n\r\n\r\n        if (this.state.depot !== \"All\") {\r\n            const name = this.props.depots[parseInt(this.state.depot)].name\r\n            sales = sales.filter(function (or) {\r\n                return or.depot.name === name\r\n            });\r\n        }\r\n\r\n        this.setState({ sales_list: sales, product: product })\r\n\r\n    }\r\n\r\n    handleDepotChange = (idx) => {\r\n        let sales = this.props.sales_list\r\n\r\n        if (idx !== \"All\") {\r\n            const depot = this.props.depots[parseInt(idx)].name\r\n            sales = sales.filter(function (or) {\r\n                return or.depot.name === depot\r\n            });\r\n        }\r\n\r\n        const product = this.state.product\r\n        console.log(product)\r\n        if (product !== \"All\") {\r\n            sales = sales.filter(function (or) {\r\n                return or.product.name === product\r\n            });\r\n        }\r\n        this.setState({ sales_list: sales, depot: idx })\r\n\r\n    }\r\n    // componentDidMount = () => {\r\n    //     let sales_list = this.props.sales_list\r\n\r\n    //     let start_date = this.props.sales_date.start_date\r\n    //     let end_date = this.props.sales_date.end_date\r\n\r\n    //     let _sales_list = await sales_list.filter(function (or) {\r\n    //         const d = new Date(or.date)\r\n    //         if (d >= start_date && d <= end_date) {\r\n    //             return true\r\n    //         }\r\n    //         return false\r\n    //     });\r\n\r\n    //     this.setState({ sales_list: _sales_list })\r\n    //     console.log(this.state.sales_list)\r\n    // }\r\n    render() {\r\n        let items = [];\r\n        const NUM_ORDERS = 50\r\n        let active = this.state.active;\r\n        const start_index = (active - 1) * NUM_ORDERS\r\n        const end_index = active * NUM_ORDERS\r\n\r\n        for (let number = 1; number <= Math.ceil(this.state.sales_list.length / NUM_ORDERS); number++) {\r\n            items.push(\r\n                <Pagination.Item key={number} active={number === active} onClick={() => this.setState({ active: number })}>\r\n                    {number}\r\n                </Pagination.Item>,\r\n            );\r\n        }\r\n\r\n        const { depots, products } = this.props\r\n        const totals = this.handleCalc()\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.spinner ? <SpinnerComponent spinner={this.state.spinner} /> :\r\n                        <div className='sale-table'>\r\n\r\n                            <div className='sale-table__header'>\r\n                                <Form className=\"d-flex\" style={{ alignItems: \"flex-end\" }} onSubmit={this.onSearch}>\r\n                                    <Form.Group className=\"mb-4 pie-select__child sale-table__select\" controlId=\"exampleForm.ControlInput1\" style={{ marginBottom: 0 }}>\r\n                                        <Form.Label>Depot</Form.Label>\r\n                                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleDepotChange(e.target.value)}>\r\n                                            {this.state.depot === \"All\" ? null : <option value={this.state.depot}>{depots[parseInt(this.state.depot)].name}</option>}\r\n                                            <option value={\"All\"}>All</option>\r\n\r\n                                            {depots.map((depot, idx) =>\r\n                                                this.state.depot === idx ? null : <option key={idx} value={idx}>{depot.name}</option>\r\n                                            )}\r\n\r\n                                        </Form.Select>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group className=\"mb-4 pie-select__child sale-table__select\" controlId=\"exampleForm.ControlInput1\" style={{ marginBottom: 0 }}>\r\n                                        <Form.Label>Product</Form.Label>\r\n                                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleProductChange(e.target.value)}>\r\n                                            {this.state.product === \"All\" ? null : <option value={this.state.product}>{this.state.product}</option>}\r\n                                            <option value={\"All\"}>All</option>\r\n\r\n                                            {products.map((product, idx) =>\r\n                                                this.state.product === product.name ? null : <option key={idx} value={product.name}>{product.name}</option>\r\n                                            )}\r\n\r\n                                        </Form.Select>\r\n                                    </Form.Group>\r\n\r\n\r\n                                    <FormControl\r\n                                        type=\"search\"\r\n                                        placeholder=\"Search by order no.\"\r\n                                        className=\"me-2 sales-table__search-input\"\r\n                                        aria-label=\"Search by order no.\"\r\n                                        size='sm'\r\n                                        onChange={(e) => this.onSearchChange(e.target.value)}\r\n                                    />\r\n                                    <Button variant=\"outline-primary\" type='submit' >Search</Button>\r\n                                </Form>\r\n                            </div>\r\n\r\n                            <Table striped bordered hover size=\"sm\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th>Date</th>\r\n                                        {this.props.from_customer ? null :\r\n                                            <th>Depot</th>\r\n                                        }\r\n                                        <th>Product</th>\r\n                                        {this.props.from_customer ? null :\r\n                                            <th>Customer</th>\r\n                                        }\r\n                                        <th>Order No</th>\r\n                                        <th>Lpo No</th>\r\n                                        <th>Entry No</th>\r\n                                        <th>S.Price</th>\r\n                                        <th>OBS Vol</th>\r\n                                        <th>Vol@20</th>\r\n                                        <th>Amount</th>\r\n                                        <th>Paid</th>\r\n                                        {/* <th>Edit</th>\r\n                            <th>Del</th> */}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.sales_list.slice(start_index, end_index).map((sale, idx) =>\r\n                                        <tr key={idx}>\r\n                                            <td>{start_index + idx + 1}</td>\r\n                                            <td>{sale.date}</td>\r\n                                            {this.props.from_customer ? null :\r\n                                                <td>{sale.depot.name}</td>\r\n                                            }\r\n                                            <td>{sale.product.name}</td>\r\n                                            {this.props.from_customer ? null :\r\n                                                <td>{sale.customer.name}</td>\r\n                                            }\r\n                                            <td>{sale.order_no}</td>\r\n                                            <td>{sale.lpo_no}</td>\r\n                                            <td>{sale.entry_no}</td>\r\n                                            <td>{sale.selling_price}</td>\r\n                                            <td>{this.numberWithCommas(sale.vol_obs)}</td>\r\n                                            <td>{this.numberWithCommas(sale.vol_20)}</td>\r\n                                            <td>{this.numberWithCommas(sale.vol_obs * sale.selling_price)}</td>\r\n                                            <td>{sale.is_paid ? \"True\" : \"False\"}</td>\r\n                                            {/* <td>\r\n                                    <Popup\r\n                                        contentStyle={{ width: 500, minHeight: 400 }}\r\n                                        trigger={\r\n                                            <Button variant='transparent' className='sales-table__action-button'>\r\n                                                <MdEditNote color='blue' size={20} />\r\n                                            </Button>\r\n                                        }\r\n                                        position=\"left top\"\r\n                                    >\r\n\r\n\r\n                                    </Popup>\r\n                                </td>\r\n                                <td>\r\n                                    <Popup\r\n                                        contentStyle={{ width: 300, minHeight: 150 }}\r\n                                        onOpen={() => this.setState({ success: false })}\r\n                                        trigger={\r\n                                            <Button variant='transparent' className='action-button' onClick={() => this.setState({ success: false })}>\r\n                                                <MdDelete color='red' size={20} />\r\n                                            </Button>\r\n                                        }\r\n                                        position=\"left top\"\r\n                                    >\r\n\r\n\r\n                                    </Popup>\r\n                                </td> */}\r\n                                        </tr>\r\n                                    )}\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th>Totals</th>\r\n                                        <th></th>\r\n                                        <th></th>\r\n                                        {this.props.from_customer ? null :\r\n                                            <th></th>\r\n                                        }\r\n                                        {this.props.from_customer ? null :\r\n                                            <th></th>\r\n                                        }\r\n                                        <th></th>\r\n                                        <th></th>\r\n                                        <th></th>\r\n                                        <th>Kshs. {this.numberWithCommas(totals[1])}</th>\r\n                                        <th></th>\r\n                                        <th>Kshs. {this.numberWithCommas(totals[0])}</th>\r\n                                        <th></th>\r\n                                        {/* <th>Edit</th>\r\n                            <th>Del</th> */}\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                            <div>\r\n\r\n\r\n                                <Pagination size=\"sm\">{items}</Pagination>\r\n                            </div>\r\n\r\n                        </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const dates = {\r\n        start_date: new Date(2022, 1, 20),\r\n        end_date: new Date(2022, 1, 28)\r\n    }\r\n    return {\r\n        // sales_list: (state.list_reducer.sales_list ? state.list_reducer.sales_list : []),\r\n        sales_date: (state.update_reducer.sales_date ? state.update_reducer.sales_date : dates),\r\n        depots: state.list_reducer.depot_list,\r\n        products: state.list_reducer.product_list,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    GET_SALES_LIST_ACTION,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SalesTable);\r\n","import React from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\"\r\nimport { connect } from \"react-redux\"\r\nimport { UPDATE_CURRENCY_TYPE_ACTION } from \"../../redux/actions/actions\"\r\n\r\nclass HeaderComponent extends React.Component {\r\n    state = {\r\n        currency_type: this.props.currency_type\r\n    }\r\n\r\n    static getDerivedStateFromProps = async (props, state) => {\r\n        state.currency_type = props.currency_type\r\n        return state\r\n    }\r\n\r\n    handleCurrencyTypeChange = async (currency_type) => {\r\n\r\n        this.props.UPDATE_CURRENCY_TYPE_ACTION(currency_type)\r\n    }\r\n    render() {\r\n        const currency_types = [\"Million\", \"Thousand\"]\r\n\r\n        return (\r\n            <div className=\"header\">\r\n                <h5>{this.props.header_title}</h5>\r\n                <div className=\"header__left\">\r\n\r\n                    <Form.Group className=\"header__currency\" controlId=\"exampleForm.ControlInput1\">\r\n                        {/* <Form.Label>Product</Form.Label> */}\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleCurrencyTypeChange(e.target.value)}>\r\n                            <option>{this.state.currency_type}</option>\r\n                            {currency_types.map((currency_type, idx) =>\r\n                                this.state.currency_type === currency_type ? null : <option key={idx} value={currency_type}>{currency_type}</option>\r\n                            )}\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"secondary\" size=\"sm\">{this.props.first_name[0]}{this.props.last_name[0]}</Button>\r\n                    <p className=\"header__header-name\">{this.props.first_name} {this.props.last_name}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currency_type: state.update_reducer.currency_type,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    UPDATE_CURRENCY_TYPE_ACTION\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps, mapDispatchToProps\r\n)(HeaderComponent);","import React from \"react\";\r\nimport { Container, Button } from 'react-bootstrap'\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { MdLogout, MdDashboard, MdOutlineListAlt, MdPeople, MdAnchor } from \"react-icons/md\";\r\nimport { Link, Navigate, NavLink } from \"react-router-dom\";\r\nimport HeaderComponent from \"./header\";\r\nimport { URL } from \"../../utils/_consts\";\r\nimport { USER_LOGGED_OUT_ACTION } from \"../../redux/actions/actions\"\r\n\r\nclass Layout extends React.Component {\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    handleLogOut = () => {\r\n        this.props.USER_LOGGED_OUT_ACTION()\r\n        this.setState({ redirect: true })\r\n\r\n    }\r\n    render() {\r\n\r\n        if (this.state.redirect) {\r\n            return <Navigate to={\"/login\"} />\r\n        }\r\n        return (\r\n            <Container fluid className=\"layout_main\">\r\n\r\n                <div className=\"layout_main__side\">\r\n                    <Link to=\"/\" className=\"layout_main__logo\">\r\n                        <img src={`${URL}/static/opl_logo.png`} alt=\"logo\" className=\"layout_main__logo--img\" />\r\n                    </Link>\r\n\r\n                    <div className=\"layout_main__links\">\r\n                        {this.props.token.is_staff === true ?\r\n                            <NavLink to=\"/\" className=\"layout_main__button\">\r\n                                <h6><span className=\"layout_main__links--span\"><MdDashboard size={20} color=\"#D04D30\" /></span>Dashboard</h6>\r\n                            </NavLink> : null}\r\n\r\n                        <NavLink to=\"/depots\" className=\"layout_main__button\">\r\n                            <h6><span className=\"layout_main__links--span\"><MdAnchor /></span>Depots</h6>\r\n                        </NavLink>\r\n\r\n                        {this.props.token.is_staff === true ?\r\n                            <NavLink to=\"/sales\" className=\"layout_main__button\">\r\n                                <h6><span className=\"layout_main__links--span\"><MdOutlineListAlt /></span>Sales</h6>\r\n                            </NavLink> : null}\r\n\r\n                        {this.props.token.is_staff === true ?\r\n                            <NavLink to=\"/customers\" className=\"layout_main__button\">\r\n                                <h6><span className=\"layout_main__links--span\"><MdPeople /></span>Customers</h6>\r\n                            </NavLink> : null}\r\n                        <Button variant=\"transparent\" className=\"layout_main__button layout_main__logout\" onClick={this.handleLogOut}>\r\n                            <h6><span className=\"layout_main__links--span\"><MdLogout /></span>Log Out</h6>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"layout_main__component\">\r\n                    <HeaderComponent header_title={this.props.header_title} first_name={this.props.token.data.first_name} last_name={this.props.token.data.last_name} />\r\n                    {this.props.children}\r\n                </div>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth_reducer.token,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    USER_LOGGED_OUT_ACTION,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Layout);\r\n","/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  disabled: false,\n  activeLabel: '(current)'\n};\nconst PageItem = /*#__PURE__*/React.forwardRef(({\n  active,\n  disabled,\n  className,\n  style,\n  activeLabel,\n  children,\n  ...props\n}, ref) => {\n  const Component = active || disabled ? 'span' : Anchor;\n  return /*#__PURE__*/_jsx(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active,\n      disabled\n    }),\n    children: /*#__PURE__*/_jsxs(Component, {\n      className: \"page-link\",\n      disabled: disabled,\n      ...props,\n      children: [children, active && activeLabel && /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: activeLabel\n      })]\n    })\n  });\n});\nPageItem.defaultProps = defaultProps;\nPageItem.displayName = 'PageItem';\nexport default PageItem;\n\nfunction createButton(name, defaultValue, label = name) {\n  const Button = /*#__PURE__*/React.forwardRef(({\n    children,\n    ...props\n  }, ref) => /*#__PURE__*/_jsxs(PageItem, { ...props,\n    ref: ref,\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      children: children || defaultValue\n    }), /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    })]\n  }));\n  Button.displayName = name;\n  return Button;\n}\n\nexport const First = createButton('First', '«');\nexport const Prev = createButton('Prev', '‹', 'Previous');\nexport const Ellipsis = createButton('Ellipsis', '…', 'More');\nexport const Next = createButton('Next', '›');\nexport const Last = createButton('Last', '»');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * @property {PageItem} Item\n * @property {PageItem} First\n * @property {PageItem} Prev\n * @property {PageItem} Ellipsis\n * @property {PageItem} Next\n * @property {PageItem} Last\n */\nconst Pagination = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  size,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/_jsx(\"ul\", {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, size && `${decoratedBsPrefix}-${size}`)\n  });\n});\nPagination.displayName = 'Pagination';\nexport default Object.assign(Pagination, {\n  First,\n  Prev,\n  Ellipsis,\n  Item: PageItem,\n  Next,\n  Last\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;"],"names":["SalesDateSelector","state","startDate","Date","props","sales_date","start_date","endDate","end_date","key","date","cost","handleSelect","ranges","setState","selection","dates","UPDATE_SALES_DATE_ACTION","this","className","trigger","size","color","toDateString","position","onChange","showSelectionPreview","moveRangeOnFirstSelection","months","direction","preventSnapRefocus","calendarFocus","React","getDerivedStateFromProps","mapDispatchToProps","connect","update_reducer","depots","list_reducer","depot_list","SalesTable","sales_list","undefined","depot","product","order_no","active","spinner","success","delete_order","onSearchChange","e","start_index","end_index","slice","onSearch","preventDefault","sales","filter","or","includes","handleCalc","total_vol","total_amount","i","length","sale","vol_obs","selling_price","handleProductChange","name","parseInt","handleDepotChange","idx","console","log","x","toString","replace","items","number","push","onClick","Math","ceil","products","totals","style","alignItems","onSubmit","controlId","marginBottom","target","value","map","type","placeholder","variant","striped","bordered","hover","from_customer","customer","lpo_no","entry_no","numberWithCommas","vol_20","is_paid","GET_SALES_LIST_ACTION","product_list","HeaderComponent","currency_type","handleCurrencyTypeChange","UPDATE_CURRENCY_TYPE_ACTION","header_title","Form","Button","first_name","last_name","Layout","redirect","handleLogOut","USER_LOGGED_OUT_ACTION","to","Container","fluid","src","URL","alt","token","is_staff","data","children","auth_reducer","PageItem","ref","disabled","activeLabel","Component","Anchor","_jsx","classNames","_jsxs","defaultProps","displayName","createButton","defaultValue","label","First","Prev","Ellipsis","Next","Last","Pagination","bsPrefix","decoratedBsPrefix","useBootstrapPrefix","Object","assign","Item","Table","borderless","responsive","classes","table","responsiveClass"],"sourceRoot":""}